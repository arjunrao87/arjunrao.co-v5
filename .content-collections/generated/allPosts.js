
export default [
  {
    "title": "How I used the A-B-Z theory to be productive",
    "date": "2024-02-23T00:00:00.000Z",
    "tags": [
      "growth",
      "productivity"
    ],
    "lastmod": undefined,
    "draft": false,
    "summary": "Lessons I learned when building Hourly",
    "images": [
      "/static/images/abz-github.png"
    ],
    "authors": undefined,
    "layout": undefined,
    "bibliography": undefined,
    "canonicalUrl": undefined,
    "content": "I launched Hourly on Product Hunt on Dec 15, 2022. Hourly helps you decide whether you should undertake a task on your own or outsource it to someone else. It was a labor of love that took me close to 5 months from start to finish as the first commit dates to July 18, 2022 - although most of the work was done over the course of the first 2 weeks.\n\n\n# Motivation behind Hourly\n\nI tried to succinctly provide the reasons behind building Hourly [here](https://medium.com/@arjunrao87/introducing-hourly-59d5649a1cef). However, behind the scenes, I have been itching to just finish something from start to finish for a while now. The last thing I completed in 2022, was the [Net Worth Guide](https://arjunrao87.gumroad.com/l/ultimate-net-worth-guide). Since then I had been on the prowl for something that I would want to put out there in the world. My rationale was to do something small and easy that I knew I could ship, and that would build the momentum and the confidence to ship the _next_ thing which could be a slightly bigger project for me to take on. However, along the way I kept getting distracted and would try to work on something more grandiose. However, the thing that got me back on track was that each time I made progress in the little time I would spend on Hourly, it would give me the motivation to keep contributing towards it. A big reason for this was that I was getting closer to the goal I had set to myself whereas some of the other projects I was dreaming up were not getting my full care and attention.\n\n# A-B-Z framework\n\nWhen I worked on Hourly, there was one thing I was very cognizant about - that I don't try to think of all the things I need to get to a shippable product. I followed what (I think) is called the \"A-B-Z\" framework (not to be confused with the one by [Reid Hoffman ](https://greylock.com/greymatter/reid-hoffman-abzplanning/) -  if anything it's the complete opposite) that I had first heard on [My First Million](https://www.mfmpod.com/10x-employees-the-abz-framework-secret-job-interviews-and-side-hustle-generators-with-steph-smith/), although it might have other monikers.\n\nThis theory posits that if you start at \"A\" and know that your ultimate destination is \"Z\", all you need to concern yourself with is how you get to \"B\". Do not worry about anything else.\n\n![](/static/images/abz-model.png)\n\nOnce you get to \"B\", you can think of what you need to do to get to \"C\" and so on and so forth. By thinking of things in small, bite-sized increments, I was able to gain tremendous focus on the task at hand, instead of getting lost in the details of how to achieve the grand vision. Additionally, sometimes it became clear, that when I got to \"B\", I didn't need to think of \"C\", but instead I could skip to \"D\" or \"E\" which is a great way to remain agile in the way you think about problem solving. It helps you prioritize ruthlessly and not give in to the pangs of perfection that ever draw one away from their goal of completing tasks.\n\n# Designing the user experience\n\nI am not a very artistic person, and tend to think of many things in highly structured ways rather than in a flowing, design sense. This reflects itself in many ways in my own life. It is perhaps a reason for why, in the realm of my professional computer science experience, I have gravitated towards going far deeper into backend systems development rather than frontend user experiential development. Talking with machines is far easier than dealing with the idiosyncrasies and development the intuitive engagement pattern one needs to work with our fellow humans. In Hourly, it reflects itself as a fairly structured intake form that has neat lines and clean boundaries. I am always aspiring to loosen up the rigidity of my thinking in the pursuit of artistic freedom, and I am yet to find something that liberates me in that sense. However, at the end of the day, Hourly is made for humans and I needed to challenge myself on 2 fronts with respect to this\n\n- Coming up with an aesthetic visual design\n- Working with front end tech to bring that visual design to life\n\nOn the first one, I realized that unless I put pen to paper (or in this case, an Apple Pencil to iPad) I would completely struggle to visualize what I wanted to application to look like. The moment I would start sketching what I thought the page should look like, immediately provided clarity for what I was trying to accomplish.\n\n![](/static/images/abz-mock.png)\n\nOn the second point, I have come to a conclusion that I am just not the guy who can write CSS from scratch. I have spent many a moon trying to pierce through the veil of this front end wizardry, and I have always had to turn back. However, with the advent of NextJS and Tailwind CSS, I have found two technologies that assist the most hopeless front end developers, and enable them to perform tasks previously beyond their capabilities.\n\nThose were the big highlights from this journey of releasing Hourly into the wild. As the saying goes, Onward and Upward!",
    "_id": "a-b-z.mdx",
    "_raw": {
      "flattenedPath": "a-b-z"
    },
    "body": {
      "raw": "I launched Hourly on Product Hunt on Dec 15, 2022. Hourly helps you decide whether you should undertake a task on your own or outsource it to someone else. It was a labor of love that took me close to 5 months from start to finish as the first commit dates to July 18, 2022 - although most of the work was done over the course of the first 2 weeks.\n\n\n# Motivation behind Hourly\n\nI tried to succinctly provide the reasons behind building Hourly [here](https://medium.com/@arjunrao87/introducing-hourly-59d5649a1cef). However, behind the scenes, I have been itching to just finish something from start to finish for a while now. The last thing I completed in 2022, was the [Net Worth Guide](https://arjunrao87.gumroad.com/l/ultimate-net-worth-guide). Since then I had been on the prowl for something that I would want to put out there in the world. My rationale was to do something small and easy that I knew I could ship, and that would build the momentum and the confidence to ship the _next_ thing which could be a slightly bigger project for me to take on. However, along the way I kept getting distracted and would try to work on something more grandiose. However, the thing that got me back on track was that each time I made progress in the little time I would spend on Hourly, it would give me the motivation to keep contributing towards it. A big reason for this was that I was getting closer to the goal I had set to myself whereas some of the other projects I was dreaming up were not getting my full care and attention.\n\n# A-B-Z framework\n\nWhen I worked on Hourly, there was one thing I was very cognizant about - that I don't try to think of all the things I need to get to a shippable product. I followed what (I think) is called the \"A-B-Z\" framework (not to be confused with the one by [Reid Hoffman ](https://greylock.com/greymatter/reid-hoffman-abzplanning/) -  if anything it's the complete opposite) that I had first heard on [My First Million](https://www.mfmpod.com/10x-employees-the-abz-framework-secret-job-interviews-and-side-hustle-generators-with-steph-smith/), although it might have other monikers.\n\nThis theory posits that if you start at \"A\" and know that your ultimate destination is \"Z\", all you need to concern yourself with is how you get to \"B\". Do not worry about anything else.\n\n![](/static/images/abz-model.png)\n\nOnce you get to \"B\", you can think of what you need to do to get to \"C\" and so on and so forth. By thinking of things in small, bite-sized increments, I was able to gain tremendous focus on the task at hand, instead of getting lost in the details of how to achieve the grand vision. Additionally, sometimes it became clear, that when I got to \"B\", I didn't need to think of \"C\", but instead I could skip to \"D\" or \"E\" which is a great way to remain agile in the way you think about problem solving. It helps you prioritize ruthlessly and not give in to the pangs of perfection that ever draw one away from their goal of completing tasks.\n\n# Designing the user experience\n\nI am not a very artistic person, and tend to think of many things in highly structured ways rather than in a flowing, design sense. This reflects itself in many ways in my own life. It is perhaps a reason for why, in the realm of my professional computer science experience, I have gravitated towards going far deeper into backend systems development rather than frontend user experiential development. Talking with machines is far easier than dealing with the idiosyncrasies and development the intuitive engagement pattern one needs to work with our fellow humans. In Hourly, it reflects itself as a fairly structured intake form that has neat lines and clean boundaries. I am always aspiring to loosen up the rigidity of my thinking in the pursuit of artistic freedom, and I am yet to find something that liberates me in that sense. However, at the end of the day, Hourly is made for humans and I needed to challenge myself on 2 fronts with respect to this\n\n- Coming up with an aesthetic visual design\n- Working with front end tech to bring that visual design to life\n\nOn the first one, I realized that unless I put pen to paper (or in this case, an Apple Pencil to iPad) I would completely struggle to visualize what I wanted to application to look like. The moment I would start sketching what I thought the page should look like, immediately provided clarity for what I was trying to accomplish.\n\n![](/static/images/abz-mock.png)\n\nOn the second point, I have come to a conclusion that I am just not the guy who can write CSS from scratch. I have spent many a moon trying to pierce through the veil of this front end wizardry, and I have always had to turn back. However, with the advent of NextJS and Tailwind CSS, I have found two technologies that assist the most hopeless front end developers, and enable them to perform tasks previously beyond their capabilities.\n\nThose were the big highlights from this journey of releasing Hourly into the wild. As the saying goes, Onward and Upward!",
      "code": "I launched Hourly on Product Hunt on Dec 15, 2022. Hourly helps you decide whether you should undertake a task on your own or outsource it to someone else. It was a labor of love that took me close to 5 months from start to finish as the first commit dates to July 18, 2022 - although most of the work was done over the course of the first 2 weeks.\n\n\n# Motivation behind Hourly\n\nI tried to succinctly provide the reasons behind building Hourly [here](https://medium.com/@arjunrao87/introducing-hourly-59d5649a1cef). However, behind the scenes, I have been itching to just finish something from start to finish for a while now. The last thing I completed in 2022, was the [Net Worth Guide](https://arjunrao87.gumroad.com/l/ultimate-net-worth-guide). Since then I had been on the prowl for something that I would want to put out there in the world. My rationale was to do something small and easy that I knew I could ship, and that would build the momentum and the confidence to ship the _next_ thing which could be a slightly bigger project for me to take on. However, along the way I kept getting distracted and would try to work on something more grandiose. However, the thing that got me back on track was that each time I made progress in the little time I would spend on Hourly, it would give me the motivation to keep contributing towards it. A big reason for this was that I was getting closer to the goal I had set to myself whereas some of the other projects I was dreaming up were not getting my full care and attention.\n\n# A-B-Z framework\n\nWhen I worked on Hourly, there was one thing I was very cognizant about - that I don't try to think of all the things I need to get to a shippable product. I followed what (I think) is called the \"A-B-Z\" framework (not to be confused with the one by [Reid Hoffman ](https://greylock.com/greymatter/reid-hoffman-abzplanning/) -  if anything it's the complete opposite) that I had first heard on [My First Million](https://www.mfmpod.com/10x-employees-the-abz-framework-secret-job-interviews-and-side-hustle-generators-with-steph-smith/), although it might have other monikers.\n\nThis theory posits that if you start at \"A\" and know that your ultimate destination is \"Z\", all you need to concern yourself with is how you get to \"B\". Do not worry about anything else.\n\n![](/static/images/abz-model.png)\n\nOnce you get to \"B\", you can think of what you need to do to get to \"C\" and so on and so forth. By thinking of things in small, bite-sized increments, I was able to gain tremendous focus on the task at hand, instead of getting lost in the details of how to achieve the grand vision. Additionally, sometimes it became clear, that when I got to \"B\", I didn't need to think of \"C\", but instead I could skip to \"D\" or \"E\" which is a great way to remain agile in the way you think about problem solving. It helps you prioritize ruthlessly and not give in to the pangs of perfection that ever draw one away from their goal of completing tasks.\n\n# Designing the user experience\n\nI am not a very artistic person, and tend to think of many things in highly structured ways rather than in a flowing, design sense. This reflects itself in many ways in my own life. It is perhaps a reason for why, in the realm of my professional computer science experience, I have gravitated towards going far deeper into backend systems development rather than frontend user experiential development. Talking with machines is far easier than dealing with the idiosyncrasies and development the intuitive engagement pattern one needs to work with our fellow humans. In Hourly, it reflects itself as a fairly structured intake form that has neat lines and clean boundaries. I am always aspiring to loosen up the rigidity of my thinking in the pursuit of artistic freedom, and I am yet to find something that liberates me in that sense. However, at the end of the day, Hourly is made for humans and I needed to challenge myself on 2 fronts with respect to this\n\n- Coming up with an aesthetic visual design\n- Working with front end tech to bring that visual design to life\n\nOn the first one, I realized that unless I put pen to paper (or in this case, an Apple Pencil to iPad) I would completely struggle to visualize what I wanted to application to look like. The moment I would start sketching what I thought the page should look like, immediately provided clarity for what I was trying to accomplish.\n\n![](/static/images/abz-mock.png)\n\nOn the second point, I have come to a conclusion that I am just not the guy who can write CSS from scratch. I have spent many a moon trying to pierce through the veil of this front end wizardry, and I have always had to turn back. However, with the advent of NextJS and Tailwind CSS, I have found two technologies that assist the most hopeless front end developers, and enable them to perform tasks previously beyond their capabilities.\n\nThose were the big highlights from this journey of releasing Hourly into the wild. As the saying goes, Onward and Upward!"
    },
    "slug": "a-b-z",
    "path": "posts/a-b-z",
    "filePath": "a-b-z.mdx",
    "toc": [],
    "readingTime": {
      "text": "5 min read",
      "minutes": 4.305,
      "time": 258300,
      "words": 861
    },
    "structuredData": {
      "@context": "https://schema.org",
      "@type": "BlogPosting",
      "headline": "How I used the A-B-Z theory to be productive",
      "datePublished": "2024-02-23T00:00:00.000Z",
      "dateModified": "2024-02-23T00:00:00.000Z",
      "description": "Lessons I learned when building Hourly",
      "image": "/static/images/abz-github.png",
      "url": "https://arjunrao.co/posts/a-b-z"
    }
  },
  {
    "title": "A New Dawn 🌅",
    "date": "2019-04-12T00:00:00.000Z",
    "tags": [
      "growth"
    ],
    "lastmod": undefined,
    "draft": false,
    "summary": "Changing jobs",
    "images": undefined,
    "authors": undefined,
    "layout": undefined,
    "bibliography": undefined,
    "canonicalUrl": undefined,
    "content": "I left BlackRock after just over 7.5 years of working there. It was my first job out of school and was extremely formative in the kind of person I became. The latter can be attributed to both, the trials-by-fire I underwent as well as the people I interacted with over the entire duration.\n\nA lot of people fall under the delusion that the progress they make is solely by virtue of the hard work and effort they put in. Little do they know the extent to which the people around them play a role, towards the accomplishment of those goals. The emphasis of how profound an impact that has, cannot be understated. I am eternally grateful to the people who had a hand, direct or indirect, in propping me up, helping me out, challenging me, calling out my bullsh\\*t, stimulating my brain and in general, just being a friendly soundboard against which I could bounce my ideas and state of mind.\n\nNow on to the next chapter where the hustle continues...",
    "_id": "a-new-dawn.mdx",
    "_raw": {
      "flattenedPath": "a-new-dawn"
    },
    "body": {
      "raw": "I left BlackRock after just over 7.5 years of working there. It was my first job out of school and was extremely formative in the kind of person I became. The latter can be attributed to both, the trials-by-fire I underwent as well as the people I interacted with over the entire duration.\n\nA lot of people fall under the delusion that the progress they make is solely by virtue of the hard work and effort they put in. Little do they know the extent to which the people around them play a role, towards the accomplishment of those goals. The emphasis of how profound an impact that has, cannot be understated. I am eternally grateful to the people who had a hand, direct or indirect, in propping me up, helping me out, challenging me, calling out my bullsh\\*t, stimulating my brain and in general, just being a friendly soundboard against which I could bounce my ideas and state of mind.\n\nNow on to the next chapter where the hustle continues...",
      "code": "I left BlackRock after just over 7.5 years of working there. It was my first job out of school and was extremely formative in the kind of person I became. The latter can be attributed to both, the trials-by-fire I underwent as well as the people I interacted with over the entire duration.\n\nA lot of people fall under the delusion that the progress they make is solely by virtue of the hard work and effort they put in. Little do they know the extent to which the people around them play a role, towards the accomplishment of those goals. The emphasis of how profound an impact that has, cannot be understated. I am eternally grateful to the people who had a hand, direct or indirect, in propping me up, helping me out, challenging me, calling out my bullsh\\*t, stimulating my brain and in general, just being a friendly soundboard against which I could bounce my ideas and state of mind.\n\nNow on to the next chapter where the hustle continues..."
    },
    "slug": "a-new-dawn",
    "path": "posts/a-new-dawn",
    "filePath": "a-new-dawn.mdx",
    "toc": [],
    "readingTime": {
      "text": "1 min read",
      "minutes": 0.855,
      "time": 51300,
      "words": 171
    },
    "structuredData": {
      "@context": "https://schema.org",
      "@type": "BlogPosting",
      "headline": "A New Dawn 🌅",
      "datePublished": "2019-04-12T00:00:00.000Z",
      "dateModified": "2019-04-12T00:00:00.000Z",
      "description": "Changing jobs",
      "image": "/static/images/twitter-card.png",
      "url": "https://arjunrao.co/posts/a-new-dawn"
    }
  },
  {
    "title": "The Adjacent Possible",
    "date": "2020-07-22T00:00:00.000Z",
    "tags": [
      "growth"
    ],
    "lastmod": undefined,
    "draft": false,
    "summary": "Explore boundaries to unlock new possibilities",
    "images": undefined,
    "authors": undefined,
    "layout": undefined,
    "bibliography": undefined,
    "canonicalUrl": undefined,
    "content": "This is an excerpt from Charlie O' Donnell's [weekly newsletter](https://www.nycweeklynewsletter.com/) on 7/20. After I read it, 2 thoughts crossed my mind:\n\n- I have definitely thought about this but never really knew it had a name\n- I need to post this on my website, so I can reference it in the future\n\nSo here goes. Thanks Charlie!\n\n> Did you know you have something called Bitchicken to thank for the added levels of security on all your Zoom calls? That's what I learned the other day interviewing Max Khron, co-founder of Keybase. Back when General Assembly was a co-working space, he and his co-founder Chris Coyne used to mess around with various startup ideas. They got into bitcoin and came up with an idea for a game\n\n> Bitchicken is a math-based (of course!) game that relies on bids from players. It collects five bids, in the form of bitcoins, from different players. The winner is the person who bids the closest to 25 percent above the average. This person receives the majority of the payout: 98 percent. The team at Bitchicken collects a 1.9 percent share, leaving the other players to split the remaining 0.1 percent among them as proof that their bids were processed.\n\n> Part of the problem with Bitchicken, however, was actually building it in a safe and secure manner. Passing bitcoin around required trust and security--and when the team went to go fix those issues using open source software, they realized that they couldn't even be sure that the versions of the software they were getting were from the right sources. In general, trust and security across transfers of everything from video to bitcoin weren't easy--and that's where they came up with the idea for Keybase, which they recently sold to Zoom.\n\n> The lesson here is that sometimes, the idea you eventually wind up with doesn't come to you until you start moving on another problem. It's what Steven Johnson calls \"the adjacent possible\"--the thing that you get to only by arriving at an initial, interim destination. That's why I'm excited about no-code and other similar hacks to get something out there. It allows founders to move forward on an idea, which might wind up speeding up their path to something bigger\n\nReferencing the [Steven Johnson article](https://www.wsj.com/articles/SB10001424052748703989304575503730101860838) mentioned above, there is a bit more clarity on the definition of Adjacent Possible\n\n> The adjacent possible is a kind of shadow future, hovering on the edges of the present state of things, a map of all the ways in which the present can reinvent itself. The strange and beautiful truth about the adjacent possible is that its boundaries grow as you explore them. Each new combination opens up the possibility of other new combinations.\n\nSounds like a pretty good tool in developing a framework or rubric for working on a problem.",
    "_id": "adjacent-possible.mdx",
    "_raw": {
      "flattenedPath": "adjacent-possible"
    },
    "body": {
      "raw": "This is an excerpt from Charlie O' Donnell's [weekly newsletter](https://www.nycweeklynewsletter.com/) on 7/20. After I read it, 2 thoughts crossed my mind:\n\n- I have definitely thought about this but never really knew it had a name\n- I need to post this on my website, so I can reference it in the future\n\nSo here goes. Thanks Charlie!\n\n> Did you know you have something called Bitchicken to thank for the added levels of security on all your Zoom calls? That's what I learned the other day interviewing Max Khron, co-founder of Keybase. Back when General Assembly was a co-working space, he and his co-founder Chris Coyne used to mess around with various startup ideas. They got into bitcoin and came up with an idea for a game\n\n> Bitchicken is a math-based (of course!) game that relies on bids from players. It collects five bids, in the form of bitcoins, from different players. The winner is the person who bids the closest to 25 percent above the average. This person receives the majority of the payout: 98 percent. The team at Bitchicken collects a 1.9 percent share, leaving the other players to split the remaining 0.1 percent among them as proof that their bids were processed.\n\n> Part of the problem with Bitchicken, however, was actually building it in a safe and secure manner. Passing bitcoin around required trust and security--and when the team went to go fix those issues using open source software, they realized that they couldn't even be sure that the versions of the software they were getting were from the right sources. In general, trust and security across transfers of everything from video to bitcoin weren't easy--and that's where they came up with the idea for Keybase, which they recently sold to Zoom.\n\n> The lesson here is that sometimes, the idea you eventually wind up with doesn't come to you until you start moving on another problem. It's what Steven Johnson calls \"the adjacent possible\"--the thing that you get to only by arriving at an initial, interim destination. That's why I'm excited about no-code and other similar hacks to get something out there. It allows founders to move forward on an idea, which might wind up speeding up their path to something bigger\n\nReferencing the [Steven Johnson article](https://www.wsj.com/articles/SB10001424052748703989304575503730101860838) mentioned above, there is a bit more clarity on the definition of Adjacent Possible\n\n> The adjacent possible is a kind of shadow future, hovering on the edges of the present state of things, a map of all the ways in which the present can reinvent itself. The strange and beautiful truth about the adjacent possible is that its boundaries grow as you explore them. Each new combination opens up the possibility of other new combinations.\n\nSounds like a pretty good tool in developing a framework or rubric for working on a problem.",
      "code": "This is an excerpt from Charlie O' Donnell's [weekly newsletter](https://www.nycweeklynewsletter.com/) on 7/20. After I read it, 2 thoughts crossed my mind:\n\n- I have definitely thought about this but never really knew it had a name\n- I need to post this on my website, so I can reference it in the future\n\nSo here goes. Thanks Charlie!\n\n> Did you know you have something called Bitchicken to thank for the added levels of security on all your Zoom calls? That's what I learned the other day interviewing Max Khron, co-founder of Keybase. Back when General Assembly was a co-working space, he and his co-founder Chris Coyne used to mess around with various startup ideas. They got into bitcoin and came up with an idea for a game\n\n> Bitchicken is a math-based (of course!) game that relies on bids from players. It collects five bids, in the form of bitcoins, from different players. The winner is the person who bids the closest to 25 percent above the average. This person receives the majority of the payout: 98 percent. The team at Bitchicken collects a 1.9 percent share, leaving the other players to split the remaining 0.1 percent among them as proof that their bids were processed.\n\n> Part of the problem with Bitchicken, however, was actually building it in a safe and secure manner. Passing bitcoin around required trust and security--and when the team went to go fix those issues using open source software, they realized that they couldn't even be sure that the versions of the software they were getting were from the right sources. In general, trust and security across transfers of everything from video to bitcoin weren't easy--and that's where they came up with the idea for Keybase, which they recently sold to Zoom.\n\n> The lesson here is that sometimes, the idea you eventually wind up with doesn't come to you until you start moving on another problem. It's what Steven Johnson calls \"the adjacent possible\"--the thing that you get to only by arriving at an initial, interim destination. That's why I'm excited about no-code and other similar hacks to get something out there. It allows founders to move forward on an idea, which might wind up speeding up their path to something bigger\n\nReferencing the [Steven Johnson article](https://www.wsj.com/articles/SB10001424052748703989304575503730101860838) mentioned above, there is a bit more clarity on the definition of Adjacent Possible\n\n> The adjacent possible is a kind of shadow future, hovering on the edges of the present state of things, a map of all the ways in which the present can reinvent itself. The strange and beautiful truth about the adjacent possible is that its boundaries grow as you explore them. Each new combination opens up the possibility of other new combinations.\n\nSounds like a pretty good tool in developing a framework or rubric for working on a problem."
    },
    "slug": "adjacent-possible",
    "path": "posts/adjacent-possible",
    "filePath": "adjacent-possible.mdx",
    "toc": [],
    "readingTime": {
      "text": "3 min read",
      "minutes": 2.385,
      "time": 143100,
      "words": 477
    },
    "structuredData": {
      "@context": "https://schema.org",
      "@type": "BlogPosting",
      "headline": "The Adjacent Possible",
      "datePublished": "2020-07-22T00:00:00.000Z",
      "dateModified": "2020-07-22T00:00:00.000Z",
      "description": "Explore boundaries to unlock new possibilities",
      "image": "/static/images/twitter-card.png",
      "url": "https://arjunrao.co/posts/adjacent-possible"
    }
  },
  {
    "title": "How airport design mirrors software design",
    "date": "2024-06-15T00:00:00.000Z",
    "tags": [
      "growth"
    ],
    "lastmod": undefined,
    "draft": false,
    "summary": "A look into Tampa's approach to handling passenger volume",
    "images": [
      "/static/images/airport.jpeg"
    ],
    "authors": undefined,
    "layout": undefined,
    "bibliography": undefined,
    "canonicalUrl": undefined,
    "content": "When I flew out of Tampa airport (TPA), I was impressed by the layout of the airport. From a passenger’s viewpoint, there are many aspects of running an efficient airport, starting from how you arrive at the airport, all the way to how the boarding process is executed, and TPA nailed most of it. \n\n## How Tampa Airport is organized\n\nWhen you enter Tampa airport by car, you have an option to go into the “Express” lane if you don’t have any bags to check in which takes you to a separate area compared to if you had bags to check in. For domestic flights, this is an intuitive optimization since it likely splits the crowd into something like 60% (carry-on) and 40% (bag checkin), which reduces the stress on the infrastructure. \n\nOnce you enter the airport building itself, it follows a “hub and spoke” model, where the main area splits off into different terminals based on the flights you are taking. There is no security check in this main area.\n\n![](/static/images/airport2.png)\n\nYou just need to scan your boarding pass at the corresponding “spoke” where your flight is supposed to depart. Once you scan the boarding pass, you hop on a very short shuttle ride that takes you to your designated terminal. Its only after you get off that shuttle that you are required to go through security check. \n\nSince there are 4 terminals in the airport, that basically splits the traffic for security checks into ~25% chunks, reducing the load fairly drastically on the security process. While it does mean that Tampa airport needs to pay more for extra staff and scanning equipment, it results in a drastically better security checkin process.\n\n## Tampa vs NYC airports by volume\n\nMy initial assumption was that the NYC airports are handling orders of magnitude more passengers than TPA. However, after some quick research I found that for 2021 the passengers handled by these airports are \n\n- **TPA**: 16.8 million annual passengers\n- **JFK**: 29 million annual passengers\n- **LGA**: 15.6 million annual passengers\n\nJFK being about two times TPA volumes was well under what I had expected, and LGA handling fewer passengers than TPA was definitely unexpected. \n\n## Parallels with designing software systems at scale\n\nThere are many similarities between managing airport checkin traffic and queue management in real time streaming systems. After all, airport checkins are similar to website logins :). The tradeoffs of cost v/s complexity should decide what the right approach should be. Centralized airport checkins have been the norm of air travel since the beginning, so having Tampa try the decentralized queueing model feels very innovative, even though the fundamental concepts of these have existed in system design for a long time.\n\nWhile this is the route that TPA is taking, NYC airports are spending their resources to reduce the time to process an individual by having programs like TSA-Pre and Digital ID being pushed more aggressively. It can be argued that adding more queues to process passengers papers over core inefficiencies that might be worth dealing with first. Maybe having a lower mean-time-to-process a passenger is a better goal than sticking a bunch of passenger queues into your setup? Although that is purely conjecture based on my software engineering experience, and might require some actual research. \n\nUltimately, everything is function of supply and demand. As air travel continues to increase in demand, it will be interesting to see how airports continue to innovate to solve the demands of passenger scale.",
    "_id": "airport.mdx",
    "_raw": {
      "flattenedPath": "airport"
    },
    "body": {
      "raw": "When I flew out of Tampa airport (TPA), I was impressed by the layout of the airport. From a passenger’s viewpoint, there are many aspects of running an efficient airport, starting from how you arrive at the airport, all the way to how the boarding process is executed, and TPA nailed most of it. \n\n## How Tampa Airport is organized\n\nWhen you enter Tampa airport by car, you have an option to go into the “Express” lane if you don’t have any bags to check in which takes you to a separate area compared to if you had bags to check in. For domestic flights, this is an intuitive optimization since it likely splits the crowd into something like 60% (carry-on) and 40% (bag checkin), which reduces the stress on the infrastructure. \n\nOnce you enter the airport building itself, it follows a “hub and spoke” model, where the main area splits off into different terminals based on the flights you are taking. There is no security check in this main area.\n\n![](/static/images/airport2.png)\n\nYou just need to scan your boarding pass at the corresponding “spoke” where your flight is supposed to depart. Once you scan the boarding pass, you hop on a very short shuttle ride that takes you to your designated terminal. Its only after you get off that shuttle that you are required to go through security check. \n\nSince there are 4 terminals in the airport, that basically splits the traffic for security checks into ~25% chunks, reducing the load fairly drastically on the security process. While it does mean that Tampa airport needs to pay more for extra staff and scanning equipment, it results in a drastically better security checkin process.\n\n## Tampa vs NYC airports by volume\n\nMy initial assumption was that the NYC airports are handling orders of magnitude more passengers than TPA. However, after some quick research I found that for 2021 the passengers handled by these airports are \n\n- **TPA**: 16.8 million annual passengers\n- **JFK**: 29 million annual passengers\n- **LGA**: 15.6 million annual passengers\n\nJFK being about two times TPA volumes was well under what I had expected, and LGA handling fewer passengers than TPA was definitely unexpected. \n\n## Parallels with designing software systems at scale\n\nThere are many similarities between managing airport checkin traffic and queue management in real time streaming systems. After all, airport checkins are similar to website logins :). The tradeoffs of cost v/s complexity should decide what the right approach should be. Centralized airport checkins have been the norm of air travel since the beginning, so having Tampa try the decentralized queueing model feels very innovative, even though the fundamental concepts of these have existed in system design for a long time.\n\nWhile this is the route that TPA is taking, NYC airports are spending their resources to reduce the time to process an individual by having programs like TSA-Pre and Digital ID being pushed more aggressively. It can be argued that adding more queues to process passengers papers over core inefficiencies that might be worth dealing with first. Maybe having a lower mean-time-to-process a passenger is a better goal than sticking a bunch of passenger queues into your setup? Although that is purely conjecture based on my software engineering experience, and might require some actual research. \n\nUltimately, everything is function of supply and demand. As air travel continues to increase in demand, it will be interesting to see how airports continue to innovate to solve the demands of passenger scale.",
      "code": "When I flew out of Tampa airport (TPA), I was impressed by the layout of the airport. From a passenger’s viewpoint, there are many aspects of running an efficient airport, starting from how you arrive at the airport, all the way to how the boarding process is executed, and TPA nailed most of it. \n\n## How Tampa Airport is organized\n\nWhen you enter Tampa airport by car, you have an option to go into the “Express” lane if you don’t have any bags to check in which takes you to a separate area compared to if you had bags to check in. For domestic flights, this is an intuitive optimization since it likely splits the crowd into something like 60% (carry-on) and 40% (bag checkin), which reduces the stress on the infrastructure. \n\nOnce you enter the airport building itself, it follows a “hub and spoke” model, where the main area splits off into different terminals based on the flights you are taking. There is no security check in this main area.\n\n![](/static/images/airport2.png)\n\nYou just need to scan your boarding pass at the corresponding “spoke” where your flight is supposed to depart. Once you scan the boarding pass, you hop on a very short shuttle ride that takes you to your designated terminal. Its only after you get off that shuttle that you are required to go through security check. \n\nSince there are 4 terminals in the airport, that basically splits the traffic for security checks into ~25% chunks, reducing the load fairly drastically on the security process. While it does mean that Tampa airport needs to pay more for extra staff and scanning equipment, it results in a drastically better security checkin process.\n\n## Tampa vs NYC airports by volume\n\nMy initial assumption was that the NYC airports are handling orders of magnitude more passengers than TPA. However, after some quick research I found that for 2021 the passengers handled by these airports are \n\n- **TPA**: 16.8 million annual passengers\n- **JFK**: 29 million annual passengers\n- **LGA**: 15.6 million annual passengers\n\nJFK being about two times TPA volumes was well under what I had expected, and LGA handling fewer passengers than TPA was definitely unexpected. \n\n## Parallels with designing software systems at scale\n\nThere are many similarities between managing airport checkin traffic and queue management in real time streaming systems. After all, airport checkins are similar to website logins :). The tradeoffs of cost v/s complexity should decide what the right approach should be. Centralized airport checkins have been the norm of air travel since the beginning, so having Tampa try the decentralized queueing model feels very innovative, even though the fundamental concepts of these have existed in system design for a long time.\n\nWhile this is the route that TPA is taking, NYC airports are spending their resources to reduce the time to process an individual by having programs like TSA-Pre and Digital ID being pushed more aggressively. It can be argued that adding more queues to process passengers papers over core inefficiencies that might be worth dealing with first. Maybe having a lower mean-time-to-process a passenger is a better goal than sticking a bunch of passenger queues into your setup? Although that is purely conjecture based on my software engineering experience, and might require some actual research. \n\nUltimately, everything is function of supply and demand. As air travel continues to increase in demand, it will be interesting to see how airports continue to innovate to solve the demands of passenger scale."
    },
    "slug": "airport",
    "path": "posts/airport",
    "filePath": "airport.mdx",
    "toc": [],
    "readingTime": {
      "text": "3 min read",
      "minutes": 2.92,
      "time": 175200,
      "words": 584
    },
    "structuredData": {
      "@context": "https://schema.org",
      "@type": "BlogPosting",
      "headline": "How airport design mirrors software design",
      "datePublished": "2024-06-15T00:00:00.000Z",
      "dateModified": "2024-06-15T00:00:00.000Z",
      "description": "A look into Tampa's approach to handling passenger volume",
      "image": "/static/images/airport.jpeg",
      "url": "https://arjunrao.co/posts/airport"
    }
  },
  {
    "title": "A day in the life of American - How to NOT treat your customers",
    "date": "2018-12-26T00:00:00.000Z",
    "tags": [
      "travel",
      "CX",
      "culture"
    ],
    "lastmod": undefined,
    "draft": false,
    "summary": "Learning from American's terrible customer experience",
    "images": undefined,
    "authors": undefined,
    "layout": undefined,
    "bibliography": undefined,
    "canonicalUrl": undefined,
    "content": "On the 26th of December, 2018, I was scheduled to fly from New York to New Orleans by way of Charlotte. I flew American Airlines for reasons of price and timing convenience. The experience I had ( and am having, the day isn't over yet ) is filled with learnings, most of which are around communicating with your customers. It is applicable to you as well as to any professional organization.\n\nWhile my flight from New York to Charlotte was nothing particularly interesting, my flight from Charlotte to New Orleans is the one with the nuggets of wisdom.\n\nWe boarded the plane to Nola but even before we took off, we were told that there will be some delays in takeoff due to some 'technical issues'. About 15 mins later, we were told that one of the computers onboard was not starting up and the mechanics were looking to see if the secondary and tertiary computers were sufficient for providing the inputs the first computer was supposed to give. Most people have no idea what this even means, and even less what repercussions it has, and this brings us to the first learning-\n\n> **If you convey negative messages to your customers, do so in a way that does not create panic or confusion**\n\nI bet the pilot had the best intentions in letting us know this, and maybe some people appreciate this level of information, but if you observed the passenger reaction, you would see that most people started getting pretty concerned about this development. Regardless, it was deemed that the plane was fit to fly, although it pushed our departure by about an hour.\n\nPersonally, I was just glad we were on our way to our destination. Around 30 mins into the flight I could sense something was not right because we would keep climbing and then descending back down. After 10 mins of this, the pilot announces that the plane is facing depressurization each time it climbed to about 28000 feet and that they could not continue to New Orleans at this altitude and would need to turn back. While this is the right level of information given, in my opinion, any cabin pressure talk in a metal tube flying at 700 miles per hour is bound to cause concern, which was evident in the murmurs that went around the aircraft. The pilot went on to say that since the fuel load was pretty high(as we were less than halfway into the flight), they would not be able to do a landing back at Charlotte, with the extra weight. He continued to say that they would need to 'dump some gear' and that if we heard any noises in the next few minutes, we should disregard it. Sure enough, there were noises and I would love to know how fuel actually gets dumped in a moving aircraft, but that is neither here nor there.\n\nAfter a bunch of turbulence and some flying around, the plane landed back from where it took off about an hour ago. We were told that we should proceed to Gate B11 where we would be told what the next steps would be. Once we had all meandered towards there, there was no indication of anything regarding our flight. Which leads to the next learning-\n\n> **When your customers are filled with doubt, you must have the confidence and the wherewithal to assuage their doubts and fears.**\n\nThis is not a point in favor of mollycoddling your customers. It is about maintaining an open and clear dialogue to ensure that their concerns are being met with an adequate response.\n\nWe stood in front of the gate for about 35 minutes before we had the first announcement come around, which was frankly astounding. The gate announcer said - \"We have a spare aircraft ready to go, we also have a pilot and copilot but we are unable to locate the flight attendants and are waiting for their arrival\". I honestly thought it was a joke, until I realized it was not.\n\nOver the course of the next 2 hours, about every 15-20 minutes, this same line was repeated about how they are not able to locate the flight attendants without whom the flight cannot take off. First off, doh. Secondly, in this day and age, how can you not locate a crew of 4 flight attendants? Either American was lying about the cause for the delay, or there is something systemically wrong in their approach to running an airline organization, either of which is a very bad sign for a company their size.\n\nAfter about 2.5 - 3 hours of waiting, the gate attendant abruptly announces the flight is canceled and that we should go talk to Customer Service to book a replacement flight which brings me to my next learning-\n\n> **When something goes wrong, be honest with your customers and be empathetic. Don't bullshit them, they will see right through you.**\n\nWhatever, the reason for the delay, if American had been upfront and honest about it, it would be orders of magnitude better in terms of customer experience. If the flight was canceled for reasons of inclement weather, no one can blame them for it! However, it is the lack of transparency that bothered me and most others. Once the flight was canceled, the complete lack of connection, pun intended, and empathy, quickly washed off any little respect I had for this carrier.\n\nTo be honest, this is my first canceled airline, and I guess I am lucky for that, which is why I did not understand the Usain Bolt-like sprinters that ran towards Customer Service. I thought it was to voice grievance with the airline, but I soon realized it was to rebook their flights which had not even occurred to me in the 1 minute that had elapsed since I was told the flight was canceled. This resulted in me being pretty far back in a line of a planeful of people seeking recompense and readjustment of their flight booking schedule. As I saw the line creep ahead at a snails pace and listen to the people around me grumble about how they will get AA to give them a voucher and ask them about which flight they can get on next, I got my next and last learning, yet, for the day-\n\n> **If you don't hustle, you will not get the success you seek. As a company, embrace all forms of tech to provide touchpoints with your customers. As a customer, and in life, you have to stay hungry and in touch with the most effective means of obtaining information, to maintain a competitive edge. Work smart over work hard.**\n\nWhat makes me say this out of the blue? As I heard people around me complain, all of us waiting in a long line that didn't seem to move, I pulled out my American Airlines app to see if there were any updates. On the app there was a notification saying that I could rebook my flight for no extra cost on the 8pm flight nonstop to New Orleans that same day. Within the matter of a few clicks, I was all set for that flight. I told the people around me about this, but most of them didn't have the app installed and/or their account setup and by the time a few of them got through, the flight was booked out. They will be put on flights for the next day, but that is an extra bit of hassle that a person, who has been waiting to reach their destination, does not want to deal with.\n\nIn conclusion, while the app technology for AA is on point, nothing else seemed to be. In an age of competitive markets, having a great product, the highest standards of professionalism and an empathy for your customers, outranks many other considerations for an effective organization.\n\nIf you have any thoughts about this piece, reach me [here](https://mobile.twitter.com/raoarjun/)!",
    "_id": "american.mdx",
    "_raw": {
      "flattenedPath": "american"
    },
    "body": {
      "raw": "On the 26th of December, 2018, I was scheduled to fly from New York to New Orleans by way of Charlotte. I flew American Airlines for reasons of price and timing convenience. The experience I had ( and am having, the day isn't over yet ) is filled with learnings, most of which are around communicating with your customers. It is applicable to you as well as to any professional organization.\n\nWhile my flight from New York to Charlotte was nothing particularly interesting, my flight from Charlotte to New Orleans is the one with the nuggets of wisdom.\n\nWe boarded the plane to Nola but even before we took off, we were told that there will be some delays in takeoff due to some 'technical issues'. About 15 mins later, we were told that one of the computers onboard was not starting up and the mechanics were looking to see if the secondary and tertiary computers were sufficient for providing the inputs the first computer was supposed to give. Most people have no idea what this even means, and even less what repercussions it has, and this brings us to the first learning-\n\n> **If you convey negative messages to your customers, do so in a way that does not create panic or confusion**\n\nI bet the pilot had the best intentions in letting us know this, and maybe some people appreciate this level of information, but if you observed the passenger reaction, you would see that most people started getting pretty concerned about this development. Regardless, it was deemed that the plane was fit to fly, although it pushed our departure by about an hour.\n\nPersonally, I was just glad we were on our way to our destination. Around 30 mins into the flight I could sense something was not right because we would keep climbing and then descending back down. After 10 mins of this, the pilot announces that the plane is facing depressurization each time it climbed to about 28000 feet and that they could not continue to New Orleans at this altitude and would need to turn back. While this is the right level of information given, in my opinion, any cabin pressure talk in a metal tube flying at 700 miles per hour is bound to cause concern, which was evident in the murmurs that went around the aircraft. The pilot went on to say that since the fuel load was pretty high(as we were less than halfway into the flight), they would not be able to do a landing back at Charlotte, with the extra weight. He continued to say that they would need to 'dump some gear' and that if we heard any noises in the next few minutes, we should disregard it. Sure enough, there were noises and I would love to know how fuel actually gets dumped in a moving aircraft, but that is neither here nor there.\n\nAfter a bunch of turbulence and some flying around, the plane landed back from where it took off about an hour ago. We were told that we should proceed to Gate B11 where we would be told what the next steps would be. Once we had all meandered towards there, there was no indication of anything regarding our flight. Which leads to the next learning-\n\n> **When your customers are filled with doubt, you must have the confidence and the wherewithal to assuage their doubts and fears.**\n\nThis is not a point in favor of mollycoddling your customers. It is about maintaining an open and clear dialogue to ensure that their concerns are being met with an adequate response.\n\nWe stood in front of the gate for about 35 minutes before we had the first announcement come around, which was frankly astounding. The gate announcer said - \"We have a spare aircraft ready to go, we also have a pilot and copilot but we are unable to locate the flight attendants and are waiting for their arrival\". I honestly thought it was a joke, until I realized it was not.\n\nOver the course of the next 2 hours, about every 15-20 minutes, this same line was repeated about how they are not able to locate the flight attendants without whom the flight cannot take off. First off, doh. Secondly, in this day and age, how can you not locate a crew of 4 flight attendants? Either American was lying about the cause for the delay, or there is something systemically wrong in their approach to running an airline organization, either of which is a very bad sign for a company their size.\n\nAfter about 2.5 - 3 hours of waiting, the gate attendant abruptly announces the flight is canceled and that we should go talk to Customer Service to book a replacement flight which brings me to my next learning-\n\n> **When something goes wrong, be honest with your customers and be empathetic. Don't bullshit them, they will see right through you.**\n\nWhatever, the reason for the delay, if American had been upfront and honest about it, it would be orders of magnitude better in terms of customer experience. If the flight was canceled for reasons of inclement weather, no one can blame them for it! However, it is the lack of transparency that bothered me and most others. Once the flight was canceled, the complete lack of connection, pun intended, and empathy, quickly washed off any little respect I had for this carrier.\n\nTo be honest, this is my first canceled airline, and I guess I am lucky for that, which is why I did not understand the Usain Bolt-like sprinters that ran towards Customer Service. I thought it was to voice grievance with the airline, but I soon realized it was to rebook their flights which had not even occurred to me in the 1 minute that had elapsed since I was told the flight was canceled. This resulted in me being pretty far back in a line of a planeful of people seeking recompense and readjustment of their flight booking schedule. As I saw the line creep ahead at a snails pace and listen to the people around me grumble about how they will get AA to give them a voucher and ask them about which flight they can get on next, I got my next and last learning, yet, for the day-\n\n> **If you don't hustle, you will not get the success you seek. As a company, embrace all forms of tech to provide touchpoints with your customers. As a customer, and in life, you have to stay hungry and in touch with the most effective means of obtaining information, to maintain a competitive edge. Work smart over work hard.**\n\nWhat makes me say this out of the blue? As I heard people around me complain, all of us waiting in a long line that didn't seem to move, I pulled out my American Airlines app to see if there were any updates. On the app there was a notification saying that I could rebook my flight for no extra cost on the 8pm flight nonstop to New Orleans that same day. Within the matter of a few clicks, I was all set for that flight. I told the people around me about this, but most of them didn't have the app installed and/or their account setup and by the time a few of them got through, the flight was booked out. They will be put on flights for the next day, but that is an extra bit of hassle that a person, who has been waiting to reach their destination, does not want to deal with.\n\nIn conclusion, while the app technology for AA is on point, nothing else seemed to be. In an age of competitive markets, having a great product, the highest standards of professionalism and an empathy for your customers, outranks many other considerations for an effective organization.\n\nIf you have any thoughts about this piece, reach me [here](https://mobile.twitter.com/raoarjun/)!",
      "code": "On the 26th of December, 2018, I was scheduled to fly from New York to New Orleans by way of Charlotte. I flew American Airlines for reasons of price and timing convenience. The experience I had ( and am having, the day isn't over yet ) is filled with learnings, most of which are around communicating with your customers. It is applicable to you as well as to any professional organization.\n\nWhile my flight from New York to Charlotte was nothing particularly interesting, my flight from Charlotte to New Orleans is the one with the nuggets of wisdom.\n\nWe boarded the plane to Nola but even before we took off, we were told that there will be some delays in takeoff due to some 'technical issues'. About 15 mins later, we were told that one of the computers onboard was not starting up and the mechanics were looking to see if the secondary and tertiary computers were sufficient for providing the inputs the first computer was supposed to give. Most people have no idea what this even means, and even less what repercussions it has, and this brings us to the first learning-\n\n> **If you convey negative messages to your customers, do so in a way that does not create panic or confusion**\n\nI bet the pilot had the best intentions in letting us know this, and maybe some people appreciate this level of information, but if you observed the passenger reaction, you would see that most people started getting pretty concerned about this development. Regardless, it was deemed that the plane was fit to fly, although it pushed our departure by about an hour.\n\nPersonally, I was just glad we were on our way to our destination. Around 30 mins into the flight I could sense something was not right because we would keep climbing and then descending back down. After 10 mins of this, the pilot announces that the plane is facing depressurization each time it climbed to about 28000 feet and that they could not continue to New Orleans at this altitude and would need to turn back. While this is the right level of information given, in my opinion, any cabin pressure talk in a metal tube flying at 700 miles per hour is bound to cause concern, which was evident in the murmurs that went around the aircraft. The pilot went on to say that since the fuel load was pretty high(as we were less than halfway into the flight), they would not be able to do a landing back at Charlotte, with the extra weight. He continued to say that they would need to 'dump some gear' and that if we heard any noises in the next few minutes, we should disregard it. Sure enough, there were noises and I would love to know how fuel actually gets dumped in a moving aircraft, but that is neither here nor there.\n\nAfter a bunch of turbulence and some flying around, the plane landed back from where it took off about an hour ago. We were told that we should proceed to Gate B11 where we would be told what the next steps would be. Once we had all meandered towards there, there was no indication of anything regarding our flight. Which leads to the next learning-\n\n> **When your customers are filled with doubt, you must have the confidence and the wherewithal to assuage their doubts and fears.**\n\nThis is not a point in favor of mollycoddling your customers. It is about maintaining an open and clear dialogue to ensure that their concerns are being met with an adequate response.\n\nWe stood in front of the gate for about 35 minutes before we had the first announcement come around, which was frankly astounding. The gate announcer said - \"We have a spare aircraft ready to go, we also have a pilot and copilot but we are unable to locate the flight attendants and are waiting for their arrival\". I honestly thought it was a joke, until I realized it was not.\n\nOver the course of the next 2 hours, about every 15-20 minutes, this same line was repeated about how they are not able to locate the flight attendants without whom the flight cannot take off. First off, doh. Secondly, in this day and age, how can you not locate a crew of 4 flight attendants? Either American was lying about the cause for the delay, or there is something systemically wrong in their approach to running an airline organization, either of which is a very bad sign for a company their size.\n\nAfter about 2.5 - 3 hours of waiting, the gate attendant abruptly announces the flight is canceled and that we should go talk to Customer Service to book a replacement flight which brings me to my next learning-\n\n> **When something goes wrong, be honest with your customers and be empathetic. Don't bullshit them, they will see right through you.**\n\nWhatever, the reason for the delay, if American had been upfront and honest about it, it would be orders of magnitude better in terms of customer experience. If the flight was canceled for reasons of inclement weather, no one can blame them for it! However, it is the lack of transparency that bothered me and most others. Once the flight was canceled, the complete lack of connection, pun intended, and empathy, quickly washed off any little respect I had for this carrier.\n\nTo be honest, this is my first canceled airline, and I guess I am lucky for that, which is why I did not understand the Usain Bolt-like sprinters that ran towards Customer Service. I thought it was to voice grievance with the airline, but I soon realized it was to rebook their flights which had not even occurred to me in the 1 minute that had elapsed since I was told the flight was canceled. This resulted in me being pretty far back in a line of a planeful of people seeking recompense and readjustment of their flight booking schedule. As I saw the line creep ahead at a snails pace and listen to the people around me grumble about how they will get AA to give them a voucher and ask them about which flight they can get on next, I got my next and last learning, yet, for the day-\n\n> **If you don't hustle, you will not get the success you seek. As a company, embrace all forms of tech to provide touchpoints with your customers. As a customer, and in life, you have to stay hungry and in touch with the most effective means of obtaining information, to maintain a competitive edge. Work smart over work hard.**\n\nWhat makes me say this out of the blue? As I heard people around me complain, all of us waiting in a long line that didn't seem to move, I pulled out my American Airlines app to see if there were any updates. On the app there was a notification saying that I could rebook my flight for no extra cost on the 8pm flight nonstop to New Orleans that same day. Within the matter of a few clicks, I was all set for that flight. I told the people around me about this, but most of them didn't have the app installed and/or their account setup and by the time a few of them got through, the flight was booked out. They will be put on flights for the next day, but that is an extra bit of hassle that a person, who has been waiting to reach their destination, does not want to deal with.\n\nIn conclusion, while the app technology for AA is on point, nothing else seemed to be. In an age of competitive markets, having a great product, the highest standards of professionalism and an empathy for your customers, outranks many other considerations for an effective organization.\n\nIf you have any thoughts about this piece, reach me [here](https://mobile.twitter.com/raoarjun/)!"
    },
    "slug": "american",
    "path": "posts/american",
    "filePath": "american.mdx",
    "toc": [],
    "readingTime": {
      "text": "7 min read",
      "minutes": 6.675,
      "time": 400500,
      "words": 1335
    },
    "structuredData": {
      "@context": "https://schema.org",
      "@type": "BlogPosting",
      "headline": "A day in the life of American - How to NOT treat your customers",
      "datePublished": "2018-12-26T00:00:00.000Z",
      "dateModified": "2018-12-26T00:00:00.000Z",
      "description": "Learning from American's terrible customer experience",
      "image": "/static/images/twitter-card.png",
      "url": "https://arjunrao.co/posts/american"
    }
  },
  {
    "title": "Tales of the Aurora",
    "date": "2016-03-21T00:00:00.000Z",
    "tags": [
      "aurora",
      "travel"
    ],
    "lastmod": undefined,
    "draft": false,
    "summary": "Chasing the Northern Lights",
    "images": undefined,
    "authors": undefined,
    "layout": undefined,
    "bibliography": undefined,
    "canonicalUrl": undefined,
    "content": "_\"Far better is it to dare mighty things, to win glorious triumphs, even though checkered by failure... than to rank with those poor spirits who neither enjoy nor suffer much, because they live in a gray twilight that knows not victory nor defeat. \" -Theodore Roosevelt_\n\nThe Bucket List. Everybody seems to have one and everybody wants to cross things off this magical checklist. I have never been a person to have a bucket list per se. I have a ever-increasing catalog of things that I want to do, but I haven’t codified them into a specific “list”. On the other hand, I guess a bucket list is not necessarily a list of things you want to do, but more of a “what do I HAVE to get done before I die?” kind of list. Now that is some pretty heavy stuff. I don’t want to get all existential, but I don’t really have something that I absolutely NEED to get done. At the risk of sounding like the Dalai Lama, I guess being a good person in society, whether in terms of contribution or in terms of being a responsible citizen, is pretty high up there for me. Maintaining good relations with my close friends and family is also squarely at the top of the list.\n\nIn comparison to lists I hear people recite, what I just told you seems incredibly mundane and unexciting. Its like comparing a Porsche or a Ferrari to a hand-cart. The reason I bring up this long winded story of my sad and empty bucket list is that about a year ago, that changed. I dropped one entry into this list. That was to see the Aurora Borealis, famously known as the Northern Lights. Its southern hemisphere, lesser-known counterpart is the Aurora Australis, or the Southern Lights.\n\nI am not going to tell a Neil Degrasse Tyson-esque story about how the geomagnetic storms in the Earth’s atmosphere create a psychedelic dancing body of lights up in the sky. What I will say is that, ever since I heard about the Lights as a kid, I knew I wanted to see them. Again, not like a bucket list thing, but more of a “Man, I really would like to see the Aurora”. I still believe there is a fine distinction between the two.\n\nI decided I wanted to chase the Lights in the winter of this year with a couple of friends of mine. There are a lot of things that need to be considered before going after the Lights. Location and time of year are right at the top. When we were choosing a location, we had to choose how far up north did we want to go such that there was a “good” chance of seeing the lights as well as how easy it is to get there. Typically you would want to go north of the 52 degree latitude, as thats where there is high chance of aurora activity, although there is not a rule set in stone as there have been instances of sightings south of this as well. We aren’t classic risk takers so we were trying to mitigate the risk of not seeing the aurora with being able to do activities incase we didn’t see it.\n\nThe reason time of year is important, might be self-evident, but it is imperative to have long nights so as to have extended periods of darkness for the lights to appear. So for the Northern Hemisphere, the “best” chance you might have are between the months of October and March.\n\nWe started off the globe spinning with North America. Yellowknife in the Northwest Territories of Canada, Fairbanks in Alaska, Wood Buffalo National Park and Jasper National Park in Alberta, Canada were the top picks for this continent. We also looked eastward towards Europe. Iceland, Faroe Islands in Denmark, Svalbard in Norway and Northern Sweden/Lapland were the natural choices for us. And no, we weren’t going to go to Siberia to see the Lights. Not yet.\n\nOnce we had the locations, we wondered if there was any mechanism to know whether or not the Lights will occur in a certain period of time. There are some pretty sophisticated tracking systems out there. There is no universal tracker, but there are tracking systems for most regions that experience the Aurora. For example, for North American Aurora tracking, you can refer to [Aurora Tracker](http://www.aurora-service.org/aurora-forecast/). The biggest caveat is that there is no system that can predict this phenomenon months or even weeks in advance. The highest accuracy is available for forecasts lesser than 3 days. This doesn’t bode well for people who want to plan a trip well in advance, but it is the best shot you have at trying to see the shimmying beauty. Sure they might try to say there is a decent chance of seeing the lights next month, but that is as much as me trying to predict how many new people I will meet in the coming month. Well, I exaggerate but you get the point.\n\nJust to give you a brief idea of what you need to look out while tracking the auroral activity, you want to have high Kp values. If the Kp values are higher than 5, then we can start thanking our stars, pun intended. Going back to whittling down our list of locations, we decided that Europe was a no-go. We didn’t have a compelling reason for the nay, mostly because all of us had been in Europe the year before and were going to revisit it this year. We also decided that Alaska and Yellowknife were too far away, because the flight times to these locations were in excess of 12 hours and we didn’t want to commit to that given that we were going to see something that we weren’t sure we would see. That left Wood Buffalo National Park and Jasper National Park. Our main concern about Wood Buffalo National Park was that there weren’t a lot of things to do around that area and in case we would not see the lights we could be pretty severely disappointed with the whole episode. Our take on this trip was “We should go for the destination and not the Northern Lights”. That put Jasper National Park firmly in the driver's seat. I have been looking at Jasper for a while now. I follow some pretty prolific photographers like **[Callum Snape](https://www.instagram.com/calsnape/)**, who have painted an incredibly vivid picture of Jasper in my mind. I had to see it first-hand. If I wasn’t lucky enough to get the lights in all its glory,  I was going to see the beauty of the Canadian Rockies.\n\nThe other factor to consider when planning an Aurora trip is, how long you want to stay at the place. It is a bit naive and borderline ignorant, to assume that you will see the Aurora with a trip of say 2-3 days. Now you could be one of those really lucky people, of course, and see it during that time, but in all likelihood, for most of us, that is generally not how the scenario would play out. I think a week to 2 weeks is a reasonable amount of time. That accounts for changes in solar activity ( the root cause of Northern Lights ) as well as changes in weather patterns ( snowstorms, rains etc ).\n\nThe final decision maker in deciding success of your Aurora quest is how much effort you are willing to put into it. The Aurora is a most exacting phenomenon. Exacting in that, it doesn’t make anything easy for you. Just as it is impossible(sic) to say whether an aurora will occur in the future, its not easy predicting what time of the night the aurora will occur. 1am to 4am is generally the time when the Aurora wakes up. That time is, however, when we are firmly in our beds after a long activity-filled day. There are three ways to get around this.\n\n- The first is to suck it up and say, I AM HERE FOR THE AURORA AND BY GAR I WILL SEE IT. This declaration of intent involves you biting the bullet and staying up the whole night staring at the skies, drinking beers and talking about life and beyond while waiting for Nature's display to get its act together.\n- The second option is to plan night drives with growlers of coffee at hand, because if nothing else, at least the driver will be awake( fingers crossed ) and can be the scout for the auroral advances.\n- The third option is to snooze and place your faith in technology. Most auroral tracking systems have email / twitter notifications of when auroral activity is about to peak.\n\nThis is the lazy man’s way of getting to see the aurora. For better or for worse, this is the route we took. Since we had early mornings and long days that involved physical activity and criss-crossing Canadian provinces by car, we did not have the luxury of staying up and waiting for the aurora. We would check on Kp values before sleeping and see if there was any indication of there being a chance of seeing the aurora. Unfortunately despite staying for 7 days in the Canadian rockies, the Kp never rose above 1.5~2, which was incredibly disappointing, but in lieu of the mindset we had before we undertook this expedition, of going for the destination and not for the northern lights,  it was something that we were wholly prepared for.\n\nDoes this mean I am not sad I didn’t see the Lights? Absolutely not. I wanted to see the lights, but I had so much fun traversing the Canadian Rockies with close friends of mine and participating in so many unique adventures, that I can say with utmost certainty, this was a most incredible experience. Does this mean that I give up on my quest for the Northern Lights? Unequivocally, NO. NO NO AND NO. This is only the first step in my attempt to see the Lights and I will continue going down this road until I see the elusive dazzler.",
    "_id": "aurora.mdx",
    "_raw": {
      "flattenedPath": "aurora"
    },
    "body": {
      "raw": "_\"Far better is it to dare mighty things, to win glorious triumphs, even though checkered by failure... than to rank with those poor spirits who neither enjoy nor suffer much, because they live in a gray twilight that knows not victory nor defeat. \" -Theodore Roosevelt_\n\nThe Bucket List. Everybody seems to have one and everybody wants to cross things off this magical checklist. I have never been a person to have a bucket list per se. I have a ever-increasing catalog of things that I want to do, but I haven’t codified them into a specific “list”. On the other hand, I guess a bucket list is not necessarily a list of things you want to do, but more of a “what do I HAVE to get done before I die?” kind of list. Now that is some pretty heavy stuff. I don’t want to get all existential, but I don’t really have something that I absolutely NEED to get done. At the risk of sounding like the Dalai Lama, I guess being a good person in society, whether in terms of contribution or in terms of being a responsible citizen, is pretty high up there for me. Maintaining good relations with my close friends and family is also squarely at the top of the list.\n\nIn comparison to lists I hear people recite, what I just told you seems incredibly mundane and unexciting. Its like comparing a Porsche or a Ferrari to a hand-cart. The reason I bring up this long winded story of my sad and empty bucket list is that about a year ago, that changed. I dropped one entry into this list. That was to see the Aurora Borealis, famously known as the Northern Lights. Its southern hemisphere, lesser-known counterpart is the Aurora Australis, or the Southern Lights.\n\nI am not going to tell a Neil Degrasse Tyson-esque story about how the geomagnetic storms in the Earth’s atmosphere create a psychedelic dancing body of lights up in the sky. What I will say is that, ever since I heard about the Lights as a kid, I knew I wanted to see them. Again, not like a bucket list thing, but more of a “Man, I really would like to see the Aurora”. I still believe there is a fine distinction between the two.\n\nI decided I wanted to chase the Lights in the winter of this year with a couple of friends of mine. There are a lot of things that need to be considered before going after the Lights. Location and time of year are right at the top. When we were choosing a location, we had to choose how far up north did we want to go such that there was a “good” chance of seeing the lights as well as how easy it is to get there. Typically you would want to go north of the 52 degree latitude, as thats where there is high chance of aurora activity, although there is not a rule set in stone as there have been instances of sightings south of this as well. We aren’t classic risk takers so we were trying to mitigate the risk of not seeing the aurora with being able to do activities incase we didn’t see it.\n\nThe reason time of year is important, might be self-evident, but it is imperative to have long nights so as to have extended periods of darkness for the lights to appear. So for the Northern Hemisphere, the “best” chance you might have are between the months of October and March.\n\nWe started off the globe spinning with North America. Yellowknife in the Northwest Territories of Canada, Fairbanks in Alaska, Wood Buffalo National Park and Jasper National Park in Alberta, Canada were the top picks for this continent. We also looked eastward towards Europe. Iceland, Faroe Islands in Denmark, Svalbard in Norway and Northern Sweden/Lapland were the natural choices for us. And no, we weren’t going to go to Siberia to see the Lights. Not yet.\n\nOnce we had the locations, we wondered if there was any mechanism to know whether or not the Lights will occur in a certain period of time. There are some pretty sophisticated tracking systems out there. There is no universal tracker, but there are tracking systems for most regions that experience the Aurora. For example, for North American Aurora tracking, you can refer to [Aurora Tracker](http://www.aurora-service.org/aurora-forecast/). The biggest caveat is that there is no system that can predict this phenomenon months or even weeks in advance. The highest accuracy is available for forecasts lesser than 3 days. This doesn’t bode well for people who want to plan a trip well in advance, but it is the best shot you have at trying to see the shimmying beauty. Sure they might try to say there is a decent chance of seeing the lights next month, but that is as much as me trying to predict how many new people I will meet in the coming month. Well, I exaggerate but you get the point.\n\nJust to give you a brief idea of what you need to look out while tracking the auroral activity, you want to have high Kp values. If the Kp values are higher than 5, then we can start thanking our stars, pun intended. Going back to whittling down our list of locations, we decided that Europe was a no-go. We didn’t have a compelling reason for the nay, mostly because all of us had been in Europe the year before and were going to revisit it this year. We also decided that Alaska and Yellowknife were too far away, because the flight times to these locations were in excess of 12 hours and we didn’t want to commit to that given that we were going to see something that we weren’t sure we would see. That left Wood Buffalo National Park and Jasper National Park. Our main concern about Wood Buffalo National Park was that there weren’t a lot of things to do around that area and in case we would not see the lights we could be pretty severely disappointed with the whole episode. Our take on this trip was “We should go for the destination and not the Northern Lights”. That put Jasper National Park firmly in the driver's seat. I have been looking at Jasper for a while now. I follow some pretty prolific photographers like **[Callum Snape](https://www.instagram.com/calsnape/)**, who have painted an incredibly vivid picture of Jasper in my mind. I had to see it first-hand. If I wasn’t lucky enough to get the lights in all its glory,  I was going to see the beauty of the Canadian Rockies.\n\nThe other factor to consider when planning an Aurora trip is, how long you want to stay at the place. It is a bit naive and borderline ignorant, to assume that you will see the Aurora with a trip of say 2-3 days. Now you could be one of those really lucky people, of course, and see it during that time, but in all likelihood, for most of us, that is generally not how the scenario would play out. I think a week to 2 weeks is a reasonable amount of time. That accounts for changes in solar activity ( the root cause of Northern Lights ) as well as changes in weather patterns ( snowstorms, rains etc ).\n\nThe final decision maker in deciding success of your Aurora quest is how much effort you are willing to put into it. The Aurora is a most exacting phenomenon. Exacting in that, it doesn’t make anything easy for you. Just as it is impossible(sic) to say whether an aurora will occur in the future, its not easy predicting what time of the night the aurora will occur. 1am to 4am is generally the time when the Aurora wakes up. That time is, however, when we are firmly in our beds after a long activity-filled day. There are three ways to get around this.\n\n- The first is to suck it up and say, I AM HERE FOR THE AURORA AND BY GAR I WILL SEE IT. This declaration of intent involves you biting the bullet and staying up the whole night staring at the skies, drinking beers and talking about life and beyond while waiting for Nature's display to get its act together.\n- The second option is to plan night drives with growlers of coffee at hand, because if nothing else, at least the driver will be awake( fingers crossed ) and can be the scout for the auroral advances.\n- The third option is to snooze and place your faith in technology. Most auroral tracking systems have email / twitter notifications of when auroral activity is about to peak.\n\nThis is the lazy man’s way of getting to see the aurora. For better or for worse, this is the route we took. Since we had early mornings and long days that involved physical activity and criss-crossing Canadian provinces by car, we did not have the luxury of staying up and waiting for the aurora. We would check on Kp values before sleeping and see if there was any indication of there being a chance of seeing the aurora. Unfortunately despite staying for 7 days in the Canadian rockies, the Kp never rose above 1.5~2, which was incredibly disappointing, but in lieu of the mindset we had before we undertook this expedition, of going for the destination and not for the northern lights,  it was something that we were wholly prepared for.\n\nDoes this mean I am not sad I didn’t see the Lights? Absolutely not. I wanted to see the lights, but I had so much fun traversing the Canadian Rockies with close friends of mine and participating in so many unique adventures, that I can say with utmost certainty, this was a most incredible experience. Does this mean that I give up on my quest for the Northern Lights? Unequivocally, NO. NO NO AND NO. This is only the first step in my attempt to see the Lights and I will continue going down this road until I see the elusive dazzler.",
      "code": "_\"Far better is it to dare mighty things, to win glorious triumphs, even though checkered by failure... than to rank with those poor spirits who neither enjoy nor suffer much, because they live in a gray twilight that knows not victory nor defeat. \" -Theodore Roosevelt_\n\nThe Bucket List. Everybody seems to have one and everybody wants to cross things off this magical checklist. I have never been a person to have a bucket list per se. I have a ever-increasing catalog of things that I want to do, but I haven’t codified them into a specific “list”. On the other hand, I guess a bucket list is not necessarily a list of things you want to do, but more of a “what do I HAVE to get done before I die?” kind of list. Now that is some pretty heavy stuff. I don’t want to get all existential, but I don’t really have something that I absolutely NEED to get done. At the risk of sounding like the Dalai Lama, I guess being a good person in society, whether in terms of contribution or in terms of being a responsible citizen, is pretty high up there for me. Maintaining good relations with my close friends and family is also squarely at the top of the list.\n\nIn comparison to lists I hear people recite, what I just told you seems incredibly mundane and unexciting. Its like comparing a Porsche or a Ferrari to a hand-cart. The reason I bring up this long winded story of my sad and empty bucket list is that about a year ago, that changed. I dropped one entry into this list. That was to see the Aurora Borealis, famously known as the Northern Lights. Its southern hemisphere, lesser-known counterpart is the Aurora Australis, or the Southern Lights.\n\nI am not going to tell a Neil Degrasse Tyson-esque story about how the geomagnetic storms in the Earth’s atmosphere create a psychedelic dancing body of lights up in the sky. What I will say is that, ever since I heard about the Lights as a kid, I knew I wanted to see them. Again, not like a bucket list thing, but more of a “Man, I really would like to see the Aurora”. I still believe there is a fine distinction between the two.\n\nI decided I wanted to chase the Lights in the winter of this year with a couple of friends of mine. There are a lot of things that need to be considered before going after the Lights. Location and time of year are right at the top. When we were choosing a location, we had to choose how far up north did we want to go such that there was a “good” chance of seeing the lights as well as how easy it is to get there. Typically you would want to go north of the 52 degree latitude, as thats where there is high chance of aurora activity, although there is not a rule set in stone as there have been instances of sightings south of this as well. We aren’t classic risk takers so we were trying to mitigate the risk of not seeing the aurora with being able to do activities incase we didn’t see it.\n\nThe reason time of year is important, might be self-evident, but it is imperative to have long nights so as to have extended periods of darkness for the lights to appear. So for the Northern Hemisphere, the “best” chance you might have are between the months of October and March.\n\nWe started off the globe spinning with North America. Yellowknife in the Northwest Territories of Canada, Fairbanks in Alaska, Wood Buffalo National Park and Jasper National Park in Alberta, Canada were the top picks for this continent. We also looked eastward towards Europe. Iceland, Faroe Islands in Denmark, Svalbard in Norway and Northern Sweden/Lapland were the natural choices for us. And no, we weren’t going to go to Siberia to see the Lights. Not yet.\n\nOnce we had the locations, we wondered if there was any mechanism to know whether or not the Lights will occur in a certain period of time. There are some pretty sophisticated tracking systems out there. There is no universal tracker, but there are tracking systems for most regions that experience the Aurora. For example, for North American Aurora tracking, you can refer to [Aurora Tracker](http://www.aurora-service.org/aurora-forecast/). The biggest caveat is that there is no system that can predict this phenomenon months or even weeks in advance. The highest accuracy is available for forecasts lesser than 3 days. This doesn’t bode well for people who want to plan a trip well in advance, but it is the best shot you have at trying to see the shimmying beauty. Sure they might try to say there is a decent chance of seeing the lights next month, but that is as much as me trying to predict how many new people I will meet in the coming month. Well, I exaggerate but you get the point.\n\nJust to give you a brief idea of what you need to look out while tracking the auroral activity, you want to have high Kp values. If the Kp values are higher than 5, then we can start thanking our stars, pun intended. Going back to whittling down our list of locations, we decided that Europe was a no-go. We didn’t have a compelling reason for the nay, mostly because all of us had been in Europe the year before and were going to revisit it this year. We also decided that Alaska and Yellowknife were too far away, because the flight times to these locations were in excess of 12 hours and we didn’t want to commit to that given that we were going to see something that we weren’t sure we would see. That left Wood Buffalo National Park and Jasper National Park. Our main concern about Wood Buffalo National Park was that there weren’t a lot of things to do around that area and in case we would not see the lights we could be pretty severely disappointed with the whole episode. Our take on this trip was “We should go for the destination and not the Northern Lights”. That put Jasper National Park firmly in the driver's seat. I have been looking at Jasper for a while now. I follow some pretty prolific photographers like **[Callum Snape](https://www.instagram.com/calsnape/)**, who have painted an incredibly vivid picture of Jasper in my mind. I had to see it first-hand. If I wasn’t lucky enough to get the lights in all its glory,  I was going to see the beauty of the Canadian Rockies.\n\nThe other factor to consider when planning an Aurora trip is, how long you want to stay at the place. It is a bit naive and borderline ignorant, to assume that you will see the Aurora with a trip of say 2-3 days. Now you could be one of those really lucky people, of course, and see it during that time, but in all likelihood, for most of us, that is generally not how the scenario would play out. I think a week to 2 weeks is a reasonable amount of time. That accounts for changes in solar activity ( the root cause of Northern Lights ) as well as changes in weather patterns ( snowstorms, rains etc ).\n\nThe final decision maker in deciding success of your Aurora quest is how much effort you are willing to put into it. The Aurora is a most exacting phenomenon. Exacting in that, it doesn’t make anything easy for you. Just as it is impossible(sic) to say whether an aurora will occur in the future, its not easy predicting what time of the night the aurora will occur. 1am to 4am is generally the time when the Aurora wakes up. That time is, however, when we are firmly in our beds after a long activity-filled day. There are three ways to get around this.\n\n- The first is to suck it up and say, I AM HERE FOR THE AURORA AND BY GAR I WILL SEE IT. This declaration of intent involves you biting the bullet and staying up the whole night staring at the skies, drinking beers and talking about life and beyond while waiting for Nature's display to get its act together.\n- The second option is to plan night drives with growlers of coffee at hand, because if nothing else, at least the driver will be awake( fingers crossed ) and can be the scout for the auroral advances.\n- The third option is to snooze and place your faith in technology. Most auroral tracking systems have email / twitter notifications of when auroral activity is about to peak.\n\nThis is the lazy man’s way of getting to see the aurora. For better or for worse, this is the route we took. Since we had early mornings and long days that involved physical activity and criss-crossing Canadian provinces by car, we did not have the luxury of staying up and waiting for the aurora. We would check on Kp values before sleeping and see if there was any indication of there being a chance of seeing the aurora. Unfortunately despite staying for 7 days in the Canadian rockies, the Kp never rose above 1.5~2, which was incredibly disappointing, but in lieu of the mindset we had before we undertook this expedition, of going for the destination and not for the northern lights,  it was something that we were wholly prepared for.\n\nDoes this mean I am not sad I didn’t see the Lights? Absolutely not. I wanted to see the lights, but I had so much fun traversing the Canadian Rockies with close friends of mine and participating in so many unique adventures, that I can say with utmost certainty, this was a most incredible experience. Does this mean that I give up on my quest for the Northern Lights? Unequivocally, NO. NO NO AND NO. This is only the first step in my attempt to see the Lights and I will continue going down this road until I see the elusive dazzler."
    },
    "slug": "aurora",
    "path": "posts/aurora",
    "filePath": "aurora.mdx",
    "toc": [],
    "readingTime": {
      "text": "9 min read",
      "minutes": 8.44,
      "time": 506400,
      "words": 1688
    },
    "structuredData": {
      "@context": "https://schema.org",
      "@type": "BlogPosting",
      "headline": "Tales of the Aurora",
      "datePublished": "2016-03-21T00:00:00.000Z",
      "dateModified": "2016-03-21T00:00:00.000Z",
      "description": "Chasing the Northern Lights",
      "image": "/static/images/twitter-card.png",
      "url": "https://arjunrao.co/posts/aurora"
    }
  },
  {
    "title": "Knowing who your bail friends are and why it is important",
    "date": "2017-08-27T00:00:00.000Z",
    "tags": [
      "friends",
      "relationships",
      "community"
    ],
    "lastmod": undefined,
    "draft": false,
    "summary": "Keep your friends close and your best friends closer",
    "images": undefined,
    "authors": undefined,
    "layout": undefined,
    "bibliography": undefined,
    "canonicalUrl": undefined,
    "content": "A real friend is one who walks in when the rest of the world walks out.\n— Walter Winchell\n\nEver since humans became aware of using each other to build communities, we have relied on social cues to drive aspects of our behavior. In the times past, this meant getting such feedback from your immediate neighbors and members of your community. Today, with the proliferation of social media, that translates into getting social validation from your followers.\n\nBack in the day, making and maintaining friends took effort and care and it was in your best interests for that effort to pay off. You would not want to meet someone in person, on a regular basis, if you did not like them very much. However, today the currency of online followership, whether it is actual friends or followers unknown to you until the point of online contact, has diluted the meaning of ‘true’ friendship.\n\nHarkening back to an article which I had written a short while ago, if a prime motivator of content publishing is the number of likes received, that diminishes the value of the individual like. It is the same thing as losing sight of the individual when you inspect statistics of the aggregate. The same is true from the other side too. The person liking your content in the online world, does not have any deep incentive to do so but might just do it as a force of habit — I have certainly been a perpetrator of such actions. I am not saying every single person is guilty of this, I am merely highlighting the chances of such occurrences are higher than you would expect ( I have zero scientific data to back this claim )\n\nGiven that the quality of friendships online is not a gauge of true friendship, I have coined the phrase — “Bail friends”. I will get into the details of this in just a second, but these friends are not just any friends. A lot of people have several thousand friends and followers on the likes of Instagram, Snapchat and Facebook, but how many of them are “bail friends”?\n\n**Bail friends are what I consider to be the truest of friends. They will ride into hell and back with you.**\n\nThese are friends whom you can leave and not talk with for a long time, perhaps even years. However, when you do meet and talk, it is like you never left .They are friends who you don’t have to speak with to make conversation and you can tolerate each other, even in silence. They are truly the gold standard of friends. The reason they are called “Bail friends”, as it should be obvious, is because they will bail you out of jail. Not just bail you out of any situation, but literally bail you out of jail. When I think of bail friends, I have never considered me being the perpetrator of a tragic crime but something more innocuous yet deserving being imprisoned for. Hopefully this never happens but indulge me in this thought experiment and think which of your friends would be your bail friends.\n\nBefore you say something like “I have the best of friends, most of them if not each and every one of them, will be my bail friends”, think about what it entails being a bail friend-\n\n- The most basic requirement is for this friend to be your “One phone call”. If you had just one shot at calling someone in the outside world, would you call upon this person to come and help you? This is a loaded question, because at the time you are in jail, your thoughts are pretty bleak and your only salvation is this person who you are hoping will be your colloquial knight in shining armor. Do you have the right person on the list for all the right reasons?\n\n- Making the phone call is one part of the puzzle. The bigger question is will your friend at the other end receive your call? To get into the nitty gritty, if you are calling from a police station and its an unknown number, will this person even take this call. Let’s say your friend entertains unknown number calls — will he/she then hear you out and come to help you or will he/she panic at the thought of having to care about helping you and hang up on you?\n\n- Assume for a moment your friend has decided to help you out and come to the police station to come bail you out. Is this friend willing to get the money ready to bail you out? Maybe the friend is using their own money or needs to go around collecting money for your bail. In either case, it is tremendous pressure for them to do so and is a pretty strong test of friendship as well as character. Many relationships are a smooth sail until money enters the picture. Will your bail friend pass this acid test?\n\n- Last but not the least, is this friend willing to stand up to the social stigma of helping someone out who needs to be bailed? Humans have a tendency of jumping to conclusions without having all the facts. As a result many people form opionions without a strong grasp of the situation. If these people reside in your community or social circles, this can be some oppresive pressure to stand up to. Is your friend willing to put their reputation on the line for your freedom?\n\nIf the answer to all these questions is a resounding yes, then congratulations! You have found yourself your bail friend. Cherish these relationships because you have deemed them to have passed the highest standards of friendship. Some might say, it is easy to hypothesize how these bail friends react but without the event actually happening it is close to impossible to predict the actual behavior of this a-list of friends. 100% accurate. However, if you know these bail friends really well and have answered the above questions without lying to yourself, then there is a high probability that they will come through for you. Atleast you can hope they do :)\n\nPersonally, I can count my bail friends on one hand and I wouldn’t even need all my fingers. However, these are the friends who I hold in extremely high regard, not for just being great friends with me but also being really good human beings. They are the first among equals. At the risk of an aphorism — “Keep your friends close, your enemies closer and your bail friends closest.”\n\nFriends show their love in times of trouble, not in happiness. — Euripides",
    "_id": "bail-friends.mdx",
    "_raw": {
      "flattenedPath": "bail-friends"
    },
    "body": {
      "raw": "A real friend is one who walks in when the rest of the world walks out.\n— Walter Winchell\n\nEver since humans became aware of using each other to build communities, we have relied on social cues to drive aspects of our behavior. In the times past, this meant getting such feedback from your immediate neighbors and members of your community. Today, with the proliferation of social media, that translates into getting social validation from your followers.\n\nBack in the day, making and maintaining friends took effort and care and it was in your best interests for that effort to pay off. You would not want to meet someone in person, on a regular basis, if you did not like them very much. However, today the currency of online followership, whether it is actual friends or followers unknown to you until the point of online contact, has diluted the meaning of ‘true’ friendship.\n\nHarkening back to an article which I had written a short while ago, if a prime motivator of content publishing is the number of likes received, that diminishes the value of the individual like. It is the same thing as losing sight of the individual when you inspect statistics of the aggregate. The same is true from the other side too. The person liking your content in the online world, does not have any deep incentive to do so but might just do it as a force of habit — I have certainly been a perpetrator of such actions. I am not saying every single person is guilty of this, I am merely highlighting the chances of such occurrences are higher than you would expect ( I have zero scientific data to back this claim )\n\nGiven that the quality of friendships online is not a gauge of true friendship, I have coined the phrase — “Bail friends”. I will get into the details of this in just a second, but these friends are not just any friends. A lot of people have several thousand friends and followers on the likes of Instagram, Snapchat and Facebook, but how many of them are “bail friends”?\n\n**Bail friends are what I consider to be the truest of friends. They will ride into hell and back with you.**\n\nThese are friends whom you can leave and not talk with for a long time, perhaps even years. However, when you do meet and talk, it is like you never left .They are friends who you don’t have to speak with to make conversation and you can tolerate each other, even in silence. They are truly the gold standard of friends. The reason they are called “Bail friends”, as it should be obvious, is because they will bail you out of jail. Not just bail you out of any situation, but literally bail you out of jail. When I think of bail friends, I have never considered me being the perpetrator of a tragic crime but something more innocuous yet deserving being imprisoned for. Hopefully this never happens but indulge me in this thought experiment and think which of your friends would be your bail friends.\n\nBefore you say something like “I have the best of friends, most of them if not each and every one of them, will be my bail friends”, think about what it entails being a bail friend-\n\n- The most basic requirement is for this friend to be your “One phone call”. If you had just one shot at calling someone in the outside world, would you call upon this person to come and help you? This is a loaded question, because at the time you are in jail, your thoughts are pretty bleak and your only salvation is this person who you are hoping will be your colloquial knight in shining armor. Do you have the right person on the list for all the right reasons?\n\n- Making the phone call is one part of the puzzle. The bigger question is will your friend at the other end receive your call? To get into the nitty gritty, if you are calling from a police station and its an unknown number, will this person even take this call. Let’s say your friend entertains unknown number calls — will he/she then hear you out and come to help you or will he/she panic at the thought of having to care about helping you and hang up on you?\n\n- Assume for a moment your friend has decided to help you out and come to the police station to come bail you out. Is this friend willing to get the money ready to bail you out? Maybe the friend is using their own money or needs to go around collecting money for your bail. In either case, it is tremendous pressure for them to do so and is a pretty strong test of friendship as well as character. Many relationships are a smooth sail until money enters the picture. Will your bail friend pass this acid test?\n\n- Last but not the least, is this friend willing to stand up to the social stigma of helping someone out who needs to be bailed? Humans have a tendency of jumping to conclusions without having all the facts. As a result many people form opionions without a strong grasp of the situation. If these people reside in your community or social circles, this can be some oppresive pressure to stand up to. Is your friend willing to put their reputation on the line for your freedom?\n\nIf the answer to all these questions is a resounding yes, then congratulations! You have found yourself your bail friend. Cherish these relationships because you have deemed them to have passed the highest standards of friendship. Some might say, it is easy to hypothesize how these bail friends react but without the event actually happening it is close to impossible to predict the actual behavior of this a-list of friends. 100% accurate. However, if you know these bail friends really well and have answered the above questions without lying to yourself, then there is a high probability that they will come through for you. Atleast you can hope they do :)\n\nPersonally, I can count my bail friends on one hand and I wouldn’t even need all my fingers. However, these are the friends who I hold in extremely high regard, not for just being great friends with me but also being really good human beings. They are the first among equals. At the risk of an aphorism — “Keep your friends close, your enemies closer and your bail friends closest.”\n\nFriends show their love in times of trouble, not in happiness. — Euripides",
      "code": "A real friend is one who walks in when the rest of the world walks out.\n— Walter Winchell\n\nEver since humans became aware of using each other to build communities, we have relied on social cues to drive aspects of our behavior. In the times past, this meant getting such feedback from your immediate neighbors and members of your community. Today, with the proliferation of social media, that translates into getting social validation from your followers.\n\nBack in the day, making and maintaining friends took effort and care and it was in your best interests for that effort to pay off. You would not want to meet someone in person, on a regular basis, if you did not like them very much. However, today the currency of online followership, whether it is actual friends or followers unknown to you until the point of online contact, has diluted the meaning of ‘true’ friendship.\n\nHarkening back to an article which I had written a short while ago, if a prime motivator of content publishing is the number of likes received, that diminishes the value of the individual like. It is the same thing as losing sight of the individual when you inspect statistics of the aggregate. The same is true from the other side too. The person liking your content in the online world, does not have any deep incentive to do so but might just do it as a force of habit — I have certainly been a perpetrator of such actions. I am not saying every single person is guilty of this, I am merely highlighting the chances of such occurrences are higher than you would expect ( I have zero scientific data to back this claim )\n\nGiven that the quality of friendships online is not a gauge of true friendship, I have coined the phrase — “Bail friends”. I will get into the details of this in just a second, but these friends are not just any friends. A lot of people have several thousand friends and followers on the likes of Instagram, Snapchat and Facebook, but how many of them are “bail friends”?\n\n**Bail friends are what I consider to be the truest of friends. They will ride into hell and back with you.**\n\nThese are friends whom you can leave and not talk with for a long time, perhaps even years. However, when you do meet and talk, it is like you never left .They are friends who you don’t have to speak with to make conversation and you can tolerate each other, even in silence. They are truly the gold standard of friends. The reason they are called “Bail friends”, as it should be obvious, is because they will bail you out of jail. Not just bail you out of any situation, but literally bail you out of jail. When I think of bail friends, I have never considered me being the perpetrator of a tragic crime but something more innocuous yet deserving being imprisoned for. Hopefully this never happens but indulge me in this thought experiment and think which of your friends would be your bail friends.\n\nBefore you say something like “I have the best of friends, most of them if not each and every one of them, will be my bail friends”, think about what it entails being a bail friend-\n\n- The most basic requirement is for this friend to be your “One phone call”. If you had just one shot at calling someone in the outside world, would you call upon this person to come and help you? This is a loaded question, because at the time you are in jail, your thoughts are pretty bleak and your only salvation is this person who you are hoping will be your colloquial knight in shining armor. Do you have the right person on the list for all the right reasons?\n\n- Making the phone call is one part of the puzzle. The bigger question is will your friend at the other end receive your call? To get into the nitty gritty, if you are calling from a police station and its an unknown number, will this person even take this call. Let’s say your friend entertains unknown number calls — will he/she then hear you out and come to help you or will he/she panic at the thought of having to care about helping you and hang up on you?\n\n- Assume for a moment your friend has decided to help you out and come to the police station to come bail you out. Is this friend willing to get the money ready to bail you out? Maybe the friend is using their own money or needs to go around collecting money for your bail. In either case, it is tremendous pressure for them to do so and is a pretty strong test of friendship as well as character. Many relationships are a smooth sail until money enters the picture. Will your bail friend pass this acid test?\n\n- Last but not the least, is this friend willing to stand up to the social stigma of helping someone out who needs to be bailed? Humans have a tendency of jumping to conclusions without having all the facts. As a result many people form opionions without a strong grasp of the situation. If these people reside in your community or social circles, this can be some oppresive pressure to stand up to. Is your friend willing to put their reputation on the line for your freedom?\n\nIf the answer to all these questions is a resounding yes, then congratulations! You have found yourself your bail friend. Cherish these relationships because you have deemed them to have passed the highest standards of friendship. Some might say, it is easy to hypothesize how these bail friends react but without the event actually happening it is close to impossible to predict the actual behavior of this a-list of friends. 100% accurate. However, if you know these bail friends really well and have answered the above questions without lying to yourself, then there is a high probability that they will come through for you. Atleast you can hope they do :)\n\nPersonally, I can count my bail friends on one hand and I wouldn’t even need all my fingers. However, these are the friends who I hold in extremely high regard, not for just being great friends with me but also being really good human beings. They are the first among equals. At the risk of an aphorism — “Keep your friends close, your enemies closer and your bail friends closest.”\n\nFriends show their love in times of trouble, not in happiness. — Euripides"
    },
    "slug": "bail-friends",
    "path": "posts/bail-friends",
    "filePath": "bail-friends.mdx",
    "toc": [],
    "readingTime": {
      "text": "6 min read",
      "minutes": 5.545,
      "time": 332700,
      "words": 1109
    },
    "structuredData": {
      "@context": "https://schema.org",
      "@type": "BlogPosting",
      "headline": "Knowing who your bail friends are and why it is important",
      "datePublished": "2017-08-27T00:00:00.000Z",
      "dateModified": "2017-08-27T00:00:00.000Z",
      "description": "Keep your friends close and your best friends closer",
      "image": "/static/images/twitter-card.png",
      "url": "https://arjunrao.co/posts/bail-friends"
    }
  },
  {
    "title": "The Big Picture",
    "date": "2015-08-11T00:00:00.000Z",
    "tags": [
      "strategy",
      "stoic"
    ],
    "lastmod": undefined,
    "draft": false,
    "summary": "Alphabet's big bet",
    "images": undefined,
    "authors": undefined,
    "layout": undefined,
    "bibliography": undefined,
    "canonicalUrl": undefined,
    "content": "I generally consider myself to be a practitioner of the Stoicism school of thought. There have, however, been instances when I have been accused of exaggerating my feelings both in the case of youthful exuberance, as well as impending doom.\n\nLet us consider all of that as I adumbrate the state of my mind after listening to the Google/Alphabet story that unfolded today. There are people who liken Google to Big Brother and think of it as the diabolical private sector twin of the NSA. I am not one of them . I have always thought of Google to be a cornucopia of ideas that have constantly pushed humans technologically to places we didn't know existed, whether it is machine learning in understanding what is a cat photo and what isn't, popularizing the notion of videos to change how we express ourselves or investing in operating systems that power a big percentage of devices used by people around the globe. Be it mergers/acquisitions or home-growing an idea internally and making it known to the world, Google always left little doubt about how they viewed technology and envisioned its existence in the lives of people.\nGoogle, as by now the whole world probably knows, announced something pretty drastic. <a href=\"https://abc.xyz/\" target=\"_blank\">**The Alphabet announcement**</a> is the reason for the current state of my mind. I can see a vast majority of people treating this as evanescent news. There are many corporations that undergo reorganization as it is the one constant in the lifespan of a company. I will try to list a few reasons why this isn't \"just another reorg\".\n\nCompanies that are at the peak of their prowess, do not just decide to switch gears so drastically. It is symptomatic of something much larger. Hold on to that thought. I will get back to what I mean by \"something much larger\" at the end of this article. In fact, most of the times that companies undergo large scale reorganizations, are generally facing some malaise. A couple of examples spring to mind. Companies like Blackberry and HP/Compaq weren't exactly in the pink of health, when they underwent large scale changes. Standard Oil, in Rockefeller's days, is another example of drastic reorganization, which was incidentally forced upon them, due to accusations of monopoly crushing the free market. I wish to present a contradistinction to these scenarios by suggesting that Google's reorganization is nothing like any of those.\n\nSergey Brin and Larry Page are in their early 40's. Stepping away from anything that you have heavily invested in can happen in a minimum of two ways. You have either forced out of your position due to bad life decisions or you have turned into a doddering old fool who cannot shape the contents of his/her thoughts. Stepping away from Google when it is at the zenith of its capabilities, means that there is something so much bigger that attracts two multi-billionaires towards it. At this point, someone may argue that it is impeccably clear to anyone that Alphabet will be a conglomerate and a super-set of what Google is, so the point I just made is obvious. I will continue to be adamant and insist that <i>that</i> view is too topical. The Google duo have just made a shrewd move on a giant chessboard.  A chessboard, that includes squares that touch upon human immortality, space exploration, human interconnectivity and existential interaction.\n\nWhile there were constant improvements to their existing product portfolio, Google was in that phase where it was kind of coasting along. I mean they have paid their dues over the last several years, so no one could fault them for that. BOOM. With this announcement, they have turned business as we know it, on its head. This is such a start-up'sh response to current events, something I would have deemed unthinkable in the \"enterprise\" space. It is a big \"EFF YOU\" to companies like Apple, Yahoo, Microsoft and to an extent even Facebook, who have stayed homogeneous for so many years. I have a sneaky suspicion that this might fuel an \"arms race\" among companies, in terms of acquisitions of cross-sector assets to build up a more holistic story and to catch up with this broad vision of corporate thought that Google shone upon us. It is also setting the bar for greenhorn startups and future generations to expand horizons of thinking, when they put their nose to the grindstone. It will no longer suffice to have a successful mobile application doing 'A' particular thing when the universe of possibilities calls for us. Reaching for the stars is no longer a phrase to inspire advancement, but an actual goal for all humanity. The shots have been fired. The rest of us, now need to play catch up.\n\nGoogle has always had a much grander stratagem in place, that some might even call world domination. I, however, think it is far beyond that. I do not mean that in a nefarious way. I believe, that Google is aiming for galactic domination because this world just isn't big enough to house our growing expansionist minds. Google isn't alone in this space, pun intended. There are several thought leaders like Branson and Musk, among few others, who are challenging the frontiers of human jurisdiction as we know it. ( This is not to take away from agencies like NASA/ESA who have sent space probes to the far reaches of the solar system ). At this point in time, I don't believe that people like Brin, Musk, Branson or Zuckerberg care about how many customers use their services or how much revenue is brought in yearly, for its immediate context. Sure, they do still want to make money and be the leaders in the markets they are vying for. For these guys the bigger picture, however, is much more than quarterly reports and customer attrition rate. They are focused on building a legacy that will last beyond them. A legacy that will push humanity to bounds of insanity. A legacy that will catapult mankind into the next millennium and bring us closer to Asimov's Galactic Empire.",
    "_id": "big-picture.mdx",
    "_raw": {
      "flattenedPath": "big-picture"
    },
    "body": {
      "raw": "I generally consider myself to be a practitioner of the Stoicism school of thought. There have, however, been instances when I have been accused of exaggerating my feelings both in the case of youthful exuberance, as well as impending doom.\n\nLet us consider all of that as I adumbrate the state of my mind after listening to the Google/Alphabet story that unfolded today. There are people who liken Google to Big Brother and think of it as the diabolical private sector twin of the NSA. I am not one of them . I have always thought of Google to be a cornucopia of ideas that have constantly pushed humans technologically to places we didn't know existed, whether it is machine learning in understanding what is a cat photo and what isn't, popularizing the notion of videos to change how we express ourselves or investing in operating systems that power a big percentage of devices used by people around the globe. Be it mergers/acquisitions or home-growing an idea internally and making it known to the world, Google always left little doubt about how they viewed technology and envisioned its existence in the lives of people.\nGoogle, as by now the whole world probably knows, announced something pretty drastic. <a href=\"https://abc.xyz/\" target=\"_blank\">**The Alphabet announcement**</a> is the reason for the current state of my mind. I can see a vast majority of people treating this as evanescent news. There are many corporations that undergo reorganization as it is the one constant in the lifespan of a company. I will try to list a few reasons why this isn't \"just another reorg\".\n\nCompanies that are at the peak of their prowess, do not just decide to switch gears so drastically. It is symptomatic of something much larger. Hold on to that thought. I will get back to what I mean by \"something much larger\" at the end of this article. In fact, most of the times that companies undergo large scale reorganizations, are generally facing some malaise. A couple of examples spring to mind. Companies like Blackberry and HP/Compaq weren't exactly in the pink of health, when they underwent large scale changes. Standard Oil, in Rockefeller's days, is another example of drastic reorganization, which was incidentally forced upon them, due to accusations of monopoly crushing the free market. I wish to present a contradistinction to these scenarios by suggesting that Google's reorganization is nothing like any of those.\n\nSergey Brin and Larry Page are in their early 40's. Stepping away from anything that you have heavily invested in can happen in a minimum of two ways. You have either forced out of your position due to bad life decisions or you have turned into a doddering old fool who cannot shape the contents of his/her thoughts. Stepping away from Google when it is at the zenith of its capabilities, means that there is something so much bigger that attracts two multi-billionaires towards it. At this point, someone may argue that it is impeccably clear to anyone that Alphabet will be a conglomerate and a super-set of what Google is, so the point I just made is obvious. I will continue to be adamant and insist that <i>that</i> view is too topical. The Google duo have just made a shrewd move on a giant chessboard.  A chessboard, that includes squares that touch upon human immortality, space exploration, human interconnectivity and existential interaction.\n\nWhile there were constant improvements to their existing product portfolio, Google was in that phase where it was kind of coasting along. I mean they have paid their dues over the last several years, so no one could fault them for that. BOOM. With this announcement, they have turned business as we know it, on its head. This is such a start-up'sh response to current events, something I would have deemed unthinkable in the \"enterprise\" space. It is a big \"EFF YOU\" to companies like Apple, Yahoo, Microsoft and to an extent even Facebook, who have stayed homogeneous for so many years. I have a sneaky suspicion that this might fuel an \"arms race\" among companies, in terms of acquisitions of cross-sector assets to build up a more holistic story and to catch up with this broad vision of corporate thought that Google shone upon us. It is also setting the bar for greenhorn startups and future generations to expand horizons of thinking, when they put their nose to the grindstone. It will no longer suffice to have a successful mobile application doing 'A' particular thing when the universe of possibilities calls for us. Reaching for the stars is no longer a phrase to inspire advancement, but an actual goal for all humanity. The shots have been fired. The rest of us, now need to play catch up.\n\nGoogle has always had a much grander stratagem in place, that some might even call world domination. I, however, think it is far beyond that. I do not mean that in a nefarious way. I believe, that Google is aiming for galactic domination because this world just isn't big enough to house our growing expansionist minds. Google isn't alone in this space, pun intended. There are several thought leaders like Branson and Musk, among few others, who are challenging the frontiers of human jurisdiction as we know it. ( This is not to take away from agencies like NASA/ESA who have sent space probes to the far reaches of the solar system ). At this point in time, I don't believe that people like Brin, Musk, Branson or Zuckerberg care about how many customers use their services or how much revenue is brought in yearly, for its immediate context. Sure, they do still want to make money and be the leaders in the markets they are vying for. For these guys the bigger picture, however, is much more than quarterly reports and customer attrition rate. They are focused on building a legacy that will last beyond them. A legacy that will push humanity to bounds of insanity. A legacy that will catapult mankind into the next millennium and bring us closer to Asimov's Galactic Empire.",
      "code": "I generally consider myself to be a practitioner of the Stoicism school of thought. There have, however, been instances when I have been accused of exaggerating my feelings both in the case of youthful exuberance, as well as impending doom.\n\nLet us consider all of that as I adumbrate the state of my mind after listening to the Google/Alphabet story that unfolded today. There are people who liken Google to Big Brother and think of it as the diabolical private sector twin of the NSA. I am not one of them . I have always thought of Google to be a cornucopia of ideas that have constantly pushed humans technologically to places we didn't know existed, whether it is machine learning in understanding what is a cat photo and what isn't, popularizing the notion of videos to change how we express ourselves or investing in operating systems that power a big percentage of devices used by people around the globe. Be it mergers/acquisitions or home-growing an idea internally and making it known to the world, Google always left little doubt about how they viewed technology and envisioned its existence in the lives of people.\nGoogle, as by now the whole world probably knows, announced something pretty drastic. <a href=\"https://abc.xyz/\" target=\"_blank\">**The Alphabet announcement**</a> is the reason for the current state of my mind. I can see a vast majority of people treating this as evanescent news. There are many corporations that undergo reorganization as it is the one constant in the lifespan of a company. I will try to list a few reasons why this isn't \"just another reorg\".\n\nCompanies that are at the peak of their prowess, do not just decide to switch gears so drastically. It is symptomatic of something much larger. Hold on to that thought. I will get back to what I mean by \"something much larger\" at the end of this article. In fact, most of the times that companies undergo large scale reorganizations, are generally facing some malaise. A couple of examples spring to mind. Companies like Blackberry and HP/Compaq weren't exactly in the pink of health, when they underwent large scale changes. Standard Oil, in Rockefeller's days, is another example of drastic reorganization, which was incidentally forced upon them, due to accusations of monopoly crushing the free market. I wish to present a contradistinction to these scenarios by suggesting that Google's reorganization is nothing like any of those.\n\nSergey Brin and Larry Page are in their early 40's. Stepping away from anything that you have heavily invested in can happen in a minimum of two ways. You have either forced out of your position due to bad life decisions or you have turned into a doddering old fool who cannot shape the contents of his/her thoughts. Stepping away from Google when it is at the zenith of its capabilities, means that there is something so much bigger that attracts two multi-billionaires towards it. At this point, someone may argue that it is impeccably clear to anyone that Alphabet will be a conglomerate and a super-set of what Google is, so the point I just made is obvious. I will continue to be adamant and insist that <i>that</i> view is too topical. The Google duo have just made a shrewd move on a giant chessboard.  A chessboard, that includes squares that touch upon human immortality, space exploration, human interconnectivity and existential interaction.\n\nWhile there were constant improvements to their existing product portfolio, Google was in that phase where it was kind of coasting along. I mean they have paid their dues over the last several years, so no one could fault them for that. BOOM. With this announcement, they have turned business as we know it, on its head. This is such a start-up'sh response to current events, something I would have deemed unthinkable in the \"enterprise\" space. It is a big \"EFF YOU\" to companies like Apple, Yahoo, Microsoft and to an extent even Facebook, who have stayed homogeneous for so many years. I have a sneaky suspicion that this might fuel an \"arms race\" among companies, in terms of acquisitions of cross-sector assets to build up a more holistic story and to catch up with this broad vision of corporate thought that Google shone upon us. It is also setting the bar for greenhorn startups and future generations to expand horizons of thinking, when they put their nose to the grindstone. It will no longer suffice to have a successful mobile application doing 'A' particular thing when the universe of possibilities calls for us. Reaching for the stars is no longer a phrase to inspire advancement, but an actual goal for all humanity. The shots have been fired. The rest of us, now need to play catch up.\n\nGoogle has always had a much grander stratagem in place, that some might even call world domination. I, however, think it is far beyond that. I do not mean that in a nefarious way. I believe, that Google is aiming for galactic domination because this world just isn't big enough to house our growing expansionist minds. Google isn't alone in this space, pun intended. There are several thought leaders like Branson and Musk, among few others, who are challenging the frontiers of human jurisdiction as we know it. ( This is not to take away from agencies like NASA/ESA who have sent space probes to the far reaches of the solar system ). At this point in time, I don't believe that people like Brin, Musk, Branson or Zuckerberg care about how many customers use their services or how much revenue is brought in yearly, for its immediate context. Sure, they do still want to make money and be the leaders in the markets they are vying for. For these guys the bigger picture, however, is much more than quarterly reports and customer attrition rate. They are focused on building a legacy that will last beyond them. A legacy that will push humanity to bounds of insanity. A legacy that will catapult mankind into the next millennium and bring us closer to Asimov's Galactic Empire."
    },
    "slug": "big-picture",
    "path": "posts/big-picture",
    "filePath": "big-picture.mdx",
    "toc": [],
    "readingTime": {
      "text": "6 min read",
      "minutes": 5.09,
      "time": 305400,
      "words": 1018
    },
    "structuredData": {
      "@context": "https://schema.org",
      "@type": "BlogPosting",
      "headline": "The Big Picture",
      "datePublished": "2015-08-11T00:00:00.000Z",
      "dateModified": "2015-08-11T00:00:00.000Z",
      "description": "Alphabet's big bet",
      "image": "/static/images/twitter-card.png",
      "url": "https://arjunrao.co/posts/big-picture"
    }
  },
  {
    "title": "Cracking the Code: Discovering Technical Skills for Commercial SaaS positions",
    "date": "2024-03-27T00:00:00.000Z",
    "tags": [
      "strategy",
      "hiring",
      "technology"
    ],
    "lastmod": undefined,
    "draft": false,
    "summary": "Hiring for a commercial role with technical skills",
    "images": [
      "/static/images/saas-sales.jpeg"
    ],
    "authors": undefined,
    "layout": undefined,
    "bibliography": undefined,
    "canonicalUrl": undefined,
    "content": "I was recently asked by one of my cross-functional stakeholder peers in the commercial organization, how they should evaluate a candidate for their technical prowess. The general brief was that \n\n- it was a candidate for the commercial part of the business. \n- this candidate had to be able to speak to the capabilities of the platform to have some conversations with the clients. \n- they would need to know when to pull other folks in if the technical nuances got too complicated for them to handle. \n- this was a role that past employees struggled to adapt, where they were good at the commercial aspect of the role, but struggled to skill up technically.\n\n## Starting with the basics \n\nLet us gameplay this. I won’t speak to the commercial needs of this role, but for the technical component I see two primary instincts that are crucial for this candidate — \n\n- How do they learn? How curious are they about wanting to learn more about a platform or product(s) they are not aware of? \n- How is their problem solving ability? If they encounter a roadblock or an ambiguity, how are they able to create clarity, or know what questions to ask so that they can move forward?\n\nOne could argue that this is the basis for any candidate interview, but parsing out these features for this type of role is not always apparent. \n\n## Taking a leaf from Engineering interviews\n\nIn Engineering interviews, we broadly have 2 rounds of interviews \n\n- **Coding/Programming** — where we evaluate the deep technical abilities of an engineer, with regards to how they think of algorithms and problem solving. Their ability to zoom in and attention to detail for things like performance, testing, observability, code quality and ultimately successful outcomes are part of the test. \n- **System design/Architecture** — where we evaluate wide technical abilities, such as their ability to zoom out. They are expected to ask enough questions so as to propose components that can interconnect and move towards the solution. We then assess their ability to state assumptions and make tradeoffs. \n\n## Getting to the right candidate\n\nUsing the principles of the architecture round, there are a few paths you could go down — \n\n- Give candidates parts of the platform API specs ahead of time and ask them to describe their understanding of how things work. This could be used to see how keen their observations are. You could change a few scenarios around and see how they adapt to the changes. \n\n- You could use an open interface, like [OpenRTB](https://www.iab.com/wp-content/uploads/2016/03/OpenRTB-API-Specification-Version-2-5-FINAL.pdf) and ask candidates to describe parts of how it works — specifically the parts that are relevant to your business. \n\n- A summary of how a specific feature on the platform functions could be provided. Following that, candidates could be prompted to articulate this feature to a client. Before doing so, they may need to inquire about certain aspects to ensure their comprehension before engaging with others. This process would demonstrate their curiosity and understanding.\n\n- Extending from the previous point, interviewers can also role-play as the customer. By asking candidates questions, they can assess their problem-solving abilities. This evaluates whether candidates can effectively use the information provided earlier to address the customer’s needs.\n\n- What problems are you facing TODAY? Trying to see how someone would work through a real-world current problem is a great way to see how they might contribute to your team. Proprietary details can be obfuscated but there should be enough to be able to describe the problem sufficiently. \n\n- Were people hired before who weren’t able to do the job? What exactly did they struggle to do? Use those as case studies to see if this candidate does better or worse. \n\n- Ask the candidates what kind of technical tools they use and LOVE. Ask them to describe how they would change change one or 2 things about the product. It shows an attention to detail and an ability to form opinions. \n\nHiring is a tough exercise. The cost of hiring the wrong person can often be quite high. You need to know what you are looking for a candidate and make sure you run a fair and objective interview process. Hopefully, that results in hiring the right person for this role!",
    "_id": "commercial-hiring.mdx",
    "_raw": {
      "flattenedPath": "commercial-hiring"
    },
    "body": {
      "raw": "I was recently asked by one of my cross-functional stakeholder peers in the commercial organization, how they should evaluate a candidate for their technical prowess. The general brief was that \n\n- it was a candidate for the commercial part of the business. \n- this candidate had to be able to speak to the capabilities of the platform to have some conversations with the clients. \n- they would need to know when to pull other folks in if the technical nuances got too complicated for them to handle. \n- this was a role that past employees struggled to adapt, where they were good at the commercial aspect of the role, but struggled to skill up technically.\n\n## Starting with the basics \n\nLet us gameplay this. I won’t speak to the commercial needs of this role, but for the technical component I see two primary instincts that are crucial for this candidate — \n\n- How do they learn? How curious are they about wanting to learn more about a platform or product(s) they are not aware of? \n- How is their problem solving ability? If they encounter a roadblock or an ambiguity, how are they able to create clarity, or know what questions to ask so that they can move forward?\n\nOne could argue that this is the basis for any candidate interview, but parsing out these features for this type of role is not always apparent. \n\n## Taking a leaf from Engineering interviews\n\nIn Engineering interviews, we broadly have 2 rounds of interviews \n\n- **Coding/Programming** — where we evaluate the deep technical abilities of an engineer, with regards to how they think of algorithms and problem solving. Their ability to zoom in and attention to detail for things like performance, testing, observability, code quality and ultimately successful outcomes are part of the test. \n- **System design/Architecture** — where we evaluate wide technical abilities, such as their ability to zoom out. They are expected to ask enough questions so as to propose components that can interconnect and move towards the solution. We then assess their ability to state assumptions and make tradeoffs. \n\n## Getting to the right candidate\n\nUsing the principles of the architecture round, there are a few paths you could go down — \n\n- Give candidates parts of the platform API specs ahead of time and ask them to describe their understanding of how things work. This could be used to see how keen their observations are. You could change a few scenarios around and see how they adapt to the changes. \n\n- You could use an open interface, like [OpenRTB](https://www.iab.com/wp-content/uploads/2016/03/OpenRTB-API-Specification-Version-2-5-FINAL.pdf) and ask candidates to describe parts of how it works — specifically the parts that are relevant to your business. \n\n- A summary of how a specific feature on the platform functions could be provided. Following that, candidates could be prompted to articulate this feature to a client. Before doing so, they may need to inquire about certain aspects to ensure their comprehension before engaging with others. This process would demonstrate their curiosity and understanding.\n\n- Extending from the previous point, interviewers can also role-play as the customer. By asking candidates questions, they can assess their problem-solving abilities. This evaluates whether candidates can effectively use the information provided earlier to address the customer’s needs.\n\n- What problems are you facing TODAY? Trying to see how someone would work through a real-world current problem is a great way to see how they might contribute to your team. Proprietary details can be obfuscated but there should be enough to be able to describe the problem sufficiently. \n\n- Were people hired before who weren’t able to do the job? What exactly did they struggle to do? Use those as case studies to see if this candidate does better or worse. \n\n- Ask the candidates what kind of technical tools they use and LOVE. Ask them to describe how they would change change one or 2 things about the product. It shows an attention to detail and an ability to form opinions. \n\nHiring is a tough exercise. The cost of hiring the wrong person can often be quite high. You need to know what you are looking for a candidate and make sure you run a fair and objective interview process. Hopefully, that results in hiring the right person for this role!",
      "code": "I was recently asked by one of my cross-functional stakeholder peers in the commercial organization, how they should evaluate a candidate for their technical prowess. The general brief was that \n\n- it was a candidate for the commercial part of the business. \n- this candidate had to be able to speak to the capabilities of the platform to have some conversations with the clients. \n- they would need to know when to pull other folks in if the technical nuances got too complicated for them to handle. \n- this was a role that past employees struggled to adapt, where they were good at the commercial aspect of the role, but struggled to skill up technically.\n\n## Starting with the basics \n\nLet us gameplay this. I won’t speak to the commercial needs of this role, but for the technical component I see two primary instincts that are crucial for this candidate — \n\n- How do they learn? How curious are they about wanting to learn more about a platform or product(s) they are not aware of? \n- How is their problem solving ability? If they encounter a roadblock or an ambiguity, how are they able to create clarity, or know what questions to ask so that they can move forward?\n\nOne could argue that this is the basis for any candidate interview, but parsing out these features for this type of role is not always apparent. \n\n## Taking a leaf from Engineering interviews\n\nIn Engineering interviews, we broadly have 2 rounds of interviews \n\n- **Coding/Programming** — where we evaluate the deep technical abilities of an engineer, with regards to how they think of algorithms and problem solving. Their ability to zoom in and attention to detail for things like performance, testing, observability, code quality and ultimately successful outcomes are part of the test. \n- **System design/Architecture** — where we evaluate wide technical abilities, such as their ability to zoom out. They are expected to ask enough questions so as to propose components that can interconnect and move towards the solution. We then assess their ability to state assumptions and make tradeoffs. \n\n## Getting to the right candidate\n\nUsing the principles of the architecture round, there are a few paths you could go down — \n\n- Give candidates parts of the platform API specs ahead of time and ask them to describe their understanding of how things work. This could be used to see how keen their observations are. You could change a few scenarios around and see how they adapt to the changes. \n\n- You could use an open interface, like [OpenRTB](https://www.iab.com/wp-content/uploads/2016/03/OpenRTB-API-Specification-Version-2-5-FINAL.pdf) and ask candidates to describe parts of how it works — specifically the parts that are relevant to your business. \n\n- A summary of how a specific feature on the platform functions could be provided. Following that, candidates could be prompted to articulate this feature to a client. Before doing so, they may need to inquire about certain aspects to ensure their comprehension before engaging with others. This process would demonstrate their curiosity and understanding.\n\n- Extending from the previous point, interviewers can also role-play as the customer. By asking candidates questions, they can assess their problem-solving abilities. This evaluates whether candidates can effectively use the information provided earlier to address the customer’s needs.\n\n- What problems are you facing TODAY? Trying to see how someone would work through a real-world current problem is a great way to see how they might contribute to your team. Proprietary details can be obfuscated but there should be enough to be able to describe the problem sufficiently. \n\n- Were people hired before who weren’t able to do the job? What exactly did they struggle to do? Use those as case studies to see if this candidate does better or worse. \n\n- Ask the candidates what kind of technical tools they use and LOVE. Ask them to describe how they would change change one or 2 things about the product. It shows an attention to detail and an ability to form opinions. \n\nHiring is a tough exercise. The cost of hiring the wrong person can often be quite high. You need to know what you are looking for a candidate and make sure you run a fair and objective interview process. Hopefully, that results in hiring the right person for this role!"
    },
    "slug": "commercial-hiring",
    "path": "posts/commercial-hiring",
    "filePath": "commercial-hiring.mdx",
    "toc": [],
    "readingTime": {
      "text": "4 min read",
      "minutes": 3.55,
      "time": 213000,
      "words": 710
    },
    "structuredData": {
      "@context": "https://schema.org",
      "@type": "BlogPosting",
      "headline": "Cracking the Code: Discovering Technical Skills for Commercial SaaS positions",
      "datePublished": "2024-03-27T00:00:00.000Z",
      "dateModified": "2024-03-27T00:00:00.000Z",
      "description": "Hiring for a commercial role with technical skills",
      "image": "/static/images/saas-sales.jpeg",
      "url": "https://arjunrao.co/posts/commercial-hiring"
    }
  },
  {
    "title": "The art of complaining effectively",
    "date": "2024-05-31T00:00:00.000Z",
    "tags": [
      "aurora",
      "travel"
    ],
    "lastmod": undefined,
    "draft": false,
    "summary": "How being solutions oriented is important for career and character",
    "images": undefined,
    "authors": undefined,
    "layout": undefined,
    "bibliography": undefined,
    "canonicalUrl": undefined,
    "content": "Marcus Aurelius said \"Don't be overheard complaining…Not even to yourself\". I think about this statement a fair bit. Stoics believe complaining is pointless since that is time wasted when it could be spent improving personally.\n\nComplaining in most cases is bad. When you just complain all the time it is a major mental drain on yourself and people surrounding you. Merely complaining helps no one and breeds negativity. \n\nHowever, there are a couple of positives to complaining -\n- Sometimes you just need to get things off your chest, feel better and move on. This is something you should use strategically because otherwise it can very easily fit into the previous category of mindless complaining.\n- Other times, it shows that you don't believe in the status quo. For whatever reason, the current scenario isn't to your liking and you are going against the tide.\n\nThe big question here is \"so what?\". What you do next will likely determine the type of person you are. You know how they say \"there are no wrong answers\"? Unfortunately in this case there is a wrong answer. If you continue to complain, you will not inspire any confidence in people to believe or follow you. On the other hand, if you like to think of it as a way to redirect the problem towards a solution, that busts a big door of possibilities . Rather than just complain and whine about something, presenting an alternative or a solution to the situation helps bring purpose to it. Your ability to come equipped with a solution without being asked to, shows that you have initiative.\n\nThe more senior you get, the more this is imperative. Your ability to be an effective senior is predicated on spotting scenarios that are not optimal for your team or codebase coupled with a knack for identifying solutions for them. It doesn't have to be perfect. You, your peers or your boss can build on top of it and get it to a viable place.\n\nThis is not just a career-motivated tactic but a way to breed the right character. If you want to be seen as a problem solver, a go-getter, someone who can be depended on to think of the greater good - you have to come to the table with something besides just grievances. When you think about complaining, take a second to think about how you could contribute to making the situation better, either through yours or someone else's actions and you are now on the path of effective complaining.",
    "_id": "complaining.mdx",
    "_raw": {
      "flattenedPath": "complaining"
    },
    "body": {
      "raw": "Marcus Aurelius said \"Don't be overheard complaining…Not even to yourself\". I think about this statement a fair bit. Stoics believe complaining is pointless since that is time wasted when it could be spent improving personally.\n\nComplaining in most cases is bad. When you just complain all the time it is a major mental drain on yourself and people surrounding you. Merely complaining helps no one and breeds negativity. \n\nHowever, there are a couple of positives to complaining -\n- Sometimes you just need to get things off your chest, feel better and move on. This is something you should use strategically because otherwise it can very easily fit into the previous category of mindless complaining.\n- Other times, it shows that you don't believe in the status quo. For whatever reason, the current scenario isn't to your liking and you are going against the tide.\n\nThe big question here is \"so what?\". What you do next will likely determine the type of person you are. You know how they say \"there are no wrong answers\"? Unfortunately in this case there is a wrong answer. If you continue to complain, you will not inspire any confidence in people to believe or follow you. On the other hand, if you like to think of it as a way to redirect the problem towards a solution, that busts a big door of possibilities . Rather than just complain and whine about something, presenting an alternative or a solution to the situation helps bring purpose to it. Your ability to come equipped with a solution without being asked to, shows that you have initiative.\n\nThe more senior you get, the more this is imperative. Your ability to be an effective senior is predicated on spotting scenarios that are not optimal for your team or codebase coupled with a knack for identifying solutions for them. It doesn't have to be perfect. You, your peers or your boss can build on top of it and get it to a viable place.\n\nThis is not just a career-motivated tactic but a way to breed the right character. If you want to be seen as a problem solver, a go-getter, someone who can be depended on to think of the greater good - you have to come to the table with something besides just grievances. When you think about complaining, take a second to think about how you could contribute to making the situation better, either through yours or someone else's actions and you are now on the path of effective complaining.",
      "code": "Marcus Aurelius said \"Don't be overheard complaining…Not even to yourself\". I think about this statement a fair bit. Stoics believe complaining is pointless since that is time wasted when it could be spent improving personally.\n\nComplaining in most cases is bad. When you just complain all the time it is a major mental drain on yourself and people surrounding you. Merely complaining helps no one and breeds negativity. \n\nHowever, there are a couple of positives to complaining -\n- Sometimes you just need to get things off your chest, feel better and move on. This is something you should use strategically because otherwise it can very easily fit into the previous category of mindless complaining.\n- Other times, it shows that you don't believe in the status quo. For whatever reason, the current scenario isn't to your liking and you are going against the tide.\n\nThe big question here is \"so what?\". What you do next will likely determine the type of person you are. You know how they say \"there are no wrong answers\"? Unfortunately in this case there is a wrong answer. If you continue to complain, you will not inspire any confidence in people to believe or follow you. On the other hand, if you like to think of it as a way to redirect the problem towards a solution, that busts a big door of possibilities . Rather than just complain and whine about something, presenting an alternative or a solution to the situation helps bring purpose to it. Your ability to come equipped with a solution without being asked to, shows that you have initiative.\n\nThe more senior you get, the more this is imperative. Your ability to be an effective senior is predicated on spotting scenarios that are not optimal for your team or codebase coupled with a knack for identifying solutions for them. It doesn't have to be perfect. You, your peers or your boss can build on top of it and get it to a viable place.\n\nThis is not just a career-motivated tactic but a way to breed the right character. If you want to be seen as a problem solver, a go-getter, someone who can be depended on to think of the greater good - you have to come to the table with something besides just grievances. When you think about complaining, take a second to think about how you could contribute to making the situation better, either through yours or someone else's actions and you are now on the path of effective complaining."
    },
    "slug": "complaining",
    "path": "posts/complaining",
    "filePath": "complaining.mdx",
    "toc": [],
    "readingTime": {
      "text": "3 min read",
      "minutes": 2.105,
      "time": 126300,
      "words": 421
    },
    "structuredData": {
      "@context": "https://schema.org",
      "@type": "BlogPosting",
      "headline": "The art of complaining effectively",
      "datePublished": "2024-05-31T00:00:00.000Z",
      "dateModified": "2024-05-31T00:00:00.000Z",
      "description": "How being solutions oriented is important for career and character",
      "image": "/static/images/twitter-card.png",
      "url": "https://arjunrao.co/posts/complaining"
    }
  },
  {
    "title": "Consistency not Intensity",
    "date": "2023-01-22T00:00:00.000Z",
    "tags": [
      "motivation",
      "drive",
      "longterm"
    ],
    "lastmod": undefined,
    "draft": false,
    "summary": "It's a marathon, not a sprint",
    "images": [
      "/static/images/stonecutter.png"
    ],
    "authors": undefined,
    "layout": undefined,
    "bibliography": undefined,
    "canonicalUrl": undefined,
    "content": "At this point, I am probably going somewhere between 13–16 times a month to the gym, much more frequently than I used to in the past. It’s not like I suddenly feel like the Hulk but by the weights I lift each time, I know I am consistently progressing up a notch. By my own measure, its a great metric to see creeping up — not a crazy exponential curve, but just a steady, linear uptick. If I feel extra peppy a particular day, I always use the phrase “Its a marathon, not a sprint” to resist the urge to try to lift something that is much more than what I think I should be doing.\n\nI was watching a video today, where someone said “Its about consistency, not intensity” which I agree with. Intensity might be a flash in the pan, and could just as easily lead to burnout, or in this case injuries. Showing up often at the gym and going through that routine, is far more important than me trying to lift 100 lbs when I could be doing 45 lbs consistently each day.\n\n\nAs the Stonecutters Credo goes — “When nothing seems to help, I go and look at a stonecutter hammering away at his rock perhaps a hundred times without as much as a crack showing in it. Yet at the hundred and first blow it will split in two, and I know it was not that blow that did it, but all that had gone before.”",
    "_id": "consistency.mdx",
    "_raw": {
      "flattenedPath": "consistency"
    },
    "body": {
      "raw": "At this point, I am probably going somewhere between 13–16 times a month to the gym, much more frequently than I used to in the past. It’s not like I suddenly feel like the Hulk but by the weights I lift each time, I know I am consistently progressing up a notch. By my own measure, its a great metric to see creeping up — not a crazy exponential curve, but just a steady, linear uptick. If I feel extra peppy a particular day, I always use the phrase “Its a marathon, not a sprint” to resist the urge to try to lift something that is much more than what I think I should be doing.\n\nI was watching a video today, where someone said “Its about consistency, not intensity” which I agree with. Intensity might be a flash in the pan, and could just as easily lead to burnout, or in this case injuries. Showing up often at the gym and going through that routine, is far more important than me trying to lift 100 lbs when I could be doing 45 lbs consistently each day.\n\n\nAs the Stonecutters Credo goes — “When nothing seems to help, I go and look at a stonecutter hammering away at his rock perhaps a hundred times without as much as a crack showing in it. Yet at the hundred and first blow it will split in two, and I know it was not that blow that did it, but all that had gone before.”",
      "code": "At this point, I am probably going somewhere between 13–16 times a month to the gym, much more frequently than I used to in the past. It’s not like I suddenly feel like the Hulk but by the weights I lift each time, I know I am consistently progressing up a notch. By my own measure, its a great metric to see creeping up — not a crazy exponential curve, but just a steady, linear uptick. If I feel extra peppy a particular day, I always use the phrase “Its a marathon, not a sprint” to resist the urge to try to lift something that is much more than what I think I should be doing.\n\nI was watching a video today, where someone said “Its about consistency, not intensity” which I agree with. Intensity might be a flash in the pan, and could just as easily lead to burnout, or in this case injuries. Showing up often at the gym and going through that routine, is far more important than me trying to lift 100 lbs when I could be doing 45 lbs consistently each day.\n\n\nAs the Stonecutters Credo goes — “When nothing seems to help, I go and look at a stonecutter hammering away at his rock perhaps a hundred times without as much as a crack showing in it. Yet at the hundred and first blow it will split in two, and I know it was not that blow that did it, but all that had gone before.”"
    },
    "slug": "consistency",
    "path": "posts/consistency",
    "filePath": "consistency.mdx",
    "toc": [],
    "readingTime": {
      "text": "2 min read",
      "minutes": 1.26,
      "time": 75600,
      "words": 252
    },
    "structuredData": {
      "@context": "https://schema.org",
      "@type": "BlogPosting",
      "headline": "Consistency not Intensity",
      "datePublished": "2023-01-22T00:00:00.000Z",
      "dateModified": "2023-01-22T00:00:00.000Z",
      "description": "It's a marathon, not a sprint",
      "image": "/static/images/stonecutter.png",
      "url": "https://arjunrao.co/posts/consistency"
    }
  },
  {
    "title": "Curling - An Engineering Management story",
    "date": "2024-02-21T00:00:00.000Z",
    "tags": [
      "management",
      "engineering"
    ],
    "lastmod": undefined,
    "draft": false,
    "summary": "Drawing inspiration from an icy sport",
    "images": [
      "/static/images/curling2.png"
    ],
    "authors": undefined,
    "layout": undefined,
    "bibliography": undefined,
    "canonicalUrl": undefined,
    "content": "I have always thought Curling is a great analogy for Engineering Management. I won't go into the details of Curling itself, because it is surprisingly more complicated than I had expected it to be. However, topically I will use analogies to convey how I think of Curling and Engineering Management in the same sphere.\n\nA curling team consists of four players trying to ensure that the stone they are responsible for reaches a certain part of the very long strip of specially prepared ice called a `Sheet`. Roughly, the responsibility of two of the players is as follows :\n\n1. One of the players I will call the `Sweeper` (sic) because they are responsible for Sweeping (official term) - the idea of sweeping is to gently warm the surface of the ice where the stone will glide across.\n\n2. The other player is responsible for setting down the stone on the trajectory that they expect the stone to land on. I shall call this position the \"Shooter\" (sic).\n\n\n> For folks curious about Curling - this gets a bit more complicated based on _who_ acts as the shooter. The playing positions are commonly known as Lead, Second, Third and Fourth. The lead is the player who delivers the first two stones. The second plays the third and fourth stones. The third plays the fifth and sixth stones and the fourth plays the last two stones. Skips usually play fourth, but that's not essential.\n\nThe way I think about it, the `Sweeper` is the Engineering Manager and the `Shooter` is the Individual Contributor. When the Shooter sets down the stone, it is the Sweeper who needs to ensure there are no obstacles for the stone to successfully deliver to its destination. The Sweeper does this by rubbing away any obstacles on the sheet and warming up the ice so that the stone glides smoothly to its target.\n\nWhat the `Sweeper` does here is not unlike the work of an Engineering Manager. One of my primary responsibilities as an Engineering Manager is to be a \"Human Debugger\". What this means is that I need to ensure I understand what makes my team tick and what makes them not perform to the best of their abilities. That will involve at times ensuring I am able to create the right environment, provide them with the right tools, and let them have adequate runway they need to be able to execute their tasks without any distractions.\n\nThe analogy is not perfect, but it is a helpful way to think about how to set up your direct reports for success.",
    "_id": "curling.mdx",
    "_raw": {
      "flattenedPath": "curling"
    },
    "body": {
      "raw": "I have always thought Curling is a great analogy for Engineering Management. I won't go into the details of Curling itself, because it is surprisingly more complicated than I had expected it to be. However, topically I will use analogies to convey how I think of Curling and Engineering Management in the same sphere.\n\nA curling team consists of four players trying to ensure that the stone they are responsible for reaches a certain part of the very long strip of specially prepared ice called a `Sheet`. Roughly, the responsibility of two of the players is as follows :\n\n1. One of the players I will call the `Sweeper` (sic) because they are responsible for Sweeping (official term) - the idea of sweeping is to gently warm the surface of the ice where the stone will glide across.\n\n2. The other player is responsible for setting down the stone on the trajectory that they expect the stone to land on. I shall call this position the \"Shooter\" (sic).\n\n\n> For folks curious about Curling - this gets a bit more complicated based on _who_ acts as the shooter. The playing positions are commonly known as Lead, Second, Third and Fourth. The lead is the player who delivers the first two stones. The second plays the third and fourth stones. The third plays the fifth and sixth stones and the fourth plays the last two stones. Skips usually play fourth, but that's not essential.\n\nThe way I think about it, the `Sweeper` is the Engineering Manager and the `Shooter` is the Individual Contributor. When the Shooter sets down the stone, it is the Sweeper who needs to ensure there are no obstacles for the stone to successfully deliver to its destination. The Sweeper does this by rubbing away any obstacles on the sheet and warming up the ice so that the stone glides smoothly to its target.\n\nWhat the `Sweeper` does here is not unlike the work of an Engineering Manager. One of my primary responsibilities as an Engineering Manager is to be a \"Human Debugger\". What this means is that I need to ensure I understand what makes my team tick and what makes them not perform to the best of their abilities. That will involve at times ensuring I am able to create the right environment, provide them with the right tools, and let them have adequate runway they need to be able to execute their tasks without any distractions.\n\nThe analogy is not perfect, but it is a helpful way to think about how to set up your direct reports for success.",
      "code": "I have always thought Curling is a great analogy for Engineering Management. I won't go into the details of Curling itself, because it is surprisingly more complicated than I had expected it to be. However, topically I will use analogies to convey how I think of Curling and Engineering Management in the same sphere.\n\nA curling team consists of four players trying to ensure that the stone they are responsible for reaches a certain part of the very long strip of specially prepared ice called a `Sheet`. Roughly, the responsibility of two of the players is as follows :\n\n1. One of the players I will call the `Sweeper` (sic) because they are responsible for Sweeping (official term) - the idea of sweeping is to gently warm the surface of the ice where the stone will glide across.\n\n2. The other player is responsible for setting down the stone on the trajectory that they expect the stone to land on. I shall call this position the \"Shooter\" (sic).\n\n\n> For folks curious about Curling - this gets a bit more complicated based on _who_ acts as the shooter. The playing positions are commonly known as Lead, Second, Third and Fourth. The lead is the player who delivers the first two stones. The second plays the third and fourth stones. The third plays the fifth and sixth stones and the fourth plays the last two stones. Skips usually play fourth, but that's not essential.\n\nThe way I think about it, the `Sweeper` is the Engineering Manager and the `Shooter` is the Individual Contributor. When the Shooter sets down the stone, it is the Sweeper who needs to ensure there are no obstacles for the stone to successfully deliver to its destination. The Sweeper does this by rubbing away any obstacles on the sheet and warming up the ice so that the stone glides smoothly to its target.\n\nWhat the `Sweeper` does here is not unlike the work of an Engineering Manager. One of my primary responsibilities as an Engineering Manager is to be a \"Human Debugger\". What this means is that I need to ensure I understand what makes my team tick and what makes them not perform to the best of their abilities. That will involve at times ensuring I am able to create the right environment, provide them with the right tools, and let them have adequate runway they need to be able to execute their tasks without any distractions.\n\nThe analogy is not perfect, but it is a helpful way to think about how to set up your direct reports for success."
    },
    "slug": "curling",
    "path": "posts/curling",
    "filePath": "curling.mdx",
    "toc": [],
    "readingTime": {
      "text": "3 min read",
      "minutes": 2.145,
      "time": 128700,
      "words": 429
    },
    "structuredData": {
      "@context": "https://schema.org",
      "@type": "BlogPosting",
      "headline": "Curling - An Engineering Management story",
      "datePublished": "2024-02-21T00:00:00.000Z",
      "dateModified": "2024-02-21T00:00:00.000Z",
      "description": "Drawing inspiration from an icy sport",
      "image": "/static/images/curling2.png",
      "url": "https://arjunrao.co/posts/curling"
    }
  },
  {
    "title": "Change in Direction",
    "date": "2015-03-20T00:00:00.000Z",
    "tags": [
      "philosophy",
      "book",
      "reflection"
    ],
    "lastmod": undefined,
    "draft": false,
    "summary": "Pivoting the direction of this website",
    "images": undefined,
    "authors": undefined,
    "layout": undefined,
    "bibliography": undefined,
    "canonicalUrl": undefined,
    "content": "This site used to be called \"Mind your code\" which was meant to present a very narrow cross section of the person I am. It was then called \"Strength and Honor\" for two main reasons:\n\n1. Strength : To curate and document my own strengths and failings for my future reference in a spectrum of topics be it science, technology, politics, humanity or philosophy. Life and beyond as some might say.\n2. Honor : To codify what it means to be honorable and what rules I stand by when I make decisions about my life.\n\nThe blog has been finally moved to my own website and this is its final destination.\nI intend to write about my views at this point in time and maybe when I look back at them in the years hence, I might not necessarily associate with all of them. The important point however, is that I have these views out there so that I cannot weasel my way out of them when I am between a rock and a hard place.\nI also intend to write about my experiences so that there is something set in stone, or in this case, the print of the interwebs. I forget things of the past far too easily, if I do not have a constant reminder of the experiences I had at the time.\nThis platform is also a place where I will transcribe my experiments with technology a priori so that I can reference them in the future. I am always thirsty for gaining more knowledge, be it new technologies or reading books voraciously or visiting new places. So I want to be able to adduce my so-called appetite for knowledge through this page as well as keep a track of what I have learned.\nThis, is meant to be the window into my zeitgeist.",
    "_id": "direction.mdx",
    "_raw": {
      "flattenedPath": "direction"
    },
    "body": {
      "raw": "This site used to be called \"Mind your code\" which was meant to present a very narrow cross section of the person I am. It was then called \"Strength and Honor\" for two main reasons:\n\n1. Strength : To curate and document my own strengths and failings for my future reference in a spectrum of topics be it science, technology, politics, humanity or philosophy. Life and beyond as some might say.\n2. Honor : To codify what it means to be honorable and what rules I stand by when I make decisions about my life.\n\nThe blog has been finally moved to my own website and this is its final destination.\nI intend to write about my views at this point in time and maybe when I look back at them in the years hence, I might not necessarily associate with all of them. The important point however, is that I have these views out there so that I cannot weasel my way out of them when I am between a rock and a hard place.\nI also intend to write about my experiences so that there is something set in stone, or in this case, the print of the interwebs. I forget things of the past far too easily, if I do not have a constant reminder of the experiences I had at the time.\nThis platform is also a place where I will transcribe my experiments with technology a priori so that I can reference them in the future. I am always thirsty for gaining more knowledge, be it new technologies or reading books voraciously or visiting new places. So I want to be able to adduce my so-called appetite for knowledge through this page as well as keep a track of what I have learned.\nThis, is meant to be the window into my zeitgeist.",
      "code": "This site used to be called \"Mind your code\" which was meant to present a very narrow cross section of the person I am. It was then called \"Strength and Honor\" for two main reasons:\n\n1. Strength : To curate and document my own strengths and failings for my future reference in a spectrum of topics be it science, technology, politics, humanity or philosophy. Life and beyond as some might say.\n2. Honor : To codify what it means to be honorable and what rules I stand by when I make decisions about my life.\n\nThe blog has been finally moved to my own website and this is its final destination.\nI intend to write about my views at this point in time and maybe when I look back at them in the years hence, I might not necessarily associate with all of them. The important point however, is that I have these views out there so that I cannot weasel my way out of them when I am between a rock and a hard place.\nI also intend to write about my experiences so that there is something set in stone, or in this case, the print of the interwebs. I forget things of the past far too easily, if I do not have a constant reminder of the experiences I had at the time.\nThis platform is also a place where I will transcribe my experiments with technology a priori so that I can reference them in the future. I am always thirsty for gaining more knowledge, be it new technologies or reading books voraciously or visiting new places. So I want to be able to adduce my so-called appetite for knowledge through this page as well as keep a track of what I have learned.\nThis, is meant to be the window into my zeitgeist."
    },
    "slug": "direction",
    "path": "posts/direction",
    "filePath": "direction.mdx",
    "toc": [],
    "readingTime": {
      "text": "2 min read",
      "minutes": 1.515,
      "time": 90900,
      "words": 303
    },
    "structuredData": {
      "@context": "https://schema.org",
      "@type": "BlogPosting",
      "headline": "Change in Direction",
      "datePublished": "2015-03-20T00:00:00.000Z",
      "dateModified": "2015-03-20T00:00:00.000Z",
      "description": "Pivoting the direction of this website",
      "image": "/static/images/twitter-card.png",
      "url": "https://arjunrao.co/posts/direction"
    }
  },
  {
    "title": "Eggs: Let us hatch a plan together",
    "date": "2024-03-03T00:00:00.000Z",
    "tags": [
      "education",
      "health"
    ],
    "lastmod": undefined,
    "draft": false,
    "summary": "How to pick the right type of eggs",
    "images": [
      "/static/images/eggs-header.jpg"
    ],
    "authors": undefined,
    "layout": undefined,
    "bibliography": undefined,
    "canonicalUrl": undefined,
    "content": "Before you dismiss this post based on it's title, let me tell you, what I am talking about here is extremely important. You hear people say things like `How is it that in my trips to Europe I can eat twice of what I eat at home in the States, and yet I lose weight?`. While this post doesn't have all the pieces for that question, it starts to paint a picture. \n\nI would say I am a \"slightly above average\" grocery shopper. I spend a lot of time perusing grocery aisles, even if I know exactly where the one thing I have come looking for is. For the last 15 years, I have walked past the eggs section in grocery store aisles. I always equated `cage free` to be the same as `free range`. Additionally, I have had a small amount of skepticism for the whitelabeled store eggs, which I felt (without any reason) were \"not as healthy\" as the ones with the fancier packaging. \n\nI recently came across an [Instagram reel](https://www.instagram.com/reel/Clb6Z1yPQq6/?igshid=YmMyMTA2M2Y=) that talked about the different varieties of eggs you get in an American grocery store and it opened my eyes to what the different types are. \n\nThere are 4 main types of eggs you can purchase - \n\n## 1. Traditional eggs \nThese are typically whitelabled store eggs. These are hatched by hens raised in cages that have less than 67 sq inches of space. Wording such as \"All-Natural\" and \"Farm Fresh\" does not relate to animal welfare and are purely marketing terms that literally cannot be refuted, but are fancier words similar to \"artisanal\" or \"organic\".\n\n## 2. Cage free eggs\nThese are hatched by hens raised in barns, but those hens don't get to go outside **at all**. They were also likely stocked at high densities, meaning there was no limit to the number of birds in a given barn.\n\n## 3. Free range eggs\nFree-range eggs means that hens must be given access to outdoor space, typically about 2 sq ft of roaming outdoor space. These hens are typically fed soy and corn as part of their feed.\n\n## 4. Pasture raised eggs\nThese eggs are hatched by hens that are allowed to roam free, generally between 35–108 sq ft of outdoor roaming space. In pasture scenarios, chickens generally have access to the outdoors for many hours every day getting grass, bugs, worms but also grains as part of their feed.\n\n# Whats the bottom line?\nBuying **Pasture Raised Eggs** is your best bet since the chicken has grazed in the best possible way. These eggs are expensive, but I believe they are worth it. There is an additional level-up of looking for when the chicken are not fed soy or corn as part of their feed.  However, if you can't find it you are still significant better off than purchasing the other kinds of eggs. Everything else seems absolutely foul (pun intended) given the information I now know. \n\nThese are the eggs I purchase at my supermarket - \n\n![](/static/images/eggs.jpg)\n\nThats all for today, yolks!",
    "_id": "eggs.mdx",
    "_raw": {
      "flattenedPath": "eggs"
    },
    "body": {
      "raw": "Before you dismiss this post based on it's title, let me tell you, what I am talking about here is extremely important. You hear people say things like `How is it that in my trips to Europe I can eat twice of what I eat at home in the States, and yet I lose weight?`. While this post doesn't have all the pieces for that question, it starts to paint a picture. \n\nI would say I am a \"slightly above average\" grocery shopper. I spend a lot of time perusing grocery aisles, even if I know exactly where the one thing I have come looking for is. For the last 15 years, I have walked past the eggs section in grocery store aisles. I always equated `cage free` to be the same as `free range`. Additionally, I have had a small amount of skepticism for the whitelabeled store eggs, which I felt (without any reason) were \"not as healthy\" as the ones with the fancier packaging. \n\nI recently came across an [Instagram reel](https://www.instagram.com/reel/Clb6Z1yPQq6/?igshid=YmMyMTA2M2Y=) that talked about the different varieties of eggs you get in an American grocery store and it opened my eyes to what the different types are. \n\nThere are 4 main types of eggs you can purchase - \n\n## 1. Traditional eggs \nThese are typically whitelabled store eggs. These are hatched by hens raised in cages that have less than 67 sq inches of space. Wording such as \"All-Natural\" and \"Farm Fresh\" does not relate to animal welfare and are purely marketing terms that literally cannot be refuted, but are fancier words similar to \"artisanal\" or \"organic\".\n\n## 2. Cage free eggs\nThese are hatched by hens raised in barns, but those hens don't get to go outside **at all**. They were also likely stocked at high densities, meaning there was no limit to the number of birds in a given barn.\n\n## 3. Free range eggs\nFree-range eggs means that hens must be given access to outdoor space, typically about 2 sq ft of roaming outdoor space. These hens are typically fed soy and corn as part of their feed.\n\n## 4. Pasture raised eggs\nThese eggs are hatched by hens that are allowed to roam free, generally between 35–108 sq ft of outdoor roaming space. In pasture scenarios, chickens generally have access to the outdoors for many hours every day getting grass, bugs, worms but also grains as part of their feed.\n\n# Whats the bottom line?\nBuying **Pasture Raised Eggs** is your best bet since the chicken has grazed in the best possible way. These eggs are expensive, but I believe they are worth it. There is an additional level-up of looking for when the chicken are not fed soy or corn as part of their feed.  However, if you can't find it you are still significant better off than purchasing the other kinds of eggs. Everything else seems absolutely foul (pun intended) given the information I now know. \n\nThese are the eggs I purchase at my supermarket - \n\n![](/static/images/eggs.jpg)\n\nThats all for today, yolks!",
      "code": "Before you dismiss this post based on it's title, let me tell you, what I am talking about here is extremely important. You hear people say things like `How is it that in my trips to Europe I can eat twice of what I eat at home in the States, and yet I lose weight?`. While this post doesn't have all the pieces for that question, it starts to paint a picture. \n\nI would say I am a \"slightly above average\" grocery shopper. I spend a lot of time perusing grocery aisles, even if I know exactly where the one thing I have come looking for is. For the last 15 years, I have walked past the eggs section in grocery store aisles. I always equated `cage free` to be the same as `free range`. Additionally, I have had a small amount of skepticism for the whitelabeled store eggs, which I felt (without any reason) were \"not as healthy\" as the ones with the fancier packaging. \n\nI recently came across an [Instagram reel](https://www.instagram.com/reel/Clb6Z1yPQq6/?igshid=YmMyMTA2M2Y=) that talked about the different varieties of eggs you get in an American grocery store and it opened my eyes to what the different types are. \n\nThere are 4 main types of eggs you can purchase - \n\n## 1. Traditional eggs \nThese are typically whitelabled store eggs. These are hatched by hens raised in cages that have less than 67 sq inches of space. Wording such as \"All-Natural\" and \"Farm Fresh\" does not relate to animal welfare and are purely marketing terms that literally cannot be refuted, but are fancier words similar to \"artisanal\" or \"organic\".\n\n## 2. Cage free eggs\nThese are hatched by hens raised in barns, but those hens don't get to go outside **at all**. They were also likely stocked at high densities, meaning there was no limit to the number of birds in a given barn.\n\n## 3. Free range eggs\nFree-range eggs means that hens must be given access to outdoor space, typically about 2 sq ft of roaming outdoor space. These hens are typically fed soy and corn as part of their feed.\n\n## 4. Pasture raised eggs\nThese eggs are hatched by hens that are allowed to roam free, generally between 35–108 sq ft of outdoor roaming space. In pasture scenarios, chickens generally have access to the outdoors for many hours every day getting grass, bugs, worms but also grains as part of their feed.\n\n# Whats the bottom line?\nBuying **Pasture Raised Eggs** is your best bet since the chicken has grazed in the best possible way. These eggs are expensive, but I believe they are worth it. There is an additional level-up of looking for when the chicken are not fed soy or corn as part of their feed.  However, if you can't find it you are still significant better off than purchasing the other kinds of eggs. Everything else seems absolutely foul (pun intended) given the information I now know. \n\nThese are the eggs I purchase at my supermarket - \n\n![](/static/images/eggs.jpg)\n\nThats all for today, yolks!"
    },
    "slug": "eggs",
    "path": "posts/eggs",
    "filePath": "eggs.mdx",
    "toc": [],
    "readingTime": {
      "text": "3 min read",
      "minutes": 2.55,
      "time": 153000,
      "words": 510
    },
    "structuredData": {
      "@context": "https://schema.org",
      "@type": "BlogPosting",
      "headline": "Eggs: Let us hatch a plan together",
      "datePublished": "2024-03-03T00:00:00.000Z",
      "dateModified": "2024-03-03T00:00:00.000Z",
      "description": "How to pick the right type of eggs",
      "image": "/static/images/eggs-header.jpg",
      "url": "https://arjunrao.co/posts/eggs"
    }
  },
  {
    "title": "The failure to finish & how to get better at completing projects that you start",
    "date": "2020-03-25T00:00:00.000Z",
    "tags": [
      "growth",
      "motivation"
    ],
    "lastmod": undefined,
    "draft": false,
    "summary": "Seeing projects through to the end",
    "images": undefined,
    "authors": undefined,
    "layout": undefined,
    "bibliography": undefined,
    "canonicalUrl": undefined,
    "content": "> \"There is no failure, except in no longer trying.\" - Chris Bradford\n\n*Full disclaimer* - I had no idea who [Chris Bradford](http://www.chrisbradford.co.uk/books.html) was before I read this, but this quote resonated with me quite profoundly, and thus it finds its way as the opening statement to this post.\n\n## What is the failure to finish?\n\nIf you were to peruse any sort of literature, be it historical or contemporary, you will find a multitude of trite sayings or expressions, all pointing out the value of failure -\n\n- How failure is acceptable.\n- How it is a stepping stone to achieving that greatness, that is oh-so-close, if you put in the effort.\n- How failing is the only way of succeeding at something.\n\nI don't intend to buttress this argument by adding any truisms of my own.\nWhat I do intend to do, however, is highlight a problem that I have been facing in the past few years. I am talking about the inability to _finish projects_. I will unwrap all the details behind that statement, but I think it will help if I gave you some context about myself.\n\nI love doing stuff. I love working on exciting projects. I love working on side hustles. I love thinking about how to optimize processes. I love thinking about politics and science. I love reading books. I love photography. I love going to the gym and working out. I love debating the deep questions of life and the universe.\n\nThe truth, however, is that I don't do most of those things anymore. It is not because I don't _like_ doing any of those things. No, no. It is because in the past few years, when I have attempted these tasks, I have not had any success in finishing those off to completion.\n\nThe definition of \"finish\" is a bit fuzzy unless you have objective goals associated with tasks. In my own loose definition, to 'finish' is to see a task to a point where if I were to revisit it, I will not feel any feelings of incompleteness. This is not to say that finishing something is the equivalent of achieving perfection. It is a bit naive to assume any task you complete has no room for improvement in the future. In fact, if you work on something the \"right\" way, you should always be in a place where you are learning and improving on that something.\n\nWithout beating around the bush, my explanation of not finishing my tasks or side hustles is that I just did not **finish** it. Terminar. Khatam. Finire. That's it. Plain and simple. Everybody will know for themselves what that means.\n\nThe crux of this post is to delve into the _why_ and the _how_. **Why** is it so tough to finish something we start and **how** can this be fixed?\n\n## Why do people fail to finish?\n\nI want to list out some of the reasons that make it hard to see a project all the way to completion -\n\n- Premature initiation - You don't believe in the idea, but you start working on it anyway\n- Pressure from the Big Picture - The big picture of achieving your idea can start to get overwhelming\n- Lack of a Feedback Mechanism - There is no feedback mechanism i.e. not realizing instant achievements or things that you are doing well, that end up feeding the egotistic part of the brain. A close analogy is when you go to the gym and you feel the \"happiness\" from all that serotonin, makes you want to go back to the gym to recreate the experience\n- Imposter syndrome - You might be filled with misgivings or self doubt and the feeling of not being competent enough. You might wonder if the things you are working on are even unique and if not, what is the point of doing it.\n- Challenging - The task/project you chose to do, is actually quite challenging, be it physically or mentally. So instead, you watch Netflix or go out to the park. Your mind might play games with you such as \"Why go through the mental and physical pain, when instead you can turn on a Hulu show?\"\n- Distractions - Our attention spans are getting shorter. Whether it is notifications that you keep receiving on your phone, or your now-muscle-memory to check twitter/reddit/instagram/Netflix, it is just way to easy to not have a dedicated block of focus time where you can do some deep thinking to finish off your task in chunks.\n- Banality - While the idea that you start with is grandiose, there are little things that need to be done to accomplish it. You might find those to be incredibly boring and that might be a trigger for you to switch focus off your project.\n- Unreal expectations - Setting unrealistic expectations, for both for timeline completion of projects as well as the intended result.\n- Lack of measurable and definable goals - Not setting, or not being able to set, deadlines or goals for accomplishing your objective, can lend to a lack of `joie de vivre` towards working on your project.\n- Lack of finishing - This is pretty meta, but unhappiness at not getting things done, ends up creating a feedback loop of not getting shit done. This is not constructive unhappiness.\n- Shiny toy syndrome - There might be a lack of focus along with jumping around without finishing any one thing. Prioritizing what to work on at any given point in time, is one of the most under-rated skillsets known to us in this modern world. If something new comes up, there is a very alluring temptation to dump the current thing and pick up the new thing. As a result, you might be half-assing all of your projects. As Ron Swanson said, \"Never half-ass two things, Whole-ass one thing\". [![Ron](https://img.youtube.com/vi/k6hZ9KdG1QU/0.jpg)](https://www.youtube.com/watch?v=k6hZ9KdG1QU 'Ron')\n- No stakes involved - You aren't creating the right incentive structure to achieve success, be it money, fame, charity, or just creating goodness in the world.\n- Procrastination - This is probably a symptom of one of the causes listed above, but is a key indicator that what you should re-evaluate the _why_ behind your intent on working on your project in the first place.\n- A laundry list of excuses made up by yourself to justify not working on your goal, some of which can be -\n  - lack of motivation\n  - lack of skills\n  - lack of market\n  - lack of investors\n  - lack of interest\n  - lack of product stickiness or differentiation\n  - lack of network\n\n## How do we succeed at finishing?\n\n- **Set measurable goals** - Create small realizable goals with active results. Do things like a/b testing to measure the goal. You can use frameworks like OKRs or Daily TODOs be held accountable\n- **Surround yourself with good company** - Surround yourself with ppl who get shit done. Do not surround yourself with people who talk negatively about getting stuff done.\n- **Improve your focus** - Yoga, meditation or any kind of mental peace routine will help you calm the brownian motion of your thoughts. Once you achieve a semblance of calmness, you can apply [constant never ceasing vigilance](https://books.google.com/books?id=C5qdiQE2g9sC&pg=PA104&lpg=PA104&dq=constant+never+ceasing+vigilance+harry+potter&source=bl&ots=kC8_Tl02FU&sig=ACfU3U2NTEn3_LSDnmIbbgJVgphTSqeYsg&hl=en&sa=X&ved=2ahUKEwiQms6-xq7oAhUnlnIEHZDkATYQ6AEwA3oECAgQAQ#v=onepage&q=constant%20never%20ceasing%20vigilance%20harry%20potter&f=false) and discipline to continue to be focussed.\n- **Keep the goals small** - Look at the small picture and hack away. Don't let the focus of your project be the absolute end goal, but instead focus on the incremental milestones along the way. Alabama has produced one of the best college football programs today, and the [head coach Nick Saban](https://constantrenewal.com/nick-saban-the-process/) , after speaking with psychiatry professor Lionel Rosen, realized that the average play in football lasts just seven seconds.\n\n> It’s impossible to read and execute every play to perfection for the entire game. But seven seconds? Anyone can do that. Execute, rest, repeat and you eventually have a game.\n\n- **Do not move the goalposts** - Avoid creating new targets for what you are attempting to achieve. Doing so, will undo all the gains you make, both mentally and from a project perspective, and might need you to start from scratch. Unless there is an incredibly real need to do so, avoid it.\n- **Single task, don't multi task** - Humans by nature, despite our many attempts to fool ourselves, are only really good at doing one cognitively intensive task at a time. While there can be outliers, smart money would say that is the exception rather than the norm.\n- **Get feedback from people** - Deliver small things quickly to build up self-confidence and proactively ask people for feedback to get better at the process\n- **Create incentives to finish** - Do your projects with a partner. Peer pressure can work wonders sometimes. Other ways to create incentives\n  - Put money on the line\n  - Solve a problem close to your heart\n  - Put your reputation on line by telling people about it\n  - Having a self-grading system like a college GPA\n  - If you have a mentor, ask them to challenge you\n- **Perfect is the enemy of good** - Don't fuss over details and don't be a perfectionist. Just do it and ship your idea. The common saying goes - \"If you aren't embarrassed of your product, you're too late\"\n- **Pivot** - Know when to stop working on an idea. Don't run your idea into the ground and then realize you spent too much time on it. Successful people give up too; they give up on failed ideas.\n- **Record** - Record all ideas. Even if you aren't getting things done today, there is no reason you won't get to them at \"some\" point. Don't let those ideas be lost, and this might be a good way to get away from working on multiple ideas at once and still give yourself the sense of achievement of doing _something_ about the new idea you just had.\n- **Set your mind free** -\n  - when you think you lack expertise, think of the Southwest founder who had no airline expertise\n  - when you think you lack ambition, think of Elon Musk starting SpaceX, without having the adequate knowledge to start a space company but soaked in all the information to be able to do so\n  - when you think your idea lacks seriousness, think of companies like [Yo](https://www.justyo.co/) and [HQ Trivia](https://twitter.com/hqtrivia?lang=en). Even though they didn't stand the test of time, they tried, and discovered a market for their application\n  - when you think you lack investment capital, think of Instagram when they started not having any funding, and basically having just a couple of guys bootstrapping the enterprise\n\n# Wrapping Up\n\nIf you see a similar pattern with how you have been approaching problems of late, there is a \"simple\" 3-step plan to fix it -\n\n- 1. Be honest with yourself, and acknowledge there is a problem, if you have one.\n- 2. Figure out what might be the root cause of the issue and embrace it. Do not run away from it.\n- 3. Take countermeasures to prevent the problem from happening again. In short, don't NOT finish. FINISH FINISH FINISH\n\nIt might be easier said than done, but I send good vibes for all of the side hustles and hobby projects that you have in your mind, and hope you can see them through! 🌟 🦄\n\nI'll sign off with -\n\n[![Shia](https://img.youtube.com/vi/ZXsQAXx_ao0/0.jpg)](https://www.youtube.com/watch?v=ZXsQAXx_ao0 'Shia')",
    "_id": "failure-to-finish.mdx",
    "_raw": {
      "flattenedPath": "failure-to-finish"
    },
    "body": {
      "raw": "> \"There is no failure, except in no longer trying.\" - Chris Bradford\n\n*Full disclaimer* - I had no idea who [Chris Bradford](http://www.chrisbradford.co.uk/books.html) was before I read this, but this quote resonated with me quite profoundly, and thus it finds its way as the opening statement to this post.\n\n## What is the failure to finish?\n\nIf you were to peruse any sort of literature, be it historical or contemporary, you will find a multitude of trite sayings or expressions, all pointing out the value of failure -\n\n- How failure is acceptable.\n- How it is a stepping stone to achieving that greatness, that is oh-so-close, if you put in the effort.\n- How failing is the only way of succeeding at something.\n\nI don't intend to buttress this argument by adding any truisms of my own.\nWhat I do intend to do, however, is highlight a problem that I have been facing in the past few years. I am talking about the inability to _finish projects_. I will unwrap all the details behind that statement, but I think it will help if I gave you some context about myself.\n\nI love doing stuff. I love working on exciting projects. I love working on side hustles. I love thinking about how to optimize processes. I love thinking about politics and science. I love reading books. I love photography. I love going to the gym and working out. I love debating the deep questions of life and the universe.\n\nThe truth, however, is that I don't do most of those things anymore. It is not because I don't _like_ doing any of those things. No, no. It is because in the past few years, when I have attempted these tasks, I have not had any success in finishing those off to completion.\n\nThe definition of \"finish\" is a bit fuzzy unless you have objective goals associated with tasks. In my own loose definition, to 'finish' is to see a task to a point where if I were to revisit it, I will not feel any feelings of incompleteness. This is not to say that finishing something is the equivalent of achieving perfection. It is a bit naive to assume any task you complete has no room for improvement in the future. In fact, if you work on something the \"right\" way, you should always be in a place where you are learning and improving on that something.\n\nWithout beating around the bush, my explanation of not finishing my tasks or side hustles is that I just did not **finish** it. Terminar. Khatam. Finire. That's it. Plain and simple. Everybody will know for themselves what that means.\n\nThe crux of this post is to delve into the _why_ and the _how_. **Why** is it so tough to finish something we start and **how** can this be fixed?\n\n## Why do people fail to finish?\n\nI want to list out some of the reasons that make it hard to see a project all the way to completion -\n\n- Premature initiation - You don't believe in the idea, but you start working on it anyway\n- Pressure from the Big Picture - The big picture of achieving your idea can start to get overwhelming\n- Lack of a Feedback Mechanism - There is no feedback mechanism i.e. not realizing instant achievements or things that you are doing well, that end up feeding the egotistic part of the brain. A close analogy is when you go to the gym and you feel the \"happiness\" from all that serotonin, makes you want to go back to the gym to recreate the experience\n- Imposter syndrome - You might be filled with misgivings or self doubt and the feeling of not being competent enough. You might wonder if the things you are working on are even unique and if not, what is the point of doing it.\n- Challenging - The task/project you chose to do, is actually quite challenging, be it physically or mentally. So instead, you watch Netflix or go out to the park. Your mind might play games with you such as \"Why go through the mental and physical pain, when instead you can turn on a Hulu show?\"\n- Distractions - Our attention spans are getting shorter. Whether it is notifications that you keep receiving on your phone, or your now-muscle-memory to check twitter/reddit/instagram/Netflix, it is just way to easy to not have a dedicated block of focus time where you can do some deep thinking to finish off your task in chunks.\n- Banality - While the idea that you start with is grandiose, there are little things that need to be done to accomplish it. You might find those to be incredibly boring and that might be a trigger for you to switch focus off your project.\n- Unreal expectations - Setting unrealistic expectations, for both for timeline completion of projects as well as the intended result.\n- Lack of measurable and definable goals - Not setting, or not being able to set, deadlines or goals for accomplishing your objective, can lend to a lack of `joie de vivre` towards working on your project.\n- Lack of finishing - This is pretty meta, but unhappiness at not getting things done, ends up creating a feedback loop of not getting shit done. This is not constructive unhappiness.\n- Shiny toy syndrome - There might be a lack of focus along with jumping around without finishing any one thing. Prioritizing what to work on at any given point in time, is one of the most under-rated skillsets known to us in this modern world. If something new comes up, there is a very alluring temptation to dump the current thing and pick up the new thing. As a result, you might be half-assing all of your projects. As Ron Swanson said, \"Never half-ass two things, Whole-ass one thing\". [![Ron](https://img.youtube.com/vi/k6hZ9KdG1QU/0.jpg)](https://www.youtube.com/watch?v=k6hZ9KdG1QU 'Ron')\n- No stakes involved - You aren't creating the right incentive structure to achieve success, be it money, fame, charity, or just creating goodness in the world.\n- Procrastination - This is probably a symptom of one of the causes listed above, but is a key indicator that what you should re-evaluate the _why_ behind your intent on working on your project in the first place.\n- A laundry list of excuses made up by yourself to justify not working on your goal, some of which can be -\n  - lack of motivation\n  - lack of skills\n  - lack of market\n  - lack of investors\n  - lack of interest\n  - lack of product stickiness or differentiation\n  - lack of network\n\n## How do we succeed at finishing?\n\n- **Set measurable goals** - Create small realizable goals with active results. Do things like a/b testing to measure the goal. You can use frameworks like OKRs or Daily TODOs be held accountable\n- **Surround yourself with good company** - Surround yourself with ppl who get shit done. Do not surround yourself with people who talk negatively about getting stuff done.\n- **Improve your focus** - Yoga, meditation or any kind of mental peace routine will help you calm the brownian motion of your thoughts. Once you achieve a semblance of calmness, you can apply [constant never ceasing vigilance](https://books.google.com/books?id=C5qdiQE2g9sC&pg=PA104&lpg=PA104&dq=constant+never+ceasing+vigilance+harry+potter&source=bl&ots=kC8_Tl02FU&sig=ACfU3U2NTEn3_LSDnmIbbgJVgphTSqeYsg&hl=en&sa=X&ved=2ahUKEwiQms6-xq7oAhUnlnIEHZDkATYQ6AEwA3oECAgQAQ#v=onepage&q=constant%20never%20ceasing%20vigilance%20harry%20potter&f=false) and discipline to continue to be focussed.\n- **Keep the goals small** - Look at the small picture and hack away. Don't let the focus of your project be the absolute end goal, but instead focus on the incremental milestones along the way. Alabama has produced one of the best college football programs today, and the [head coach Nick Saban](https://constantrenewal.com/nick-saban-the-process/) , after speaking with psychiatry professor Lionel Rosen, realized that the average play in football lasts just seven seconds.\n\n> It’s impossible to read and execute every play to perfection for the entire game. But seven seconds? Anyone can do that. Execute, rest, repeat and you eventually have a game.\n\n- **Do not move the goalposts** - Avoid creating new targets for what you are attempting to achieve. Doing so, will undo all the gains you make, both mentally and from a project perspective, and might need you to start from scratch. Unless there is an incredibly real need to do so, avoid it.\n- **Single task, don't multi task** - Humans by nature, despite our many attempts to fool ourselves, are only really good at doing one cognitively intensive task at a time. While there can be outliers, smart money would say that is the exception rather than the norm.\n- **Get feedback from people** - Deliver small things quickly to build up self-confidence and proactively ask people for feedback to get better at the process\n- **Create incentives to finish** - Do your projects with a partner. Peer pressure can work wonders sometimes. Other ways to create incentives\n  - Put money on the line\n  - Solve a problem close to your heart\n  - Put your reputation on line by telling people about it\n  - Having a self-grading system like a college GPA\n  - If you have a mentor, ask them to challenge you\n- **Perfect is the enemy of good** - Don't fuss over details and don't be a perfectionist. Just do it and ship your idea. The common saying goes - \"If you aren't embarrassed of your product, you're too late\"\n- **Pivot** - Know when to stop working on an idea. Don't run your idea into the ground and then realize you spent too much time on it. Successful people give up too; they give up on failed ideas.\n- **Record** - Record all ideas. Even if you aren't getting things done today, there is no reason you won't get to them at \"some\" point. Don't let those ideas be lost, and this might be a good way to get away from working on multiple ideas at once and still give yourself the sense of achievement of doing _something_ about the new idea you just had.\n- **Set your mind free** -\n  - when you think you lack expertise, think of the Southwest founder who had no airline expertise\n  - when you think you lack ambition, think of Elon Musk starting SpaceX, without having the adequate knowledge to start a space company but soaked in all the information to be able to do so\n  - when you think your idea lacks seriousness, think of companies like [Yo](https://www.justyo.co/) and [HQ Trivia](https://twitter.com/hqtrivia?lang=en). Even though they didn't stand the test of time, they tried, and discovered a market for their application\n  - when you think you lack investment capital, think of Instagram when they started not having any funding, and basically having just a couple of guys bootstrapping the enterprise\n\n# Wrapping Up\n\nIf you see a similar pattern with how you have been approaching problems of late, there is a \"simple\" 3-step plan to fix it -\n\n- 1. Be honest with yourself, and acknowledge there is a problem, if you have one.\n- 2. Figure out what might be the root cause of the issue and embrace it. Do not run away from it.\n- 3. Take countermeasures to prevent the problem from happening again. In short, don't NOT finish. FINISH FINISH FINISH\n\nIt might be easier said than done, but I send good vibes for all of the side hustles and hobby projects that you have in your mind, and hope you can see them through! 🌟 🦄\n\nI'll sign off with -\n\n[![Shia](https://img.youtube.com/vi/ZXsQAXx_ao0/0.jpg)](https://www.youtube.com/watch?v=ZXsQAXx_ao0 'Shia')",
      "code": "> \"There is no failure, except in no longer trying.\" - Chris Bradford\n\n*Full disclaimer* - I had no idea who [Chris Bradford](http://www.chrisbradford.co.uk/books.html) was before I read this, but this quote resonated with me quite profoundly, and thus it finds its way as the opening statement to this post.\n\n## What is the failure to finish?\n\nIf you were to peruse any sort of literature, be it historical or contemporary, you will find a multitude of trite sayings or expressions, all pointing out the value of failure -\n\n- How failure is acceptable.\n- How it is a stepping stone to achieving that greatness, that is oh-so-close, if you put in the effort.\n- How failing is the only way of succeeding at something.\n\nI don't intend to buttress this argument by adding any truisms of my own.\nWhat I do intend to do, however, is highlight a problem that I have been facing in the past few years. I am talking about the inability to _finish projects_. I will unwrap all the details behind that statement, but I think it will help if I gave you some context about myself.\n\nI love doing stuff. I love working on exciting projects. I love working on side hustles. I love thinking about how to optimize processes. I love thinking about politics and science. I love reading books. I love photography. I love going to the gym and working out. I love debating the deep questions of life and the universe.\n\nThe truth, however, is that I don't do most of those things anymore. It is not because I don't _like_ doing any of those things. No, no. It is because in the past few years, when I have attempted these tasks, I have not had any success in finishing those off to completion.\n\nThe definition of \"finish\" is a bit fuzzy unless you have objective goals associated with tasks. In my own loose definition, to 'finish' is to see a task to a point where if I were to revisit it, I will not feel any feelings of incompleteness. This is not to say that finishing something is the equivalent of achieving perfection. It is a bit naive to assume any task you complete has no room for improvement in the future. In fact, if you work on something the \"right\" way, you should always be in a place where you are learning and improving on that something.\n\nWithout beating around the bush, my explanation of not finishing my tasks or side hustles is that I just did not **finish** it. Terminar. Khatam. Finire. That's it. Plain and simple. Everybody will know for themselves what that means.\n\nThe crux of this post is to delve into the _why_ and the _how_. **Why** is it so tough to finish something we start and **how** can this be fixed?\n\n## Why do people fail to finish?\n\nI want to list out some of the reasons that make it hard to see a project all the way to completion -\n\n- Premature initiation - You don't believe in the idea, but you start working on it anyway\n- Pressure from the Big Picture - The big picture of achieving your idea can start to get overwhelming\n- Lack of a Feedback Mechanism - There is no feedback mechanism i.e. not realizing instant achievements or things that you are doing well, that end up feeding the egotistic part of the brain. A close analogy is when you go to the gym and you feel the \"happiness\" from all that serotonin, makes you want to go back to the gym to recreate the experience\n- Imposter syndrome - You might be filled with misgivings or self doubt and the feeling of not being competent enough. You might wonder if the things you are working on are even unique and if not, what is the point of doing it.\n- Challenging - The task/project you chose to do, is actually quite challenging, be it physically or mentally. So instead, you watch Netflix or go out to the park. Your mind might play games with you such as \"Why go through the mental and physical pain, when instead you can turn on a Hulu show?\"\n- Distractions - Our attention spans are getting shorter. Whether it is notifications that you keep receiving on your phone, or your now-muscle-memory to check twitter/reddit/instagram/Netflix, it is just way to easy to not have a dedicated block of focus time where you can do some deep thinking to finish off your task in chunks.\n- Banality - While the idea that you start with is grandiose, there are little things that need to be done to accomplish it. You might find those to be incredibly boring and that might be a trigger for you to switch focus off your project.\n- Unreal expectations - Setting unrealistic expectations, for both for timeline completion of projects as well as the intended result.\n- Lack of measurable and definable goals - Not setting, or not being able to set, deadlines or goals for accomplishing your objective, can lend to a lack of `joie de vivre` towards working on your project.\n- Lack of finishing - This is pretty meta, but unhappiness at not getting things done, ends up creating a feedback loop of not getting shit done. This is not constructive unhappiness.\n- Shiny toy syndrome - There might be a lack of focus along with jumping around without finishing any one thing. Prioritizing what to work on at any given point in time, is one of the most under-rated skillsets known to us in this modern world. If something new comes up, there is a very alluring temptation to dump the current thing and pick up the new thing. As a result, you might be half-assing all of your projects. As Ron Swanson said, \"Never half-ass two things, Whole-ass one thing\". [![Ron](https://img.youtube.com/vi/k6hZ9KdG1QU/0.jpg)](https://www.youtube.com/watch?v=k6hZ9KdG1QU 'Ron')\n- No stakes involved - You aren't creating the right incentive structure to achieve success, be it money, fame, charity, or just creating goodness in the world.\n- Procrastination - This is probably a symptom of one of the causes listed above, but is a key indicator that what you should re-evaluate the _why_ behind your intent on working on your project in the first place.\n- A laundry list of excuses made up by yourself to justify not working on your goal, some of which can be -\n  - lack of motivation\n  - lack of skills\n  - lack of market\n  - lack of investors\n  - lack of interest\n  - lack of product stickiness or differentiation\n  - lack of network\n\n## How do we succeed at finishing?\n\n- **Set measurable goals** - Create small realizable goals with active results. Do things like a/b testing to measure the goal. You can use frameworks like OKRs or Daily TODOs be held accountable\n- **Surround yourself with good company** - Surround yourself with ppl who get shit done. Do not surround yourself with people who talk negatively about getting stuff done.\n- **Improve your focus** - Yoga, meditation or any kind of mental peace routine will help you calm the brownian motion of your thoughts. Once you achieve a semblance of calmness, you can apply [constant never ceasing vigilance](https://books.google.com/books?id=C5qdiQE2g9sC&pg=PA104&lpg=PA104&dq=constant+never+ceasing+vigilance+harry+potter&source=bl&ots=kC8_Tl02FU&sig=ACfU3U2NTEn3_LSDnmIbbgJVgphTSqeYsg&hl=en&sa=X&ved=2ahUKEwiQms6-xq7oAhUnlnIEHZDkATYQ6AEwA3oECAgQAQ#v=onepage&q=constant%20never%20ceasing%20vigilance%20harry%20potter&f=false) and discipline to continue to be focussed.\n- **Keep the goals small** - Look at the small picture and hack away. Don't let the focus of your project be the absolute end goal, but instead focus on the incremental milestones along the way. Alabama has produced one of the best college football programs today, and the [head coach Nick Saban](https://constantrenewal.com/nick-saban-the-process/) , after speaking with psychiatry professor Lionel Rosen, realized that the average play in football lasts just seven seconds.\n\n> It’s impossible to read and execute every play to perfection for the entire game. But seven seconds? Anyone can do that. Execute, rest, repeat and you eventually have a game.\n\n- **Do not move the goalposts** - Avoid creating new targets for what you are attempting to achieve. Doing so, will undo all the gains you make, both mentally and from a project perspective, and might need you to start from scratch. Unless there is an incredibly real need to do so, avoid it.\n- **Single task, don't multi task** - Humans by nature, despite our many attempts to fool ourselves, are only really good at doing one cognitively intensive task at a time. While there can be outliers, smart money would say that is the exception rather than the norm.\n- **Get feedback from people** - Deliver small things quickly to build up self-confidence and proactively ask people for feedback to get better at the process\n- **Create incentives to finish** - Do your projects with a partner. Peer pressure can work wonders sometimes. Other ways to create incentives\n  - Put money on the line\n  - Solve a problem close to your heart\n  - Put your reputation on line by telling people about it\n  - Having a self-grading system like a college GPA\n  - If you have a mentor, ask them to challenge you\n- **Perfect is the enemy of good** - Don't fuss over details and don't be a perfectionist. Just do it and ship your idea. The common saying goes - \"If you aren't embarrassed of your product, you're too late\"\n- **Pivot** - Know when to stop working on an idea. Don't run your idea into the ground and then realize you spent too much time on it. Successful people give up too; they give up on failed ideas.\n- **Record** - Record all ideas. Even if you aren't getting things done today, there is no reason you won't get to them at \"some\" point. Don't let those ideas be lost, and this might be a good way to get away from working on multiple ideas at once and still give yourself the sense of achievement of doing _something_ about the new idea you just had.\n- **Set your mind free** -\n  - when you think you lack expertise, think of the Southwest founder who had no airline expertise\n  - when you think you lack ambition, think of Elon Musk starting SpaceX, without having the adequate knowledge to start a space company but soaked in all the information to be able to do so\n  - when you think your idea lacks seriousness, think of companies like [Yo](https://www.justyo.co/) and [HQ Trivia](https://twitter.com/hqtrivia?lang=en). Even though they didn't stand the test of time, they tried, and discovered a market for their application\n  - when you think you lack investment capital, think of Instagram when they started not having any funding, and basically having just a couple of guys bootstrapping the enterprise\n\n# Wrapping Up\n\nIf you see a similar pattern with how you have been approaching problems of late, there is a \"simple\" 3-step plan to fix it -\n\n- 1. Be honest with yourself, and acknowledge there is a problem, if you have one.\n- 2. Figure out what might be the root cause of the issue and embrace it. Do not run away from it.\n- 3. Take countermeasures to prevent the problem from happening again. In short, don't NOT finish. FINISH FINISH FINISH\n\nIt might be easier said than done, but I send good vibes for all of the side hustles and hobby projects that you have in your mind, and hope you can see them through! 🌟 🦄\n\nI'll sign off with -\n\n[![Shia](https://img.youtube.com/vi/ZXsQAXx_ao0/0.jpg)](https://www.youtube.com/watch?v=ZXsQAXx_ao0 'Shia')"
    },
    "slug": "failure-to-finish",
    "path": "posts/failure-to-finish",
    "filePath": "failure-to-finish.mdx",
    "toc": [],
    "readingTime": {
      "text": "10 min read",
      "minutes": 9.345,
      "time": 560700,
      "words": 1869
    },
    "structuredData": {
      "@context": "https://schema.org",
      "@type": "BlogPosting",
      "headline": "The failure to finish & how to get better at completing projects that you start",
      "datePublished": "2020-03-25T00:00:00.000Z",
      "dateModified": "2020-03-25T00:00:00.000Z",
      "description": "Seeing projects through to the end",
      "image": "/static/images/twitter-card.png",
      "url": "https://arjunrao.co/posts/failure-to-finish"
    }
  },
  {
    "title": "Tracking Feature adoption",
    "date": "2022-01-15T00:00:00.000Z",
    "tags": [
      "philosophy",
      "book",
      "reflection"
    ],
    "lastmod": undefined,
    "draft": false,
    "summary": "Knowing how to track the success or failure of a software release",
    "images": [
      "/static/images/bml.jpeg"
    ],
    "authors": undefined,
    "layout": undefined,
    "bibliography": undefined,
    "canonicalUrl": undefined,
    "content": "As an Engineering Manager, one of the things that I look for is how the features we shipped are performing i.e. are they working the way we initially expected or not. These are broadly referred to as Feature Adoption Metrics. There are a lot of ways to skin the cat on this one, and one of the PMs I follow on Twitter, [Shreyas Doshi](https://twitter.com/shreyas), had this to say about adoption metrics 👇🏽\n\n> Key question:Is the product (along with its key features) being used as much as we’d hope and in the ways that we’d like?Examples:active users, dau:mau, N of M day usage, strategic feature adoption trends, free-to-paid conversions\n\nWhile the thread above focuses on the \"what\", I like to think about the \"why\" and the \"how\" when it comes to Feature Adoption metrics.\n\n# Importance of tracking feature adoption\n\nPeter Drucker said “If you can't measure it, you can't manage it.” which is largely considered as canon in product development. The Lean Startup popularized the idea of \"Build Measure Learn\" to create tight loops of learning.\n\nOver time, this has morphed into terminology like KPIs, Measures of Success, Acceptance Criteria - all of which seek to determine gauging a successful outcome - be it for a development task, quarterly strategy or for that matter, feature adoption.\n\n\nAn unconventional way to think of feature adoption is from the perspective of employee retention. Developers are very invested in knowing how their work impacts their team and company. It is important to learn from things that worked well, to show how the shipped work has moved the needle - as well as the things that did not work well, to show what changes should the developer, or team, make in order to continue the cycle of learning.\n\nWhile this seems intuitive, the absence of this feedback loop is actually quite problematic. Employee satisfaction is personal to an individual and is based on a variety of criteria such as compensation, work life balance, etc. However, one of the points that I have seen to consistently rank quite high is the impact of the work. Having a healthy product development organization that communicates these updates amongst each other, helps build a sense of confidence that benefits the development team as well as the company.\n\n# Framework for measuring Feature adoption\n\nProduct teams that I have worked with have used several methods to gauge success of feature delivery. One such framework that I have found to be useful is something that I term as the SIP framework, as defined below -\n\n- S stands for Signal\n- I stands for Insight\n- P stands for Proposition\n\n## 🚨 Signal\n\n`Signal` indicates the input or measure or data point that shows how the feature is performing. A Signal could be word-of-mouth feedback from your customer or it could be an actual metric that acts as your Key Performance Indicator that you are tracking in a Dashboard. A Signal provides you with the raw information that will help you observe feature adoption, which you can use to gather `Insights`.\n\n![](/static/images/metrics.png)\n\n## 🔍 Insight\n\nGiven a Signal, Insights are extrapolations or Inferences that you make using that raw data. They are typically 2nd or 3rd order derivations of what is observed with the Signal. Asking questions of the raw data in the Signal is a way to come up with a set of Insights or Hypotheses required to make sense of the indicators you see, in a way that you can proceed to suggest a `Proposition`.\n\nAn example to illustrate this -\n\n- Signal\n\n  - Feedback from user on the Import Purchases workflow: Excel based workflow is challenging and prone to error, and user avoids importing purchases into the system for as long as they can.\n\n- Insight\n  - What makes the experience challenging? Are there too few directions? Are there too many options that are confusing?\n  - Why are there so many errors? Something being error-prone could be fundamentally different from it being a challenging experience? One could be related to incorrect input components, or bad data integrity - whereas the other could be related to bad User Experience. These are just some of the ways you can pry apart what a Signal is trying to indicate.\n\n## 🤝 Proposition\n\nOnce there are Insights, you have formed a set of hypotheses that might require you to take one or more actions. You either want to do more with the feature that was shipped, whether it is directionally the same as where you initially intended to go, or if there are things you learned that might need you to pivot direction. Or you might have learned something through this process of introspection which makes you decide you shouldn't do anything about it.\n\nIn either case, you now have a Proposition to make -\n\n- In case of terminating the feature, you will need to draft up some notes for the team and broader stakeholder group, to explain the reason for abandoning the effort or changing course.\n- In case you want to move forward with the next phase in the evolution of the feature (for eg. companies define product progression using terminology like Alpha, Beta, GA ), you will need to make a case for it, possibly using other requests/asks that have come up in the past.\n\nExplaining the Product (or Feature) Proposition for what the team should work on, by using Signals and Inferences and combining it with how the company perceives Value - helps people understand the \"why\" behind features they are working on. I have found `SIP` to be a useful framework to gauge the arc of feature adoption and use that to convey product direction.\n\nHave thoughts you want to share? Hit me up [@raoarjun](https://twitter.com/raoarjun).\n\n### References\n\n- [Build Measure Learn](https://amplitude.com/blog/build-measure-learn-the-product-management-lifecycle-loop)",
    "_id": "feature-adoption.mdx",
    "_raw": {
      "flattenedPath": "feature-adoption"
    },
    "body": {
      "raw": "As an Engineering Manager, one of the things that I look for is how the features we shipped are performing i.e. are they working the way we initially expected or not. These are broadly referred to as Feature Adoption Metrics. There are a lot of ways to skin the cat on this one, and one of the PMs I follow on Twitter, [Shreyas Doshi](https://twitter.com/shreyas), had this to say about adoption metrics 👇🏽\n\n> Key question:Is the product (along with its key features) being used as much as we’d hope and in the ways that we’d like?Examples:active users, dau:mau, N of M day usage, strategic feature adoption trends, free-to-paid conversions\n\nWhile the thread above focuses on the \"what\", I like to think about the \"why\" and the \"how\" when it comes to Feature Adoption metrics.\n\n# Importance of tracking feature adoption\n\nPeter Drucker said “If you can't measure it, you can't manage it.” which is largely considered as canon in product development. The Lean Startup popularized the idea of \"Build Measure Learn\" to create tight loops of learning.\n\nOver time, this has morphed into terminology like KPIs, Measures of Success, Acceptance Criteria - all of which seek to determine gauging a successful outcome - be it for a development task, quarterly strategy or for that matter, feature adoption.\n\n\nAn unconventional way to think of feature adoption is from the perspective of employee retention. Developers are very invested in knowing how their work impacts their team and company. It is important to learn from things that worked well, to show how the shipped work has moved the needle - as well as the things that did not work well, to show what changes should the developer, or team, make in order to continue the cycle of learning.\n\nWhile this seems intuitive, the absence of this feedback loop is actually quite problematic. Employee satisfaction is personal to an individual and is based on a variety of criteria such as compensation, work life balance, etc. However, one of the points that I have seen to consistently rank quite high is the impact of the work. Having a healthy product development organization that communicates these updates amongst each other, helps build a sense of confidence that benefits the development team as well as the company.\n\n# Framework for measuring Feature adoption\n\nProduct teams that I have worked with have used several methods to gauge success of feature delivery. One such framework that I have found to be useful is something that I term as the SIP framework, as defined below -\n\n- S stands for Signal\n- I stands for Insight\n- P stands for Proposition\n\n## 🚨 Signal\n\n`Signal` indicates the input or measure or data point that shows how the feature is performing. A Signal could be word-of-mouth feedback from your customer or it could be an actual metric that acts as your Key Performance Indicator that you are tracking in a Dashboard. A Signal provides you with the raw information that will help you observe feature adoption, which you can use to gather `Insights`.\n\n![](/static/images/metrics.png)\n\n## 🔍 Insight\n\nGiven a Signal, Insights are extrapolations or Inferences that you make using that raw data. They are typically 2nd or 3rd order derivations of what is observed with the Signal. Asking questions of the raw data in the Signal is a way to come up with a set of Insights or Hypotheses required to make sense of the indicators you see, in a way that you can proceed to suggest a `Proposition`.\n\nAn example to illustrate this -\n\n- Signal\n\n  - Feedback from user on the Import Purchases workflow: Excel based workflow is challenging and prone to error, and user avoids importing purchases into the system for as long as they can.\n\n- Insight\n  - What makes the experience challenging? Are there too few directions? Are there too many options that are confusing?\n  - Why are there so many errors? Something being error-prone could be fundamentally different from it being a challenging experience? One could be related to incorrect input components, or bad data integrity - whereas the other could be related to bad User Experience. These are just some of the ways you can pry apart what a Signal is trying to indicate.\n\n## 🤝 Proposition\n\nOnce there are Insights, you have formed a set of hypotheses that might require you to take one or more actions. You either want to do more with the feature that was shipped, whether it is directionally the same as where you initially intended to go, or if there are things you learned that might need you to pivot direction. Or you might have learned something through this process of introspection which makes you decide you shouldn't do anything about it.\n\nIn either case, you now have a Proposition to make -\n\n- In case of terminating the feature, you will need to draft up some notes for the team and broader stakeholder group, to explain the reason for abandoning the effort or changing course.\n- In case you want to move forward with the next phase in the evolution of the feature (for eg. companies define product progression using terminology like Alpha, Beta, GA ), you will need to make a case for it, possibly using other requests/asks that have come up in the past.\n\nExplaining the Product (or Feature) Proposition for what the team should work on, by using Signals and Inferences and combining it with how the company perceives Value - helps people understand the \"why\" behind features they are working on. I have found `SIP` to be a useful framework to gauge the arc of feature adoption and use that to convey product direction.\n\nHave thoughts you want to share? Hit me up [@raoarjun](https://twitter.com/raoarjun).\n\n### References\n\n- [Build Measure Learn](https://amplitude.com/blog/build-measure-learn-the-product-management-lifecycle-loop)",
      "code": "As an Engineering Manager, one of the things that I look for is how the features we shipped are performing i.e. are they working the way we initially expected or not. These are broadly referred to as Feature Adoption Metrics. There are a lot of ways to skin the cat on this one, and one of the PMs I follow on Twitter, [Shreyas Doshi](https://twitter.com/shreyas), had this to say about adoption metrics 👇🏽\n\n> Key question:Is the product (along with its key features) being used as much as we’d hope and in the ways that we’d like?Examples:active users, dau:mau, N of M day usage, strategic feature adoption trends, free-to-paid conversions\n\nWhile the thread above focuses on the \"what\", I like to think about the \"why\" and the \"how\" when it comes to Feature Adoption metrics.\n\n# Importance of tracking feature adoption\n\nPeter Drucker said “If you can't measure it, you can't manage it.” which is largely considered as canon in product development. The Lean Startup popularized the idea of \"Build Measure Learn\" to create tight loops of learning.\n\nOver time, this has morphed into terminology like KPIs, Measures of Success, Acceptance Criteria - all of which seek to determine gauging a successful outcome - be it for a development task, quarterly strategy or for that matter, feature adoption.\n\n\nAn unconventional way to think of feature adoption is from the perspective of employee retention. Developers are very invested in knowing how their work impacts their team and company. It is important to learn from things that worked well, to show how the shipped work has moved the needle - as well as the things that did not work well, to show what changes should the developer, or team, make in order to continue the cycle of learning.\n\nWhile this seems intuitive, the absence of this feedback loop is actually quite problematic. Employee satisfaction is personal to an individual and is based on a variety of criteria such as compensation, work life balance, etc. However, one of the points that I have seen to consistently rank quite high is the impact of the work. Having a healthy product development organization that communicates these updates amongst each other, helps build a sense of confidence that benefits the development team as well as the company.\n\n# Framework for measuring Feature adoption\n\nProduct teams that I have worked with have used several methods to gauge success of feature delivery. One such framework that I have found to be useful is something that I term as the SIP framework, as defined below -\n\n- S stands for Signal\n- I stands for Insight\n- P stands for Proposition\n\n## 🚨 Signal\n\n`Signal` indicates the input or measure or data point that shows how the feature is performing. A Signal could be word-of-mouth feedback from your customer or it could be an actual metric that acts as your Key Performance Indicator that you are tracking in a Dashboard. A Signal provides you with the raw information that will help you observe feature adoption, which you can use to gather `Insights`.\n\n![](/static/images/metrics.png)\n\n## 🔍 Insight\n\nGiven a Signal, Insights are extrapolations or Inferences that you make using that raw data. They are typically 2nd or 3rd order derivations of what is observed with the Signal. Asking questions of the raw data in the Signal is a way to come up with a set of Insights or Hypotheses required to make sense of the indicators you see, in a way that you can proceed to suggest a `Proposition`.\n\nAn example to illustrate this -\n\n- Signal\n\n  - Feedback from user on the Import Purchases workflow: Excel based workflow is challenging and prone to error, and user avoids importing purchases into the system for as long as they can.\n\n- Insight\n  - What makes the experience challenging? Are there too few directions? Are there too many options that are confusing?\n  - Why are there so many errors? Something being error-prone could be fundamentally different from it being a challenging experience? One could be related to incorrect input components, or bad data integrity - whereas the other could be related to bad User Experience. These are just some of the ways you can pry apart what a Signal is trying to indicate.\n\n## 🤝 Proposition\n\nOnce there are Insights, you have formed a set of hypotheses that might require you to take one or more actions. You either want to do more with the feature that was shipped, whether it is directionally the same as where you initially intended to go, or if there are things you learned that might need you to pivot direction. Or you might have learned something through this process of introspection which makes you decide you shouldn't do anything about it.\n\nIn either case, you now have a Proposition to make -\n\n- In case of terminating the feature, you will need to draft up some notes for the team and broader stakeholder group, to explain the reason for abandoning the effort or changing course.\n- In case you want to move forward with the next phase in the evolution of the feature (for eg. companies define product progression using terminology like Alpha, Beta, GA ), you will need to make a case for it, possibly using other requests/asks that have come up in the past.\n\nExplaining the Product (or Feature) Proposition for what the team should work on, by using Signals and Inferences and combining it with how the company perceives Value - helps people understand the \"why\" behind features they are working on. I have found `SIP` to be a useful framework to gauge the arc of feature adoption and use that to convey product direction.\n\nHave thoughts you want to share? Hit me up [@raoarjun](https://twitter.com/raoarjun).\n\n### References\n\n- [Build Measure Learn](https://amplitude.com/blog/build-measure-learn-the-product-management-lifecycle-loop)"
    },
    "slug": "feature-adoption",
    "path": "posts/feature-adoption",
    "filePath": "feature-adoption.mdx",
    "toc": [],
    "readingTime": {
      "text": "5 min read",
      "minutes": 4.835,
      "time": 290100,
      "words": 967
    },
    "structuredData": {
      "@context": "https://schema.org",
      "@type": "BlogPosting",
      "headline": "Tracking Feature adoption",
      "datePublished": "2022-01-15T00:00:00.000Z",
      "dateModified": "2022-01-15T00:00:00.000Z",
      "description": "Knowing how to track the success or failure of a software release",
      "image": "/static/images/bml.jpeg",
      "url": "https://arjunrao.co/posts/feature-adoption"
    }
  },
  {
    "title": "Turbocharge your career through team feedback",
    "date": "2024-07-12T00:00:00.000Z",
    "tags": [
      "growth"
    ],
    "lastmod": undefined,
    "draft": false,
    "summary": "Unlock new levels using feedback from your peers & direct reports",
    "images": [
      "/static/images/feedback.jpeg"
    ],
    "authors": undefined,
    "layout": undefined,
    "bibliography": undefined,
    "canonicalUrl": undefined,
    "content": "Real change happens when you are pushed beyond your comfort zone. Most times you look to your manager to give you feedback that will help you raise the bar. This feedback will usually happen one or 2 times in the year during your performance reviews, or hopefully more frequently, as and when the situations arise.\n\nHowever, there is another hidden form of feedback that can be hugely valuable, and that is from your **team - described by peers, cross-functional stakeholders and even your own direct reports.**\n\nCompanies tend to structure this as “360” feedback which generally coincides with a promotion or a PIP (Performance Improvement Plan). However, it would be nice if this kind of feedback could be obtained more frequently, wouldn’t it? Wait actually it can! You just need to create the right conditions to get it.\n\n![](/static/images/feedback1.jpg)\n\nIf you want your team to give you real feedback, these 5 techniques have worked well for me -\n\n- **🤝 Ask for consent** - While you might be eager to receive feedback, others might not be as eager to give you feedback. Reasons could range from not wanting to antagonize you, possible retaliation or just not being used to giving feedback. Be cognizant of their time and be humble in your ask. Additionally, I have often found using phrases like “Please don’t hesitate to give me your true thoughts, no holds barred” to be quite effective in soliciting real feedback. Keep in mind, if you ask for it, you will receive it.\n\n- **⏳Give time to think** - Members of your team might not be managers themselves, so they have never had to exercise that muscle. Asking people to give you quality feedback on the spot will result in topical answers. If you want to get real feedback, give them enough notice so they have time to think about various dimensions.\n\n- **🤲 Discuss the feedback** - When you have received the feedback, don’t get defensive. Instead be curious about why they think that way. It’s never easy but just remember that this is going to only make you stronger. As tough as it is in the moment, think of the “future you” receiving this game changing feedback.\n\n- **🙏 Be authentic** - Do not solicit feedback if you don’t intend to act upon it or are offended by it. Don’t have ego and don’t be vindictive if you receive feedback you did not expect. If you take offense and castigate someone for feedback you solicited, that will undo all trust, not just with the person but across the organization. Remember, your team has had to gather the courage and put in the work to give you feedback, so be kind.\n\n- **♻️ Follow through**- Act upon the feedback you’re given, in a way that shows the giver that you are attempting to make progress. If you keep asking for feedback and not act on it, it will create disillusionment in your ability to take action.\n\nFeedback is an important tool in your growth arsenal and should be used surgically. Using this technique too often with not enough bias to action, can cause it to lose its sheen. However, used the right way, coupled with the feedback you receive from your manager, your team feedback can turbocharge your performance and give you the context you need to operate at the next level.",
    "_id": "feedback.mdx",
    "_raw": {
      "flattenedPath": "feedback"
    },
    "body": {
      "raw": "Real change happens when you are pushed beyond your comfort zone. Most times you look to your manager to give you feedback that will help you raise the bar. This feedback will usually happen one or 2 times in the year during your performance reviews, or hopefully more frequently, as and when the situations arise.\n\nHowever, there is another hidden form of feedback that can be hugely valuable, and that is from your **team - described by peers, cross-functional stakeholders and even your own direct reports.**\n\nCompanies tend to structure this as “360” feedback which generally coincides with a promotion or a PIP (Performance Improvement Plan). However, it would be nice if this kind of feedback could be obtained more frequently, wouldn’t it? Wait actually it can! You just need to create the right conditions to get it.\n\n![](/static/images/feedback1.jpg)\n\nIf you want your team to give you real feedback, these 5 techniques have worked well for me -\n\n- **🤝 Ask for consent** - While you might be eager to receive feedback, others might not be as eager to give you feedback. Reasons could range from not wanting to antagonize you, possible retaliation or just not being used to giving feedback. Be cognizant of their time and be humble in your ask. Additionally, I have often found using phrases like “Please don’t hesitate to give me your true thoughts, no holds barred” to be quite effective in soliciting real feedback. Keep in mind, if you ask for it, you will receive it.\n\n- **⏳Give time to think** - Members of your team might not be managers themselves, so they have never had to exercise that muscle. Asking people to give you quality feedback on the spot will result in topical answers. If you want to get real feedback, give them enough notice so they have time to think about various dimensions.\n\n- **🤲 Discuss the feedback** - When you have received the feedback, don’t get defensive. Instead be curious about why they think that way. It’s never easy but just remember that this is going to only make you stronger. As tough as it is in the moment, think of the “future you” receiving this game changing feedback.\n\n- **🙏 Be authentic** - Do not solicit feedback if you don’t intend to act upon it or are offended by it. Don’t have ego and don’t be vindictive if you receive feedback you did not expect. If you take offense and castigate someone for feedback you solicited, that will undo all trust, not just with the person but across the organization. Remember, your team has had to gather the courage and put in the work to give you feedback, so be kind.\n\n- **♻️ Follow through**- Act upon the feedback you’re given, in a way that shows the giver that you are attempting to make progress. If you keep asking for feedback and not act on it, it will create disillusionment in your ability to take action.\n\nFeedback is an important tool in your growth arsenal and should be used surgically. Using this technique too often with not enough bias to action, can cause it to lose its sheen. However, used the right way, coupled with the feedback you receive from your manager, your team feedback can turbocharge your performance and give you the context you need to operate at the next level.",
      "code": "Real change happens when you are pushed beyond your comfort zone. Most times you look to your manager to give you feedback that will help you raise the bar. This feedback will usually happen one or 2 times in the year during your performance reviews, or hopefully more frequently, as and when the situations arise.\n\nHowever, there is another hidden form of feedback that can be hugely valuable, and that is from your **team - described by peers, cross-functional stakeholders and even your own direct reports.**\n\nCompanies tend to structure this as “360” feedback which generally coincides with a promotion or a PIP (Performance Improvement Plan). However, it would be nice if this kind of feedback could be obtained more frequently, wouldn’t it? Wait actually it can! You just need to create the right conditions to get it.\n\n![](/static/images/feedback1.jpg)\n\nIf you want your team to give you real feedback, these 5 techniques have worked well for me -\n\n- **🤝 Ask for consent** - While you might be eager to receive feedback, others might not be as eager to give you feedback. Reasons could range from not wanting to antagonize you, possible retaliation or just not being used to giving feedback. Be cognizant of their time and be humble in your ask. Additionally, I have often found using phrases like “Please don’t hesitate to give me your true thoughts, no holds barred” to be quite effective in soliciting real feedback. Keep in mind, if you ask for it, you will receive it.\n\n- **⏳Give time to think** - Members of your team might not be managers themselves, so they have never had to exercise that muscle. Asking people to give you quality feedback on the spot will result in topical answers. If you want to get real feedback, give them enough notice so they have time to think about various dimensions.\n\n- **🤲 Discuss the feedback** - When you have received the feedback, don’t get defensive. Instead be curious about why they think that way. It’s never easy but just remember that this is going to only make you stronger. As tough as it is in the moment, think of the “future you” receiving this game changing feedback.\n\n- **🙏 Be authentic** - Do not solicit feedback if you don’t intend to act upon it or are offended by it. Don’t have ego and don’t be vindictive if you receive feedback you did not expect. If you take offense and castigate someone for feedback you solicited, that will undo all trust, not just with the person but across the organization. Remember, your team has had to gather the courage and put in the work to give you feedback, so be kind.\n\n- **♻️ Follow through**- Act upon the feedback you’re given, in a way that shows the giver that you are attempting to make progress. If you keep asking for feedback and not act on it, it will create disillusionment in your ability to take action.\n\nFeedback is an important tool in your growth arsenal and should be used surgically. Using this technique too often with not enough bias to action, can cause it to lose its sheen. However, used the right way, coupled with the feedback you receive from your manager, your team feedback can turbocharge your performance and give you the context you need to operate at the next level."
    },
    "slug": "feedback",
    "path": "posts/feedback",
    "filePath": "feedback.mdx",
    "toc": [],
    "readingTime": {
      "text": "3 min read",
      "minutes": 2.81,
      "time": 168600,
      "words": 562
    },
    "structuredData": {
      "@context": "https://schema.org",
      "@type": "BlogPosting",
      "headline": "Turbocharge your career through team feedback",
      "datePublished": "2024-07-12T00:00:00.000Z",
      "dateModified": "2024-07-12T00:00:00.000Z",
      "description": "Unlock new levels using feedback from your peers & direct reports",
      "image": "/static/images/feedback.jpeg",
      "url": "https://arjunrao.co/posts/feedback"
    }
  },
  {
    "title": "Financial awakenings",
    "date": "2019-12-31T00:00:00.000Z",
    "tags": [
      "finance",
      "cashflow",
      "fire"
    ],
    "lastmod": undefined,
    "draft": false,
    "summary": "My takeaways from Rich Dad, Poor Dad",
    "images": [
      "/static/images/assets-income.jpg"
    ],
    "authors": undefined,
    "layout": undefined,
    "bibliography": undefined,
    "canonicalUrl": undefined,
    "content": "I was a bit late to read \"Rich Dad Poor Dad\" by [Robert Kiyosaki](https://twitter.com/theRealKiyosaki) but I have crossed that off my list in 2019. I think it is one of the most influential (although the effects are too early to measure right now) books that I have read in a **long** time. There are 2 things that the book does extremely well -\n\n- It takes existing and known concepts around financial literacy and planning and sheds new light on it, in a way that makes it hard hitting & impactful.\n- It does not explain the nitty gritty details (eg. of what you should buy to get rich) but leaves enough of a template for you to investigate yourself and think of how you can customize it. As a result, it provides clear _first principles_, which I think go a lot further. As the saying goes - \"Teach a man to fish...\"\n\nThis summary is part of my journey to become more financially literate and while some of these concepts are obvious to others, they sparked something in me which is why I chose to highlight these.\n\n1. **Understanding assets and liabilities with respect to Cashflow**\n\nHaving a simplistic template for both the `Income statement` and `Balance Sheet` helped think of a bunch of new concepts namely\n\n- _Cashflow pattern of an asset_\n\nThis basically indicates that an asset is something that will create income and does _not_ cause you expenses in the long run\n\n\nTo focus on this just a bit more, an example of how a rich person thinks of cashflow for assets is shown by\n\n![](/static/images/assets-income-rich.png)\n\nThis diagram says that to be rich, you need a varied (diversified) set of streams of income and from what I have read, which ostensibly isn't a whole lot, most millionaires have 7 streams of income on an average. You can read about it anywhere on the interwebs really, but here is [one](https://www.linkedin.com/pulse/7-income-streams-most-millionaires-manoj-arora/)\n\n- _Is a house an asset or liability?_\n\nThis is something that I think about a lot and in the past I have always thought buying a house is the _right_ thing to do. As I have gotten older, that has changed quite a bit and I have moved to the camp of thought that buying a house is a liability rather than an asset. This is crystallized by what I read in the book, an excerpt of which is [here](https://www.richdad.com/is-house-an-asset)\n\n> But in the real world where you need money in your pocket to survive, if you have a house, paid for or not, that you live in, then it really isn’t an asset. Instead of putting money in your pocket, it takes money out of your pocket in the form of a mortgage, utility payments, taxes, maintenance, and more. That is the simple definition of a liability.\n\n![](/static/images/own-house.jpg)\n\nIn the book, Robert highlights the 3 opportunities you lose if you invest in an expensive house early on -\n\n- Loss of time\n- Loss of additional capital - Money tied in the house can be put elsewhere as better investment vehicles\n- Loss of education - Losing the ability to become a sophisticated investor due to commitments towards the house\n\nThis isn't to say I won't buy a house, but I will _try_ to make the cashflow work towards the purchase of the house as opposed to relying on the notion of the house being an asset.\n\n![](/static/images/house-liability.jpg)\n\n- _Deep focus on acquiring assets_\n\nFocusing on purchasing assets that are income generators rather than picking up things that seem like assets and are more likely liabilities. I know this sounds like a repetition but really understanding what that means is **key** to making sure you are making the right decisions for the right reasons.\n\n2. **Increasing financial literacy**\n\nWe do not get taught any of the basics of investment until we either choose to do it ourselves in our 20s or we take classes late in college. I believe it is a failure of our education systems collectively, globally. While traditional subjects like Algebra, Geometry and Literature are important, the fact that we go through formative phases of our lives without learning about one of the most core pieces of our lives is fairly shocking.\n\nA logical evolution for me includes learning and really understanding investment vehicles that I have ignored thus far, including tax-lien certificates which are a real mindbender for me, and something that I will write about in more detail once I understand the details of it myself.\nPersonally, I get comfortable buying the staples - mutual funds, stocks, ETFs, but there is a wealth ( pun intended ) of options (also pun intended) out there including options, real estate etc. I want to spend the year reading and learning more about these more esoteric alternatives and going deeper down that rabbit hole.\nThe main thing to make sure would be to not be naive and know **exactly** what I am getting into because these moves can be hugely risky and need precise understanding of pros and cons.\n\n3. **Paying taxes**\n\nI pay about ~36% taxes, which I am fine with paying as long as it gets used and not abused. My point here isn't about the actual share of taxes, but how the book made me think of how much _effort_ goes into paying taxes. 36% of the year is basically 19 weeks which equates to just under 5 months. This basically means that from January to May you are working for the government. A contrived but a powerful example of what your contributions really end up meaning.\n\n4. **What is \"Wealth\" ?**\n\nWealth is not intended to be a trope to show off, but is more definitionally aligned with financial freedom. From the book -\n\n> Wealth is the person's ability to survive so many number of days forward - or if I stopped working today, how long can I survive?\n\nWhile by itself that is incredibly interesting, Robert takes it one step further by defining it as\n\n> Wealth is the measure of the cash flow from the asset column compared with the expense column\n\nThis to me is absolutely mindblowing. This really drives home the point, that if you focus on picking assets that are provide income, you can create a runway for yourself without needing to rely on your paycheck as the main source of sustenance. This also craftily decouples the concept of \"richness\" from \"wealth\" which is an important distinction to make.\n\nThis point here, is my biggest takeaway from the book. I still don't fully understand what it means specifically for me, but I am super excited to explore this concept further.\n\n5. **What is your business?**\n\nPeople tend to confuse their profession with being their business. As an example, if I asked what was your business, and you said \"I work in Ad Tech\", unless you own the company, that answer is not relevant to the question. The book had an interesting perspective of pivoting your idea of business around the \"Asset column\" in the diagrams above and not the \"Income column\". This would help you see what your primary sources of cashflow are, from that asset column to help you determine the answer to that question.\n\nSome other points worthy of highlighting from the book include -\n\n- Financial IQ is said to have 4 parts\n\n  - Accounting\n  - Investing\n  - Knowledge of the markets\n  - The Law\n    The last point is especially interesting, because the book goes into a small amount of detail of creating personal corporations which is something that I definitely do not know enough about to have an opinion, but is yet another train of thought that I want to follow further.\n\n- Don't hesitate to pay people who are good at what they do, if it means you can rely on their counsel and services without having to stress about those areas.\n  This was something that was very different from the way I thought of things, in terms of not wanting to pay too much money to specialists (like real estate brokers or tax accountants) but having read through several examples of this in the book, I am certainly open to rethinking my stance on this one, if it means it will get me closer to my goals\n\n- Raising capital for your investments does not mean you have to go to the bank for a loan.\n  Yet another point for me to understand myself, because the naive approach would be to ask for a loan/credit when you don't have the money to cover the purchase. However, navigating alternatives like providing written contracts between a buyer and seller (if it is an exchange transaction) are nifty to think about rather than the ways everybody else thinks about it.\n\nTowards the end of the book, Robert offers a rapid-fire set of TODOs which are actually helpful, even though they might seem pithy. These include -\n\n- Stop doing what you are doing, in terms of financial actions, that are not yielding results\n- Look for new ideas\n- Find someone who has done what you want to do\n- Take classes, read and attend seminars\n- Make lots of offers\n- Action always beats inaction\n\nAll in all, I am really impressed by the book and while there is no telling what I will gain from the book, I am excited that the answer to that question lies in the journey that I will undertake from this point forward.",
    "_id": "financial-awakenings.mdx",
    "_raw": {
      "flattenedPath": "financial-awakenings"
    },
    "body": {
      "raw": "I was a bit late to read \"Rich Dad Poor Dad\" by [Robert Kiyosaki](https://twitter.com/theRealKiyosaki) but I have crossed that off my list in 2019. I think it is one of the most influential (although the effects are too early to measure right now) books that I have read in a **long** time. There are 2 things that the book does extremely well -\n\n- It takes existing and known concepts around financial literacy and planning and sheds new light on it, in a way that makes it hard hitting & impactful.\n- It does not explain the nitty gritty details (eg. of what you should buy to get rich) but leaves enough of a template for you to investigate yourself and think of how you can customize it. As a result, it provides clear _first principles_, which I think go a lot further. As the saying goes - \"Teach a man to fish...\"\n\nThis summary is part of my journey to become more financially literate and while some of these concepts are obvious to others, they sparked something in me which is why I chose to highlight these.\n\n1. **Understanding assets and liabilities with respect to Cashflow**\n\nHaving a simplistic template for both the `Income statement` and `Balance Sheet` helped think of a bunch of new concepts namely\n\n- _Cashflow pattern of an asset_\n\nThis basically indicates that an asset is something that will create income and does _not_ cause you expenses in the long run\n\n\nTo focus on this just a bit more, an example of how a rich person thinks of cashflow for assets is shown by\n\n![](/static/images/assets-income-rich.png)\n\nThis diagram says that to be rich, you need a varied (diversified) set of streams of income and from what I have read, which ostensibly isn't a whole lot, most millionaires have 7 streams of income on an average. You can read about it anywhere on the interwebs really, but here is [one](https://www.linkedin.com/pulse/7-income-streams-most-millionaires-manoj-arora/)\n\n- _Is a house an asset or liability?_\n\nThis is something that I think about a lot and in the past I have always thought buying a house is the _right_ thing to do. As I have gotten older, that has changed quite a bit and I have moved to the camp of thought that buying a house is a liability rather than an asset. This is crystallized by what I read in the book, an excerpt of which is [here](https://www.richdad.com/is-house-an-asset)\n\n> But in the real world where you need money in your pocket to survive, if you have a house, paid for or not, that you live in, then it really isn’t an asset. Instead of putting money in your pocket, it takes money out of your pocket in the form of a mortgage, utility payments, taxes, maintenance, and more. That is the simple definition of a liability.\n\n![](/static/images/own-house.jpg)\n\nIn the book, Robert highlights the 3 opportunities you lose if you invest in an expensive house early on -\n\n- Loss of time\n- Loss of additional capital - Money tied in the house can be put elsewhere as better investment vehicles\n- Loss of education - Losing the ability to become a sophisticated investor due to commitments towards the house\n\nThis isn't to say I won't buy a house, but I will _try_ to make the cashflow work towards the purchase of the house as opposed to relying on the notion of the house being an asset.\n\n![](/static/images/house-liability.jpg)\n\n- _Deep focus on acquiring assets_\n\nFocusing on purchasing assets that are income generators rather than picking up things that seem like assets and are more likely liabilities. I know this sounds like a repetition but really understanding what that means is **key** to making sure you are making the right decisions for the right reasons.\n\n2. **Increasing financial literacy**\n\nWe do not get taught any of the basics of investment until we either choose to do it ourselves in our 20s or we take classes late in college. I believe it is a failure of our education systems collectively, globally. While traditional subjects like Algebra, Geometry and Literature are important, the fact that we go through formative phases of our lives without learning about one of the most core pieces of our lives is fairly shocking.\n\nA logical evolution for me includes learning and really understanding investment vehicles that I have ignored thus far, including tax-lien certificates which are a real mindbender for me, and something that I will write about in more detail once I understand the details of it myself.\nPersonally, I get comfortable buying the staples - mutual funds, stocks, ETFs, but there is a wealth ( pun intended ) of options (also pun intended) out there including options, real estate etc. I want to spend the year reading and learning more about these more esoteric alternatives and going deeper down that rabbit hole.\nThe main thing to make sure would be to not be naive and know **exactly** what I am getting into because these moves can be hugely risky and need precise understanding of pros and cons.\n\n3. **Paying taxes**\n\nI pay about ~36% taxes, which I am fine with paying as long as it gets used and not abused. My point here isn't about the actual share of taxes, but how the book made me think of how much _effort_ goes into paying taxes. 36% of the year is basically 19 weeks which equates to just under 5 months. This basically means that from January to May you are working for the government. A contrived but a powerful example of what your contributions really end up meaning.\n\n4. **What is \"Wealth\" ?**\n\nWealth is not intended to be a trope to show off, but is more definitionally aligned with financial freedom. From the book -\n\n> Wealth is the person's ability to survive so many number of days forward - or if I stopped working today, how long can I survive?\n\nWhile by itself that is incredibly interesting, Robert takes it one step further by defining it as\n\n> Wealth is the measure of the cash flow from the asset column compared with the expense column\n\nThis to me is absolutely mindblowing. This really drives home the point, that if you focus on picking assets that are provide income, you can create a runway for yourself without needing to rely on your paycheck as the main source of sustenance. This also craftily decouples the concept of \"richness\" from \"wealth\" which is an important distinction to make.\n\nThis point here, is my biggest takeaway from the book. I still don't fully understand what it means specifically for me, but I am super excited to explore this concept further.\n\n5. **What is your business?**\n\nPeople tend to confuse their profession with being their business. As an example, if I asked what was your business, and you said \"I work in Ad Tech\", unless you own the company, that answer is not relevant to the question. The book had an interesting perspective of pivoting your idea of business around the \"Asset column\" in the diagrams above and not the \"Income column\". This would help you see what your primary sources of cashflow are, from that asset column to help you determine the answer to that question.\n\nSome other points worthy of highlighting from the book include -\n\n- Financial IQ is said to have 4 parts\n\n  - Accounting\n  - Investing\n  - Knowledge of the markets\n  - The Law\n    The last point is especially interesting, because the book goes into a small amount of detail of creating personal corporations which is something that I definitely do not know enough about to have an opinion, but is yet another train of thought that I want to follow further.\n\n- Don't hesitate to pay people who are good at what they do, if it means you can rely on their counsel and services without having to stress about those areas.\n  This was something that was very different from the way I thought of things, in terms of not wanting to pay too much money to specialists (like real estate brokers or tax accountants) but having read through several examples of this in the book, I am certainly open to rethinking my stance on this one, if it means it will get me closer to my goals\n\n- Raising capital for your investments does not mean you have to go to the bank for a loan.\n  Yet another point for me to understand myself, because the naive approach would be to ask for a loan/credit when you don't have the money to cover the purchase. However, navigating alternatives like providing written contracts between a buyer and seller (if it is an exchange transaction) are nifty to think about rather than the ways everybody else thinks about it.\n\nTowards the end of the book, Robert offers a rapid-fire set of TODOs which are actually helpful, even though they might seem pithy. These include -\n\n- Stop doing what you are doing, in terms of financial actions, that are not yielding results\n- Look for new ideas\n- Find someone who has done what you want to do\n- Take classes, read and attend seminars\n- Make lots of offers\n- Action always beats inaction\n\nAll in all, I am really impressed by the book and while there is no telling what I will gain from the book, I am excited that the answer to that question lies in the journey that I will undertake from this point forward.",
      "code": "I was a bit late to read \"Rich Dad Poor Dad\" by [Robert Kiyosaki](https://twitter.com/theRealKiyosaki) but I have crossed that off my list in 2019. I think it is one of the most influential (although the effects are too early to measure right now) books that I have read in a **long** time. There are 2 things that the book does extremely well -\n\n- It takes existing and known concepts around financial literacy and planning and sheds new light on it, in a way that makes it hard hitting & impactful.\n- It does not explain the nitty gritty details (eg. of what you should buy to get rich) but leaves enough of a template for you to investigate yourself and think of how you can customize it. As a result, it provides clear _first principles_, which I think go a lot further. As the saying goes - \"Teach a man to fish...\"\n\nThis summary is part of my journey to become more financially literate and while some of these concepts are obvious to others, they sparked something in me which is why I chose to highlight these.\n\n1. **Understanding assets and liabilities with respect to Cashflow**\n\nHaving a simplistic template for both the `Income statement` and `Balance Sheet` helped think of a bunch of new concepts namely\n\n- _Cashflow pattern of an asset_\n\nThis basically indicates that an asset is something that will create income and does _not_ cause you expenses in the long run\n\n\nTo focus on this just a bit more, an example of how a rich person thinks of cashflow for assets is shown by\n\n![](/static/images/assets-income-rich.png)\n\nThis diagram says that to be rich, you need a varied (diversified) set of streams of income and from what I have read, which ostensibly isn't a whole lot, most millionaires have 7 streams of income on an average. You can read about it anywhere on the interwebs really, but here is [one](https://www.linkedin.com/pulse/7-income-streams-most-millionaires-manoj-arora/)\n\n- _Is a house an asset or liability?_\n\nThis is something that I think about a lot and in the past I have always thought buying a house is the _right_ thing to do. As I have gotten older, that has changed quite a bit and I have moved to the camp of thought that buying a house is a liability rather than an asset. This is crystallized by what I read in the book, an excerpt of which is [here](https://www.richdad.com/is-house-an-asset)\n\n> But in the real world where you need money in your pocket to survive, if you have a house, paid for or not, that you live in, then it really isn’t an asset. Instead of putting money in your pocket, it takes money out of your pocket in the form of a mortgage, utility payments, taxes, maintenance, and more. That is the simple definition of a liability.\n\n![](/static/images/own-house.jpg)\n\nIn the book, Robert highlights the 3 opportunities you lose if you invest in an expensive house early on -\n\n- Loss of time\n- Loss of additional capital - Money tied in the house can be put elsewhere as better investment vehicles\n- Loss of education - Losing the ability to become a sophisticated investor due to commitments towards the house\n\nThis isn't to say I won't buy a house, but I will _try_ to make the cashflow work towards the purchase of the house as opposed to relying on the notion of the house being an asset.\n\n![](/static/images/house-liability.jpg)\n\n- _Deep focus on acquiring assets_\n\nFocusing on purchasing assets that are income generators rather than picking up things that seem like assets and are more likely liabilities. I know this sounds like a repetition but really understanding what that means is **key** to making sure you are making the right decisions for the right reasons.\n\n2. **Increasing financial literacy**\n\nWe do not get taught any of the basics of investment until we either choose to do it ourselves in our 20s or we take classes late in college. I believe it is a failure of our education systems collectively, globally. While traditional subjects like Algebra, Geometry and Literature are important, the fact that we go through formative phases of our lives without learning about one of the most core pieces of our lives is fairly shocking.\n\nA logical evolution for me includes learning and really understanding investment vehicles that I have ignored thus far, including tax-lien certificates which are a real mindbender for me, and something that I will write about in more detail once I understand the details of it myself.\nPersonally, I get comfortable buying the staples - mutual funds, stocks, ETFs, but there is a wealth ( pun intended ) of options (also pun intended) out there including options, real estate etc. I want to spend the year reading and learning more about these more esoteric alternatives and going deeper down that rabbit hole.\nThe main thing to make sure would be to not be naive and know **exactly** what I am getting into because these moves can be hugely risky and need precise understanding of pros and cons.\n\n3. **Paying taxes**\n\nI pay about ~36% taxes, which I am fine with paying as long as it gets used and not abused. My point here isn't about the actual share of taxes, but how the book made me think of how much _effort_ goes into paying taxes. 36% of the year is basically 19 weeks which equates to just under 5 months. This basically means that from January to May you are working for the government. A contrived but a powerful example of what your contributions really end up meaning.\n\n4. **What is \"Wealth\" ?**\n\nWealth is not intended to be a trope to show off, but is more definitionally aligned with financial freedom. From the book -\n\n> Wealth is the person's ability to survive so many number of days forward - or if I stopped working today, how long can I survive?\n\nWhile by itself that is incredibly interesting, Robert takes it one step further by defining it as\n\n> Wealth is the measure of the cash flow from the asset column compared with the expense column\n\nThis to me is absolutely mindblowing. This really drives home the point, that if you focus on picking assets that are provide income, you can create a runway for yourself without needing to rely on your paycheck as the main source of sustenance. This also craftily decouples the concept of \"richness\" from \"wealth\" which is an important distinction to make.\n\nThis point here, is my biggest takeaway from the book. I still don't fully understand what it means specifically for me, but I am super excited to explore this concept further.\n\n5. **What is your business?**\n\nPeople tend to confuse their profession with being their business. As an example, if I asked what was your business, and you said \"I work in Ad Tech\", unless you own the company, that answer is not relevant to the question. The book had an interesting perspective of pivoting your idea of business around the \"Asset column\" in the diagrams above and not the \"Income column\". This would help you see what your primary sources of cashflow are, from that asset column to help you determine the answer to that question.\n\nSome other points worthy of highlighting from the book include -\n\n- Financial IQ is said to have 4 parts\n\n  - Accounting\n  - Investing\n  - Knowledge of the markets\n  - The Law\n    The last point is especially interesting, because the book goes into a small amount of detail of creating personal corporations which is something that I definitely do not know enough about to have an opinion, but is yet another train of thought that I want to follow further.\n\n- Don't hesitate to pay people who are good at what they do, if it means you can rely on their counsel and services without having to stress about those areas.\n  This was something that was very different from the way I thought of things, in terms of not wanting to pay too much money to specialists (like real estate brokers or tax accountants) but having read through several examples of this in the book, I am certainly open to rethinking my stance on this one, if it means it will get me closer to my goals\n\n- Raising capital for your investments does not mean you have to go to the bank for a loan.\n  Yet another point for me to understand myself, because the naive approach would be to ask for a loan/credit when you don't have the money to cover the purchase. However, navigating alternatives like providing written contracts between a buyer and seller (if it is an exchange transaction) are nifty to think about rather than the ways everybody else thinks about it.\n\nTowards the end of the book, Robert offers a rapid-fire set of TODOs which are actually helpful, even though they might seem pithy. These include -\n\n- Stop doing what you are doing, in terms of financial actions, that are not yielding results\n- Look for new ideas\n- Find someone who has done what you want to do\n- Take classes, read and attend seminars\n- Make lots of offers\n- Action always beats inaction\n\nAll in all, I am really impressed by the book and while there is no telling what I will gain from the book, I am excited that the answer to that question lies in the journey that I will undertake from this point forward."
    },
    "slug": "financial-awakenings",
    "path": "posts/financial-awakenings",
    "filePath": "financial-awakenings.mdx",
    "toc": [],
    "readingTime": {
      "text": "8 min read",
      "minutes": 7.95,
      "time": 477000,
      "words": 1590
    },
    "structuredData": {
      "@context": "https://schema.org",
      "@type": "BlogPosting",
      "headline": "Financial awakenings",
      "datePublished": "2019-12-31T00:00:00.000Z",
      "dateModified": "2019-12-31T00:00:00.000Z",
      "description": "My takeaways from Rich Dad, Poor Dad",
      "image": "/static/images/assets-income.jpg",
      "url": "https://arjunrao.co/posts/financial-awakenings"
    }
  },
  {
    "title": "Unlocking Creativity Through Collaborative Conversations",
    "date": "2024-04-03T00:00:00.000Z",
    "tags": [
      "generative",
      "problem-solving",
      "leadership"
    ],
    "lastmod": undefined,
    "draft": false,
    "summary": "How to have effective generative discussions",
    "images": [
      "/static/images/generative.jpeg"
    ],
    "authors": undefined,
    "layout": undefined,
    "bibliography": undefined,
    "canonicalUrl": undefined,
    "content": "In my opinion, generative discussions are the Seal Team 6 of tackling audacious problems. It helps you harness the cognitive firepower of several individuals towards a successful outcome. \n\n**A generative discussion is the ability to be able to generate a self-sustaining conversation among a group of people that produces ideas that are greater than the sum of its parts.**\n\nImagine you have this situation - your team is building a B2C SaaS application, and you are unable to understand what is causing such high customer churn despite your team shipping some incredible features. Or maybe you recognize the need for your team to have a robust data engineering practice, but what should that mean in reality? Or what if you are trying to raise the technical bar of your team and you need to find innovative ways to be able to do so. These are just some examples of  open ended problems that you could gather a group together to tackle using generative discussions. \n\nSo how does generative thinking work in practice? [Wharton Magazine](https://magazine.wharton.upenn.edu/digital/power-of-generative-thinking-to-improve-company-strategy/) has a succinct way of describing the 3 scenarios of how this plays out \n\n1. Generate a large quantity of ideas to solve a single problem without judgment of the ideas until all the ideas have been posted.\n2. Generate a variety of ideas outside of logical, already established approaches.\n3. Generate focused and detailed improvement of one idea or solution.\n\nSteve Forth at Ibakka describing [generative thinking](https://www.ibbaka.com/ibbaka-talent-blog/generative-thinking-as-a-critical-skill-a-conversation-with-gk-vanpatter)\n\n> The number one dynamic we see in organizational settings that is negatively impacting innovation is vast over-emphasis on convergent thinking. What are some other ways to say convergent thinking? Among them would be judgment thinking, critical thinking, devils advocate, and decision-making. Whichever term you choose to use, judgment thinking is narrowing. The assumption is that options exist and now you are narrowing them by applying convergent thinking. It’s not that difficult to see that having a team or an organization that just narrows its thinking is not on a path to change, growth, adaptation, innovation or creation of any kind. What if no options to judge exist? What would the convergent thinkers, the “deciders” do? Where do the options come from? If we do not expend the energy to value and include the divergent thinkers or generative thinkers, the folks geared to creating options, there will be nothing to judge, nothing to criticize. This awareness is a rather fundamental principle of innovation enabling.\n\n\n## Overall structure of having generative discussions\n\nThis is typically the process we end up walking through.\n\n- We gather a small group of folks given an advanced read ahead of the problem we are trying to unravel. \n- At the session itself, typically in-person, we huddle around a whiteboard with just the problem statement at the prompt. \n- This typically will have someone have either a clarifying question in terms of the problem itself, or will opine on an aspect of the problem. \n- Now this is the key part — when someone provides an opinion, it is crucial to pay attention to what they are saying. Depending on what they say there are 3 options\n    - 1) You provide your own opinion independent of their opinion\n    - 2) You provide a counter opinion to their opinion \n    - 3) You use their opinion, to formulate a derivation of your own opinion\n- In the initial parts of generative thinking, the group is likely going to add a few opinions independently of each other, maybe either points 1 or 2, to just get a sense of where the group is at mentally. \n- However, the real power of generative discussions comes when you are able to start pulling the threads together to start using point 3, as a way to build upon the thoughts and discussions of others. \n- Sometimes there might be cases, where the conversations run dry because the problem is incredibly obtuse to tackle. This is when using techniques like [Eigenquestions](https://coda.io/@shishir/eigenquestions-the-art-of-framing-problems) — to help reframe the question — come in handy and help reignite the conversation. \n\n## Key tenets \n\n- **Set aside sufficient time** — Given there is no predetermined set of options that you have to solve your problem, you need to be ready to set aside enough time to be able to have these kind of open ended discussions. Depending on the class of problems you are talking about, you might require at least a few hours, if not discussions over several days, to be able to reach a useful outcome. \n\n- **Do it in-person** — I am a huge proponent of virtual work. However, one of the big failings of virtual is the inability to have generative discussions. We have tried it several times, but have never had success. I believe the reason for that is the fact that the way people talk in real-time online is a lot more discrete as opposed to continuous. For example, you have to let one person finish talking, to only then start your own rebuttal/opinion. However, if 2 people accidentally talk over each other, the whiplash from that encounter is far greater in a virtual setting than a real setting. This results in people receding into their own shell rather than speaking out freely. This is especially true, if the people on the call are not all peers. If there is a hierarchy involved, that might result in junior people feeling an inhibition to interrupt other folks in their discussion. In practice, we have found this barrier to be almost non-existent when we have the discussions in person. \n\n- **Get a whiteboard** — Having tools like whiteboards really help — oftentimes the discussions might start at point A, and if you aren’t paying close attention you might reach point Z. Being able to visualize, or cluster themes or topics of discussion, so that it helps keep the group on track is a powerful tool.\n\n- **Check your ego at the door** — The whole point of generative discussions is to be able to be able to discussion openly and freely, any potential solutions to a particular problem. This might result in your set of ideas being completely debunked by someone else in the group. While being respectful forms the foundation of generative discussions, any perceived slights or not being the person whose solution is being generated on, should absolutely not be a factor in your contribution into the process. At the end of the day, everyone is trying to get to a positive outcome, and being able to shed your ego for the sake of the collective good can be hugely liberating. \n\n- **Active participation from all members** — For generative discussions to have a successful outcome, you have to have people who are able to generate thoughts or ideas. These ideas don’t even need to be good ideas. They just need to be inputs into the process. For effective participation, members should either contribute to the discussion's direction, update their opinions maturely, or offer compelling reasons to challenge the group consensus. If you only have 1 or 2 people having most of the discussions with a silent majority, it doesn’t yield a valuable generative discussion. It is much more preferable to have a small group that is actively contributing than a large group, most of whom are passively watching. \n\n- **Effective facilitation** — If you have a healthy set of generative discussions, there will be all kinds of directions for the conversation to go into. It is very typical for this format to follow a scatter-gather approach, where the group first goes very wide with the ideas that they put on the table. You need someone in the group, typically assigned ahead of time, who\n    - 1) Keeps the conversation focused but does not nip any ideas in the bud \n    - 2) Gathers the various threads to start forming themes or clusters so that the group can start narrowing down what they want to walk away from the discussion with. \n    - 3) Synthesizes information from various people to produce a derivative that people can use as a launchpad for further conversations. \n\nI personally am a huge fan of generative discussions. It feels like a superpower to leverage the brainpower of your colleagues to solve some of the most challenging or strategic problems that your team encounters. \n\n---",
    "_id": "generative.mdx",
    "_raw": {
      "flattenedPath": "generative"
    },
    "body": {
      "raw": "In my opinion, generative discussions are the Seal Team 6 of tackling audacious problems. It helps you harness the cognitive firepower of several individuals towards a successful outcome. \n\n**A generative discussion is the ability to be able to generate a self-sustaining conversation among a group of people that produces ideas that are greater than the sum of its parts.**\n\nImagine you have this situation - your team is building a B2C SaaS application, and you are unable to understand what is causing such high customer churn despite your team shipping some incredible features. Or maybe you recognize the need for your team to have a robust data engineering practice, but what should that mean in reality? Or what if you are trying to raise the technical bar of your team and you need to find innovative ways to be able to do so. These are just some examples of  open ended problems that you could gather a group together to tackle using generative discussions. \n\nSo how does generative thinking work in practice? [Wharton Magazine](https://magazine.wharton.upenn.edu/digital/power-of-generative-thinking-to-improve-company-strategy/) has a succinct way of describing the 3 scenarios of how this plays out \n\n1. Generate a large quantity of ideas to solve a single problem without judgment of the ideas until all the ideas have been posted.\n2. Generate a variety of ideas outside of logical, already established approaches.\n3. Generate focused and detailed improvement of one idea or solution.\n\nSteve Forth at Ibakka describing [generative thinking](https://www.ibbaka.com/ibbaka-talent-blog/generative-thinking-as-a-critical-skill-a-conversation-with-gk-vanpatter)\n\n> The number one dynamic we see in organizational settings that is negatively impacting innovation is vast over-emphasis on convergent thinking. What are some other ways to say convergent thinking? Among them would be judgment thinking, critical thinking, devils advocate, and decision-making. Whichever term you choose to use, judgment thinking is narrowing. The assumption is that options exist and now you are narrowing them by applying convergent thinking. It’s not that difficult to see that having a team or an organization that just narrows its thinking is not on a path to change, growth, adaptation, innovation or creation of any kind. What if no options to judge exist? What would the convergent thinkers, the “deciders” do? Where do the options come from? If we do not expend the energy to value and include the divergent thinkers or generative thinkers, the folks geared to creating options, there will be nothing to judge, nothing to criticize. This awareness is a rather fundamental principle of innovation enabling.\n\n\n## Overall structure of having generative discussions\n\nThis is typically the process we end up walking through.\n\n- We gather a small group of folks given an advanced read ahead of the problem we are trying to unravel. \n- At the session itself, typically in-person, we huddle around a whiteboard with just the problem statement at the prompt. \n- This typically will have someone have either a clarifying question in terms of the problem itself, or will opine on an aspect of the problem. \n- Now this is the key part — when someone provides an opinion, it is crucial to pay attention to what they are saying. Depending on what they say there are 3 options\n    - 1) You provide your own opinion independent of their opinion\n    - 2) You provide a counter opinion to their opinion \n    - 3) You use their opinion, to formulate a derivation of your own opinion\n- In the initial parts of generative thinking, the group is likely going to add a few opinions independently of each other, maybe either points 1 or 2, to just get a sense of where the group is at mentally. \n- However, the real power of generative discussions comes when you are able to start pulling the threads together to start using point 3, as a way to build upon the thoughts and discussions of others. \n- Sometimes there might be cases, where the conversations run dry because the problem is incredibly obtuse to tackle. This is when using techniques like [Eigenquestions](https://coda.io/@shishir/eigenquestions-the-art-of-framing-problems) — to help reframe the question — come in handy and help reignite the conversation. \n\n## Key tenets \n\n- **Set aside sufficient time** — Given there is no predetermined set of options that you have to solve your problem, you need to be ready to set aside enough time to be able to have these kind of open ended discussions. Depending on the class of problems you are talking about, you might require at least a few hours, if not discussions over several days, to be able to reach a useful outcome. \n\n- **Do it in-person** — I am a huge proponent of virtual work. However, one of the big failings of virtual is the inability to have generative discussions. We have tried it several times, but have never had success. I believe the reason for that is the fact that the way people talk in real-time online is a lot more discrete as opposed to continuous. For example, you have to let one person finish talking, to only then start your own rebuttal/opinion. However, if 2 people accidentally talk over each other, the whiplash from that encounter is far greater in a virtual setting than a real setting. This results in people receding into their own shell rather than speaking out freely. This is especially true, if the people on the call are not all peers. If there is a hierarchy involved, that might result in junior people feeling an inhibition to interrupt other folks in their discussion. In practice, we have found this barrier to be almost non-existent when we have the discussions in person. \n\n- **Get a whiteboard** — Having tools like whiteboards really help — oftentimes the discussions might start at point A, and if you aren’t paying close attention you might reach point Z. Being able to visualize, or cluster themes or topics of discussion, so that it helps keep the group on track is a powerful tool.\n\n- **Check your ego at the door** — The whole point of generative discussions is to be able to be able to discussion openly and freely, any potential solutions to a particular problem. This might result in your set of ideas being completely debunked by someone else in the group. While being respectful forms the foundation of generative discussions, any perceived slights or not being the person whose solution is being generated on, should absolutely not be a factor in your contribution into the process. At the end of the day, everyone is trying to get to a positive outcome, and being able to shed your ego for the sake of the collective good can be hugely liberating. \n\n- **Active participation from all members** — For generative discussions to have a successful outcome, you have to have people who are able to generate thoughts or ideas. These ideas don’t even need to be good ideas. They just need to be inputs into the process. For effective participation, members should either contribute to the discussion's direction, update their opinions maturely, or offer compelling reasons to challenge the group consensus. If you only have 1 or 2 people having most of the discussions with a silent majority, it doesn’t yield a valuable generative discussion. It is much more preferable to have a small group that is actively contributing than a large group, most of whom are passively watching. \n\n- **Effective facilitation** — If you have a healthy set of generative discussions, there will be all kinds of directions for the conversation to go into. It is very typical for this format to follow a scatter-gather approach, where the group first goes very wide with the ideas that they put on the table. You need someone in the group, typically assigned ahead of time, who\n    - 1) Keeps the conversation focused but does not nip any ideas in the bud \n    - 2) Gathers the various threads to start forming themes or clusters so that the group can start narrowing down what they want to walk away from the discussion with. \n    - 3) Synthesizes information from various people to produce a derivative that people can use as a launchpad for further conversations. \n\nI personally am a huge fan of generative discussions. It feels like a superpower to leverage the brainpower of your colleagues to solve some of the most challenging or strategic problems that your team encounters. \n\n---",
      "code": "In my opinion, generative discussions are the Seal Team 6 of tackling audacious problems. It helps you harness the cognitive firepower of several individuals towards a successful outcome. \n\n**A generative discussion is the ability to be able to generate a self-sustaining conversation among a group of people that produces ideas that are greater than the sum of its parts.**\n\nImagine you have this situation - your team is building a B2C SaaS application, and you are unable to understand what is causing such high customer churn despite your team shipping some incredible features. Or maybe you recognize the need for your team to have a robust data engineering practice, but what should that mean in reality? Or what if you are trying to raise the technical bar of your team and you need to find innovative ways to be able to do so. These are just some examples of  open ended problems that you could gather a group together to tackle using generative discussions. \n\nSo how does generative thinking work in practice? [Wharton Magazine](https://magazine.wharton.upenn.edu/digital/power-of-generative-thinking-to-improve-company-strategy/) has a succinct way of describing the 3 scenarios of how this plays out \n\n1. Generate a large quantity of ideas to solve a single problem without judgment of the ideas until all the ideas have been posted.\n2. Generate a variety of ideas outside of logical, already established approaches.\n3. Generate focused and detailed improvement of one idea or solution.\n\nSteve Forth at Ibakka describing [generative thinking](https://www.ibbaka.com/ibbaka-talent-blog/generative-thinking-as-a-critical-skill-a-conversation-with-gk-vanpatter)\n\n> The number one dynamic we see in organizational settings that is negatively impacting innovation is vast over-emphasis on convergent thinking. What are some other ways to say convergent thinking? Among them would be judgment thinking, critical thinking, devils advocate, and decision-making. Whichever term you choose to use, judgment thinking is narrowing. The assumption is that options exist and now you are narrowing them by applying convergent thinking. It’s not that difficult to see that having a team or an organization that just narrows its thinking is not on a path to change, growth, adaptation, innovation or creation of any kind. What if no options to judge exist? What would the convergent thinkers, the “deciders” do? Where do the options come from? If we do not expend the energy to value and include the divergent thinkers or generative thinkers, the folks geared to creating options, there will be nothing to judge, nothing to criticize. This awareness is a rather fundamental principle of innovation enabling.\n\n\n## Overall structure of having generative discussions\n\nThis is typically the process we end up walking through.\n\n- We gather a small group of folks given an advanced read ahead of the problem we are trying to unravel. \n- At the session itself, typically in-person, we huddle around a whiteboard with just the problem statement at the prompt. \n- This typically will have someone have either a clarifying question in terms of the problem itself, or will opine on an aspect of the problem. \n- Now this is the key part — when someone provides an opinion, it is crucial to pay attention to what they are saying. Depending on what they say there are 3 options\n    - 1) You provide your own opinion independent of their opinion\n    - 2) You provide a counter opinion to their opinion \n    - 3) You use their opinion, to formulate a derivation of your own opinion\n- In the initial parts of generative thinking, the group is likely going to add a few opinions independently of each other, maybe either points 1 or 2, to just get a sense of where the group is at mentally. \n- However, the real power of generative discussions comes when you are able to start pulling the threads together to start using point 3, as a way to build upon the thoughts and discussions of others. \n- Sometimes there might be cases, where the conversations run dry because the problem is incredibly obtuse to tackle. This is when using techniques like [Eigenquestions](https://coda.io/@shishir/eigenquestions-the-art-of-framing-problems) — to help reframe the question — come in handy and help reignite the conversation. \n\n## Key tenets \n\n- **Set aside sufficient time** — Given there is no predetermined set of options that you have to solve your problem, you need to be ready to set aside enough time to be able to have these kind of open ended discussions. Depending on the class of problems you are talking about, you might require at least a few hours, if not discussions over several days, to be able to reach a useful outcome. \n\n- **Do it in-person** — I am a huge proponent of virtual work. However, one of the big failings of virtual is the inability to have generative discussions. We have tried it several times, but have never had success. I believe the reason for that is the fact that the way people talk in real-time online is a lot more discrete as opposed to continuous. For example, you have to let one person finish talking, to only then start your own rebuttal/opinion. However, if 2 people accidentally talk over each other, the whiplash from that encounter is far greater in a virtual setting than a real setting. This results in people receding into their own shell rather than speaking out freely. This is especially true, if the people on the call are not all peers. If there is a hierarchy involved, that might result in junior people feeling an inhibition to interrupt other folks in their discussion. In practice, we have found this barrier to be almost non-existent when we have the discussions in person. \n\n- **Get a whiteboard** — Having tools like whiteboards really help — oftentimes the discussions might start at point A, and if you aren’t paying close attention you might reach point Z. Being able to visualize, or cluster themes or topics of discussion, so that it helps keep the group on track is a powerful tool.\n\n- **Check your ego at the door** — The whole point of generative discussions is to be able to be able to discussion openly and freely, any potential solutions to a particular problem. This might result in your set of ideas being completely debunked by someone else in the group. While being respectful forms the foundation of generative discussions, any perceived slights or not being the person whose solution is being generated on, should absolutely not be a factor in your contribution into the process. At the end of the day, everyone is trying to get to a positive outcome, and being able to shed your ego for the sake of the collective good can be hugely liberating. \n\n- **Active participation from all members** — For generative discussions to have a successful outcome, you have to have people who are able to generate thoughts or ideas. These ideas don’t even need to be good ideas. They just need to be inputs into the process. For effective participation, members should either contribute to the discussion's direction, update their opinions maturely, or offer compelling reasons to challenge the group consensus. If you only have 1 or 2 people having most of the discussions with a silent majority, it doesn’t yield a valuable generative discussion. It is much more preferable to have a small group that is actively contributing than a large group, most of whom are passively watching. \n\n- **Effective facilitation** — If you have a healthy set of generative discussions, there will be all kinds of directions for the conversation to go into. It is very typical for this format to follow a scatter-gather approach, where the group first goes very wide with the ideas that they put on the table. You need someone in the group, typically assigned ahead of time, who\n    - 1) Keeps the conversation focused but does not nip any ideas in the bud \n    - 2) Gathers the various threads to start forming themes or clusters so that the group can start narrowing down what they want to walk away from the discussion with. \n    - 3) Synthesizes information from various people to produce a derivative that people can use as a launchpad for further conversations. \n\nI personally am a huge fan of generative discussions. It feels like a superpower to leverage the brainpower of your colleagues to solve some of the most challenging or strategic problems that your team encounters. \n\n---"
    },
    "slug": "generative",
    "path": "posts/generative",
    "filePath": "generative.mdx",
    "toc": [],
    "readingTime": {
      "text": "7 min read",
      "minutes": 6.83,
      "time": 409800,
      "words": 1366
    },
    "structuredData": {
      "@context": "https://schema.org",
      "@type": "BlogPosting",
      "headline": "Unlocking Creativity Through Collaborative Conversations",
      "datePublished": "2024-04-03T00:00:00.000Z",
      "dateModified": "2024-04-03T00:00:00.000Z",
      "description": "How to have effective generative discussions",
      "image": "/static/images/generative.jpeg",
      "url": "https://arjunrao.co/posts/generative"
    }
  },
  {
    "title": "Hire the best, against all odds",
    "date": "2024-02-19T00:00:00.000Z",
    "tags": [
      "hiring",
      "technology",
      "startup"
    ],
    "lastmod": undefined,
    "draft": false,
    "summary": "The key to hiring great talent at a small startup",
    "images": [
      "/static/images/hire.jpeg"
    ],
    "authors": undefined,
    "layout": undefined,
    "bibliography": undefined,
    "canonicalUrl": undefined,
    "content": "Hiring at a tech startup is a tough tough game. Even with huge supply in the market, due to the uncertainty in tech causing mass layoffs, there are several challenges trying to highlight top-tier talent into your company. Some of the challenges include\n\n- Standing out amongst the sea of other companies that people are looking at i.e. Name brand recognition\n- Competing against hyper inflated salaries that FAANG companies have promoted that has completely changed the lens through which candidates view compensation\n- Flakiness of candidates because of the number of offers that they are comparing/contrasting against\n\nHowever, if these are all challenges due to a company's small size, that size also presents a tremendous amount of opportunity. There are many other things to do like interview calibration that are required for a successful interview process, but I am focusing on the points that lend themselves more so to a small-sized organization.\n\n- **As much as the candidate is selling to you, you are selling to the candidate** - Have a clear outline of the unique value proposition of your company. There are 1000s of startups that a highly talented candidate has the ability to interview with and evaluate. Crisply articulating the mission of your company and the benefits that you provide to your employees, be it monetary, cultural or employee growth-related, can be the reason a candidate chooses your company over a FAANG or other startup.\n\n- **Unconventional interviewing methods to reduce touchpoints** - You don't have to follow the standard script followed by big companies. You could skip steps, add more people on the same round but reduce the number of rounds, introduce the candidate to executives to show the importance of the interview and many other techniques. Basically use the lack of red tape and bureaucracy in your small organization to your advantage.\n\n- **Speed, speed, speed** - I CANNOT overemphasize this point. If there is one point from this list that you should remember, it is this. There is nothing more impressive to a candidate when you are able to respond to them quickly, whatever the stage of the process they are in. Candidates are so used to being either ghosted by companies or being asked to wait for weeks, if not months, for the completion of the interview process. If you are able to blitz through the entire process from first touchpoint to extending an offer, in 1.5–2 weeks, it is absolutely mindblowing to candidates because it displays how quickly the organization could move when it comes to important things.\n\n- **Being thoughtfully scrappy** - Scrappiness is a great trait to have when it prevents people or organizations from overthinking the solution to a problem. Ensuring that you can be scrappy in the way you go through the process, and cut some corners to get to a great candidate in an efficient fashion can result in some amazing outcomes, but it is important to ensure that you are thoughtful about those corners you cut. Make sure people within the organization who are the decision makers, are in agreement with your interpretation of how the process plays out, and once they do, go all out.\n\n- **Treat your rejected candidates with empathy** - One of the worst things that can happen to a candidate after an interview, is that they get ghosted and never hear back from the company or that they are given a standardized template of rejection, with no real insight into why the process played out the way it did. This reeks of making rejections scalable, because bigger companies tend to go through so many candidates that they are unable to spend the time to think of the rejected candidates with empathy. On the other hand, as a smaller company you don't have that problem. If you have conducted debriefs with the interviewing panel, and had that discussion about why the candidate should be passed on, you already have all the reasoning behind why the team did not think the candidate was a good fit. I would highly advise you to collate that together in a way that would be perceived as constructive feedback to the candidate. Most importantly, after making the candidate aware that they have been rejected ask the candidate first if they would like to receive feedback, and if they do let them know your compiled thoughts. This builds a tremendous amount of goodwill while also sharpening your own ability to provide useful feedback.\n\n- **Access to top leadership to help sell the opportunity** - The Leadership team at a small company is always only a couple of degrees of separation away, or less. Use that to your advantage. If the candidate is unsure about something, or doesn't fully understand what the strategy of the company is or isnt fully sold on the company yet, ask the Leadership/Executive team to pitch in. They are strong advocates of the company and provide that full court press that is required to be able to allay any concerns, fears or questions that the candidate might have. This is not something big companies can rely in, and they might just throw in another Director or Managing Director into the mix. Seeing the CEO or CTO of a company come through to talk with you personally, can be a huge positive boost for the candidate.\n\n- **Limitless ownership and accountability** - When companies are smaller, the sky is the limit when it comes to taking on responsibility. From a candidate's standpoint, if there is a void of responsibility, and they are the ones stepping into it to take control of it, that is a huge value-add to the company and makes things work so much smoother. As long as there is a healthy culture of encouraging people to take on responsibility, which will result in getting recognized for that  -  be it monetarily, or through some other means, there is a great amount of opportunity for people to take on ownership of things they want to become experts at. This could range from say things like Engineering services, increased stakeholder interaction, servicing Client needs, working with operational teams to make their lives easier - the list goes on and on. This is markedly different from larger, more bureaucratic organizations, whose definition of increased ownership could be very narrow in scope.\n\n- **Flexibility of opportunity you are sourcing for** - Be flexible in the way you represent or talk about the position in the market. At the end of the day, if you have a certain amount of budget allocated to the opening, and you have a couple of different needs that the team could benefit from, think a bit unconventionally about how you could fill that position. Lets say your team is backfilling a Senior Software Engineer position. You dont _have_ to backfill it with a Senior Software Engineer per se. You could open up roles (even in parallel) to source against comparable positions like Technical Lead, or Software Engineer and an Intern, or a fairly hands-on Engineering Manager. That opens up the talent you can have access to compared to if you boxed yourself into a specific role you were on the lookout for. Similarly, when you talk to candidates, gauge what their strengths and weaknesses are and tailor the opportunity based on those if you think the person is a good addition to the team. One thing I tell candidates is that its way more important we find the right person, than fill the wrong person for the \"right\" role.\n\n- **Make it personal (involve the Hiring Manager)** - We have found it immensely useful to have the Hiring Manager do the initial reachout and interview setup with candidates. While we could have our Recruiter do it, we have noticed a marked difference in candidate response rates when the Hiring Manager themselves reaches out. It makes the outreach that much more personal and meaningful to a candidate because they immediately have a direct line into the team that they could be joining.\n\nEnsuring you are hiring the right person for a role is _the_ most important part of growing a startup. You don't really understand this until you get a _wrong_ person into a role, and have to deal with the immense amount of turmoil and additional work that produces. Hiring might seem really tough, it might seem like the role has been open for too long, and there might be a temptation to \"just\" fill it, but make sure you don't fill it with the \"wrong\" candidate - where wrong could mean ignoring certain red flags, or overriding the majority opinion of your interview panel or if you found someone who was mediocre and you have misgivings about.\n\nHowever, if you find the right candidate, then waste absolutely no time to make sure you can close that candidate.",
    "_id": "hire-the-best.mdx",
    "_raw": {
      "flattenedPath": "hire-the-best"
    },
    "body": {
      "raw": "Hiring at a tech startup is a tough tough game. Even with huge supply in the market, due to the uncertainty in tech causing mass layoffs, there are several challenges trying to highlight top-tier talent into your company. Some of the challenges include\n\n- Standing out amongst the sea of other companies that people are looking at i.e. Name brand recognition\n- Competing against hyper inflated salaries that FAANG companies have promoted that has completely changed the lens through which candidates view compensation\n- Flakiness of candidates because of the number of offers that they are comparing/contrasting against\n\nHowever, if these are all challenges due to a company's small size, that size also presents a tremendous amount of opportunity. There are many other things to do like interview calibration that are required for a successful interview process, but I am focusing on the points that lend themselves more so to a small-sized organization.\n\n- **As much as the candidate is selling to you, you are selling to the candidate** - Have a clear outline of the unique value proposition of your company. There are 1000s of startups that a highly talented candidate has the ability to interview with and evaluate. Crisply articulating the mission of your company and the benefits that you provide to your employees, be it monetary, cultural or employee growth-related, can be the reason a candidate chooses your company over a FAANG or other startup.\n\n- **Unconventional interviewing methods to reduce touchpoints** - You don't have to follow the standard script followed by big companies. You could skip steps, add more people on the same round but reduce the number of rounds, introduce the candidate to executives to show the importance of the interview and many other techniques. Basically use the lack of red tape and bureaucracy in your small organization to your advantage.\n\n- **Speed, speed, speed** - I CANNOT overemphasize this point. If there is one point from this list that you should remember, it is this. There is nothing more impressive to a candidate when you are able to respond to them quickly, whatever the stage of the process they are in. Candidates are so used to being either ghosted by companies or being asked to wait for weeks, if not months, for the completion of the interview process. If you are able to blitz through the entire process from first touchpoint to extending an offer, in 1.5–2 weeks, it is absolutely mindblowing to candidates because it displays how quickly the organization could move when it comes to important things.\n\n- **Being thoughtfully scrappy** - Scrappiness is a great trait to have when it prevents people or organizations from overthinking the solution to a problem. Ensuring that you can be scrappy in the way you go through the process, and cut some corners to get to a great candidate in an efficient fashion can result in some amazing outcomes, but it is important to ensure that you are thoughtful about those corners you cut. Make sure people within the organization who are the decision makers, are in agreement with your interpretation of how the process plays out, and once they do, go all out.\n\n- **Treat your rejected candidates with empathy** - One of the worst things that can happen to a candidate after an interview, is that they get ghosted and never hear back from the company or that they are given a standardized template of rejection, with no real insight into why the process played out the way it did. This reeks of making rejections scalable, because bigger companies tend to go through so many candidates that they are unable to spend the time to think of the rejected candidates with empathy. On the other hand, as a smaller company you don't have that problem. If you have conducted debriefs with the interviewing panel, and had that discussion about why the candidate should be passed on, you already have all the reasoning behind why the team did not think the candidate was a good fit. I would highly advise you to collate that together in a way that would be perceived as constructive feedback to the candidate. Most importantly, after making the candidate aware that they have been rejected ask the candidate first if they would like to receive feedback, and if they do let them know your compiled thoughts. This builds a tremendous amount of goodwill while also sharpening your own ability to provide useful feedback.\n\n- **Access to top leadership to help sell the opportunity** - The Leadership team at a small company is always only a couple of degrees of separation away, or less. Use that to your advantage. If the candidate is unsure about something, or doesn't fully understand what the strategy of the company is or isnt fully sold on the company yet, ask the Leadership/Executive team to pitch in. They are strong advocates of the company and provide that full court press that is required to be able to allay any concerns, fears or questions that the candidate might have. This is not something big companies can rely in, and they might just throw in another Director or Managing Director into the mix. Seeing the CEO or CTO of a company come through to talk with you personally, can be a huge positive boost for the candidate.\n\n- **Limitless ownership and accountability** - When companies are smaller, the sky is the limit when it comes to taking on responsibility. From a candidate's standpoint, if there is a void of responsibility, and they are the ones stepping into it to take control of it, that is a huge value-add to the company and makes things work so much smoother. As long as there is a healthy culture of encouraging people to take on responsibility, which will result in getting recognized for that  -  be it monetarily, or through some other means, there is a great amount of opportunity for people to take on ownership of things they want to become experts at. This could range from say things like Engineering services, increased stakeholder interaction, servicing Client needs, working with operational teams to make their lives easier - the list goes on and on. This is markedly different from larger, more bureaucratic organizations, whose definition of increased ownership could be very narrow in scope.\n\n- **Flexibility of opportunity you are sourcing for** - Be flexible in the way you represent or talk about the position in the market. At the end of the day, if you have a certain amount of budget allocated to the opening, and you have a couple of different needs that the team could benefit from, think a bit unconventionally about how you could fill that position. Lets say your team is backfilling a Senior Software Engineer position. You dont _have_ to backfill it with a Senior Software Engineer per se. You could open up roles (even in parallel) to source against comparable positions like Technical Lead, or Software Engineer and an Intern, or a fairly hands-on Engineering Manager. That opens up the talent you can have access to compared to if you boxed yourself into a specific role you were on the lookout for. Similarly, when you talk to candidates, gauge what their strengths and weaknesses are and tailor the opportunity based on those if you think the person is a good addition to the team. One thing I tell candidates is that its way more important we find the right person, than fill the wrong person for the \"right\" role.\n\n- **Make it personal (involve the Hiring Manager)** - We have found it immensely useful to have the Hiring Manager do the initial reachout and interview setup with candidates. While we could have our Recruiter do it, we have noticed a marked difference in candidate response rates when the Hiring Manager themselves reaches out. It makes the outreach that much more personal and meaningful to a candidate because they immediately have a direct line into the team that they could be joining.\n\nEnsuring you are hiring the right person for a role is _the_ most important part of growing a startup. You don't really understand this until you get a _wrong_ person into a role, and have to deal with the immense amount of turmoil and additional work that produces. Hiring might seem really tough, it might seem like the role has been open for too long, and there might be a temptation to \"just\" fill it, but make sure you don't fill it with the \"wrong\" candidate - where wrong could mean ignoring certain red flags, or overriding the majority opinion of your interview panel or if you found someone who was mediocre and you have misgivings about.\n\nHowever, if you find the right candidate, then waste absolutely no time to make sure you can close that candidate.",
      "code": "Hiring at a tech startup is a tough tough game. Even with huge supply in the market, due to the uncertainty in tech causing mass layoffs, there are several challenges trying to highlight top-tier talent into your company. Some of the challenges include\n\n- Standing out amongst the sea of other companies that people are looking at i.e. Name brand recognition\n- Competing against hyper inflated salaries that FAANG companies have promoted that has completely changed the lens through which candidates view compensation\n- Flakiness of candidates because of the number of offers that they are comparing/contrasting against\n\nHowever, if these are all challenges due to a company's small size, that size also presents a tremendous amount of opportunity. There are many other things to do like interview calibration that are required for a successful interview process, but I am focusing on the points that lend themselves more so to a small-sized organization.\n\n- **As much as the candidate is selling to you, you are selling to the candidate** - Have a clear outline of the unique value proposition of your company. There are 1000s of startups that a highly talented candidate has the ability to interview with and evaluate. Crisply articulating the mission of your company and the benefits that you provide to your employees, be it monetary, cultural or employee growth-related, can be the reason a candidate chooses your company over a FAANG or other startup.\n\n- **Unconventional interviewing methods to reduce touchpoints** - You don't have to follow the standard script followed by big companies. You could skip steps, add more people on the same round but reduce the number of rounds, introduce the candidate to executives to show the importance of the interview and many other techniques. Basically use the lack of red tape and bureaucracy in your small organization to your advantage.\n\n- **Speed, speed, speed** - I CANNOT overemphasize this point. If there is one point from this list that you should remember, it is this. There is nothing more impressive to a candidate when you are able to respond to them quickly, whatever the stage of the process they are in. Candidates are so used to being either ghosted by companies or being asked to wait for weeks, if not months, for the completion of the interview process. If you are able to blitz through the entire process from first touchpoint to extending an offer, in 1.5–2 weeks, it is absolutely mindblowing to candidates because it displays how quickly the organization could move when it comes to important things.\n\n- **Being thoughtfully scrappy** - Scrappiness is a great trait to have when it prevents people or organizations from overthinking the solution to a problem. Ensuring that you can be scrappy in the way you go through the process, and cut some corners to get to a great candidate in an efficient fashion can result in some amazing outcomes, but it is important to ensure that you are thoughtful about those corners you cut. Make sure people within the organization who are the decision makers, are in agreement with your interpretation of how the process plays out, and once they do, go all out.\n\n- **Treat your rejected candidates with empathy** - One of the worst things that can happen to a candidate after an interview, is that they get ghosted and never hear back from the company or that they are given a standardized template of rejection, with no real insight into why the process played out the way it did. This reeks of making rejections scalable, because bigger companies tend to go through so many candidates that they are unable to spend the time to think of the rejected candidates with empathy. On the other hand, as a smaller company you don't have that problem. If you have conducted debriefs with the interviewing panel, and had that discussion about why the candidate should be passed on, you already have all the reasoning behind why the team did not think the candidate was a good fit. I would highly advise you to collate that together in a way that would be perceived as constructive feedback to the candidate. Most importantly, after making the candidate aware that they have been rejected ask the candidate first if they would like to receive feedback, and if they do let them know your compiled thoughts. This builds a tremendous amount of goodwill while also sharpening your own ability to provide useful feedback.\n\n- **Access to top leadership to help sell the opportunity** - The Leadership team at a small company is always only a couple of degrees of separation away, or less. Use that to your advantage. If the candidate is unsure about something, or doesn't fully understand what the strategy of the company is or isnt fully sold on the company yet, ask the Leadership/Executive team to pitch in. They are strong advocates of the company and provide that full court press that is required to be able to allay any concerns, fears or questions that the candidate might have. This is not something big companies can rely in, and they might just throw in another Director or Managing Director into the mix. Seeing the CEO or CTO of a company come through to talk with you personally, can be a huge positive boost for the candidate.\n\n- **Limitless ownership and accountability** - When companies are smaller, the sky is the limit when it comes to taking on responsibility. From a candidate's standpoint, if there is a void of responsibility, and they are the ones stepping into it to take control of it, that is a huge value-add to the company and makes things work so much smoother. As long as there is a healthy culture of encouraging people to take on responsibility, which will result in getting recognized for that  -  be it monetarily, or through some other means, there is a great amount of opportunity for people to take on ownership of things they want to become experts at. This could range from say things like Engineering services, increased stakeholder interaction, servicing Client needs, working with operational teams to make their lives easier - the list goes on and on. This is markedly different from larger, more bureaucratic organizations, whose definition of increased ownership could be very narrow in scope.\n\n- **Flexibility of opportunity you are sourcing for** - Be flexible in the way you represent or talk about the position in the market. At the end of the day, if you have a certain amount of budget allocated to the opening, and you have a couple of different needs that the team could benefit from, think a bit unconventionally about how you could fill that position. Lets say your team is backfilling a Senior Software Engineer position. You dont _have_ to backfill it with a Senior Software Engineer per se. You could open up roles (even in parallel) to source against comparable positions like Technical Lead, or Software Engineer and an Intern, or a fairly hands-on Engineering Manager. That opens up the talent you can have access to compared to if you boxed yourself into a specific role you were on the lookout for. Similarly, when you talk to candidates, gauge what their strengths and weaknesses are and tailor the opportunity based on those if you think the person is a good addition to the team. One thing I tell candidates is that its way more important we find the right person, than fill the wrong person for the \"right\" role.\n\n- **Make it personal (involve the Hiring Manager)** - We have found it immensely useful to have the Hiring Manager do the initial reachout and interview setup with candidates. While we could have our Recruiter do it, we have noticed a marked difference in candidate response rates when the Hiring Manager themselves reaches out. It makes the outreach that much more personal and meaningful to a candidate because they immediately have a direct line into the team that they could be joining.\n\nEnsuring you are hiring the right person for a role is _the_ most important part of growing a startup. You don't really understand this until you get a _wrong_ person into a role, and have to deal with the immense amount of turmoil and additional work that produces. Hiring might seem really tough, it might seem like the role has been open for too long, and there might be a temptation to \"just\" fill it, but make sure you don't fill it with the \"wrong\" candidate - where wrong could mean ignoring certain red flags, or overriding the majority opinion of your interview panel or if you found someone who was mediocre and you have misgivings about.\n\nHowever, if you find the right candidate, then waste absolutely no time to make sure you can close that candidate."
    },
    "slug": "hire-the-best",
    "path": "posts/hire-the-best",
    "filePath": "hire-the-best.mdx",
    "toc": [],
    "readingTime": {
      "text": "8 min read",
      "minutes": 7.275,
      "time": 436500,
      "words": 1455
    },
    "structuredData": {
      "@context": "https://schema.org",
      "@type": "BlogPosting",
      "headline": "Hire the best, against all odds",
      "datePublished": "2024-02-19T00:00:00.000Z",
      "dateModified": "2024-02-19T00:00:00.000Z",
      "description": "The key to hiring great talent at a small startup",
      "image": "/static/images/hire.jpeg",
      "url": "https://arjunrao.co/posts/hire-the-best"
    }
  },
  {
    "title": "Introducing Hourly",
    "date": "2022-12-15T00:00:00.000Z",
    "tags": [
      "finance",
      "networth",
      "fire"
    ],
    "lastmod": undefined,
    "draft": false,
    "summary": "Knowing when to do a task yourself vs delegating it to someone",
    "images": [
      "/static/images/hourly.png"
    ],
    "authors": undefined,
    "layout": undefined,
    "bibliography": undefined,
    "canonicalUrl": undefined,
    "content": "## What is Hourly?\n\nIf you don't currently have an hourly rate you have set for yourself, you need a way to decide if you should do something on your own, or if you should outsource it to someone else. This is extremely important as it's a way to help you respect and prioritize your own time.\n\nFor exactly this reason, I built an app called \"Hourly\" (available [here](https://usehourly.netlify.app/)) to help you make that decision.\n\n\n## Why did I build this?\n\nOne of Naval's tweets stuck with me more than many of his others. It quantified what I have long believed in terms of balancing the pros and cons of doing something yourself instead of asking someone else to do it for you.\n\n> Set and enforce an aspirational hourly rate.<br/><br/>If fixing a problem will save less than your rate, ignore it.If outsourcing a task will cost less than your rate, outsource it.Get comfortable disappointing people whose expectations will eat your life up, one hour at a time.\n\n## How does Hourly work?\n\nA simple rule of thumb is that if a task is easy and is comparable in price, (between what it would cost you based on your hourly rate vs what it would cost you to pay a professional), you should just do it yourself.\n\nOn the other hand, if a task is difficult and your cost is less than 10x what you would pay the professional - thats right, 10x, then you should just give it to the professional to take care of.\n\nWhy 10x? This is a rough [\"Order of magnitude\"](https://en.wikipedia.org/wiki/Order_of_magnitude) rule of thumb that I use for myself, and is certainly up to your own discretion. My mental model is it is 5 parts for all the tools a professional has that is required for the job, 3 parts the skill and efficiency that person has based on the their years of experience and 2 parts the lack of stress for not having to do the job yourself.\n\n_Hourly doesn't track or store any of your data. All the data is processed client side, so your data is yours alone!_\n\n## Check us out!\n\nHaving an hourly rate for yourself helps you prioritize your time and do the things that you consider are the most important. Check out Hourly at https://usehourly.netlify.app/. If you have any feature requests or see something puzzling, please let me know on Twitter [@raoarjun](https://twitter.com/raoarjun)",
    "_id": "hourly.mdx",
    "_raw": {
      "flattenedPath": "hourly"
    },
    "body": {
      "raw": "## What is Hourly?\n\nIf you don't currently have an hourly rate you have set for yourself, you need a way to decide if you should do something on your own, or if you should outsource it to someone else. This is extremely important as it's a way to help you respect and prioritize your own time.\n\nFor exactly this reason, I built an app called \"Hourly\" (available [here](https://usehourly.netlify.app/)) to help you make that decision.\n\n\n## Why did I build this?\n\nOne of Naval's tweets stuck with me more than many of his others. It quantified what I have long believed in terms of balancing the pros and cons of doing something yourself instead of asking someone else to do it for you.\n\n> Set and enforce an aspirational hourly rate.<br/><br/>If fixing a problem will save less than your rate, ignore it.If outsourcing a task will cost less than your rate, outsource it.Get comfortable disappointing people whose expectations will eat your life up, one hour at a time.\n\n## How does Hourly work?\n\nA simple rule of thumb is that if a task is easy and is comparable in price, (between what it would cost you based on your hourly rate vs what it would cost you to pay a professional), you should just do it yourself.\n\nOn the other hand, if a task is difficult and your cost is less than 10x what you would pay the professional - thats right, 10x, then you should just give it to the professional to take care of.\n\nWhy 10x? This is a rough [\"Order of magnitude\"](https://en.wikipedia.org/wiki/Order_of_magnitude) rule of thumb that I use for myself, and is certainly up to your own discretion. My mental model is it is 5 parts for all the tools a professional has that is required for the job, 3 parts the skill and efficiency that person has based on the their years of experience and 2 parts the lack of stress for not having to do the job yourself.\n\n_Hourly doesn't track or store any of your data. All the data is processed client side, so your data is yours alone!_\n\n## Check us out!\n\nHaving an hourly rate for yourself helps you prioritize your time and do the things that you consider are the most important. Check out Hourly at https://usehourly.netlify.app/. If you have any feature requests or see something puzzling, please let me know on Twitter [@raoarjun](https://twitter.com/raoarjun)",
      "code": "## What is Hourly?\n\nIf you don't currently have an hourly rate you have set for yourself, you need a way to decide if you should do something on your own, or if you should outsource it to someone else. This is extremely important as it's a way to help you respect and prioritize your own time.\n\nFor exactly this reason, I built an app called \"Hourly\" (available [here](https://usehourly.netlify.app/)) to help you make that decision.\n\n\n## Why did I build this?\n\nOne of Naval's tweets stuck with me more than many of his others. It quantified what I have long believed in terms of balancing the pros and cons of doing something yourself instead of asking someone else to do it for you.\n\n> Set and enforce an aspirational hourly rate.<br/><br/>If fixing a problem will save less than your rate, ignore it.If outsourcing a task will cost less than your rate, outsource it.Get comfortable disappointing people whose expectations will eat your life up, one hour at a time.\n\n## How does Hourly work?\n\nA simple rule of thumb is that if a task is easy and is comparable in price, (between what it would cost you based on your hourly rate vs what it would cost you to pay a professional), you should just do it yourself.\n\nOn the other hand, if a task is difficult and your cost is less than 10x what you would pay the professional - thats right, 10x, then you should just give it to the professional to take care of.\n\nWhy 10x? This is a rough [\"Order of magnitude\"](https://en.wikipedia.org/wiki/Order_of_magnitude) rule of thumb that I use for myself, and is certainly up to your own discretion. My mental model is it is 5 parts for all the tools a professional has that is required for the job, 3 parts the skill and efficiency that person has based on the their years of experience and 2 parts the lack of stress for not having to do the job yourself.\n\n_Hourly doesn't track or store any of your data. All the data is processed client side, so your data is yours alone!_\n\n## Check us out!\n\nHaving an hourly rate for yourself helps you prioritize your time and do the things that you consider are the most important. Check out Hourly at https://usehourly.netlify.app/. If you have any feature requests or see something puzzling, please let me know on Twitter [@raoarjun](https://twitter.com/raoarjun)"
    },
    "slug": "hourly",
    "path": "posts/hourly",
    "filePath": "hourly.mdx",
    "toc": [],
    "readingTime": {
      "text": "2 min read",
      "minutes": 1.985,
      "time": 119100,
      "words": 397
    },
    "structuredData": {
      "@context": "https://schema.org",
      "@type": "BlogPosting",
      "headline": "Introducing Hourly",
      "datePublished": "2022-12-15T00:00:00.000Z",
      "dateModified": "2022-12-15T00:00:00.000Z",
      "description": "Knowing when to do a task yourself vs delegating it to someone",
      "image": "/static/images/hourly.png",
      "url": "https://arjunrao.co/posts/hourly"
    }
  },
  {
    "title": "Coming to America - An Immigrant's Perspective",
    "date": "2017-04-29T00:00:00.000Z",
    "tags": [
      "travel",
      "immigration",
      "america"
    ],
    "lastmod": undefined,
    "draft": false,
    "summary": "Why legal immigration to the United States sucks for Indians now",
    "images": undefined,
    "authors": undefined,
    "layout": undefined,
    "bibliography": undefined,
    "canonicalUrl": undefined,
    "content": "There is a lot of hubbub around immigration into the United States at the moment. With a slew of immigration orders and laws, fear, doubt and uncertainty have been struck into the hearts of all immigrants. Being an immigrant, let me tell you a story of how this has affected me personally and my fellow immigrants around me.\n\nI am Indian. I come from a land of over a billion people, so needless to say there are plenty of us, mildly putting. Everyone yearns to be unique and achieve success. That’s what brought me to the United States. These days I often wonder what exactly was the core reason that brought me here. There are several reasons to pick from and I’ll whittle it down to the core reason shortly.\n\n1. My mom visited the USA for the first time in 1994 when I was a little boy. My first memories of her return were a red colored fire truck she brought back for me and it was one of my favorite toys growing up.\n\n2. My aunt is the only close family I have here in the States and growing up, whenever she would come visit us, it would always be a great adventure to go pick her up from the International airport in Mumbai, India. That sense of excitement to pick someone up from the US, seemed to kindle an initial fascination with this country.\n\n3. In the 90’s there was a time when western television and film content made its way over to India. Shows like Knight Rider, Street Hawk, Ally McBeal were all hugely popular. For me, it was watching the NBA. Following Tim Duncan and David Robinson ( the human Twin Towers! ) of the San Antonio Spurs kept me hooked for years at end.\n\nThere were a whole bunch of reasons — many of which, now that I look back, were seemingly formative experiences in shaping who I am now. The core reason, however, was to come for Silicon Valley and the technology utopia that was the United States.\n\nWhen I was in 4th grade, I still have the distinct memory of being asked for the first time what I wanted to be. My reply was “I want to be a Computer Engineer”. I had no idea what that entailed and I have no real clue why I said that, but there it was. You could put on your stereotype hat and say something like “I mean you are Indian, what else would you have said?”. Jokes aside, while that moment was foundational, it was only the beginning of a long journey of me coming up to speed with the idea of Silicon Valley and earning the chops to be there.\n\nFast forward to today. I do not work nor have I worked in Silicon Valley. Yet. You can never rule out the possibility. I do, however, work in technology, so you can say the goal was partially achieved.\n\nHowever, the current climate certainly raises some doubts about the sheer state of being here. I’d like to highlight the top 3 concerns, most Indian immigrants, in my opinion, have about the United States at the moment —\n\n1. Everyone likes a sense of belonging; for immigrants, this is most notably quantified in the form of citizenship of a country. After leaving behind a homeland, let us consider the arduous process of becoming a U. S. citizen if you are Indian. Let’s say you came here for your Master’s Degree in Computer Science (this can really be any major but I decided to draw on my personal experience). That’s about 2 years on a visa known as F-1. To continue staying in the United States, you have to have a job; with an employer who is willing to sponsor you for your stay. Now let’s say, you get a job, you get on something called the H1-B visa, or the high-skilled immigrant work visa, for a period of 3 years. If your employer likes you, you can renew the H1-B for another period of 3 years- for a total of 6 years. There are no more extensions permitted after this. If you want to continue staying here, your employer must apply for your Green Card. For Indian citizens, the process of getting the Permanent Residency ( most commonly known as Green Card ) takes anywhere between 7–12 years, based on average wait times, although some estimates put it at a laughable 83 years. 5 more years and then you are a US citizen! Woohoo! So let us put that all in perspective — 8 years before you even apply for permanent residency, anywhere between 15–20 ( in total ) years to get your green card and 20–25 years ( again, in total ) to get the citizenship. That is bonkers! That is like half of your adult life waiting to be the citizen of a country.\n\n2. Another less known fact of not having a Green Card (gentle reminder; the one that takes 15–20 years from start to finish), is that you can’t NOT have a job and just decide to chill/take a gap year or something. You have to stay employed by an “E-verified” employer. You cannot start your own company and you cannot have any side income besides your own employer paying you. You can sneak your way around some of the legalese, but it’s all a big gray area. As a result of this long wait time, I, among others, have started looking at other countries such as Canada and Australia, which have very compelling immigration policies to help promote entrepreneurship.\n\n3. Another by-product of having to be on the H1-B is the restriction on foreign travel. Let me try explaining this conundrum. When you are given an H1 visa, you are just given the document ( for all intents and purposes ). Yes, you can legally work on the basis of that document, but you aren’t ACTUALLY in possession of the “visa”. To do that, you need to go back to your home country after having scheduled an appointment with the American Consulate. Let’s call this process “stamping” of the visa. So, essentially, to get your visa “stamped” you need to travel nearly 8000 miles after having been certified to receive the visa document in the first place. In addition to this, there is a chance ( albeit pretty slim, depending on the reputation of the company you are working for ) that you might be rejected for the visa when you go back for the “stamping”. If all of this sounds complicated and kind of ridiculous, it’s because it actually is. Coming back to the original statement on restriction on foreign travel; if you have your H1B visa but you haven’t gotten it stamped from your home country, you are not allowed to leave the USA to go on some foreign adventure. In order to do that, you have to first get your visa stamped for your H1-B duration and after that occurs, you are permitted to travel abroad. Indian citizens get an H1-B visa for a period of 3 years at a time which means that if you want to travel abroad you have to at least stamp your visa once during that period. It is even worse for Chinese nationals, who need to do it every year since they get the H1-B visa for 1 year at a time.\n   There is a multitude of other concerns such as an uptick (maybe perceived) in xenophobia, taxation without representation, leaving behind families thousands of miles away yada yada but the ones I wished to highlight were the immigration issues.\n\nFor me, personally, Silicon Valley is Silicon Valley for reasons that are too numerous to elaborate in this post. There are several other countries, like China, Australia and Canada, pouring in research and money to create an environment akin to the Valley. Maybe it will work, maybe it won’t but the fact that there are competitors in a global market is always a good thing for everyone involved, except a monopoly.\n\nThe immigrants I talk about in this post, choose to come to this country willingly, knowing the travails that lay in front of us. The purpose of this piece is to have a meaningful dialogue about what it means to attract and retain high-skilled/talented immigrants in a country that prides itself for being the bedrock of modern immigration. If the United States does not take strong and constructive steps in the right direction, it could very well lose its edge on the world stage.",
    "_id": "immigrant.mdx",
    "_raw": {
      "flattenedPath": "immigrant"
    },
    "body": {
      "raw": "There is a lot of hubbub around immigration into the United States at the moment. With a slew of immigration orders and laws, fear, doubt and uncertainty have been struck into the hearts of all immigrants. Being an immigrant, let me tell you a story of how this has affected me personally and my fellow immigrants around me.\n\nI am Indian. I come from a land of over a billion people, so needless to say there are plenty of us, mildly putting. Everyone yearns to be unique and achieve success. That’s what brought me to the United States. These days I often wonder what exactly was the core reason that brought me here. There are several reasons to pick from and I’ll whittle it down to the core reason shortly.\n\n1. My mom visited the USA for the first time in 1994 when I was a little boy. My first memories of her return were a red colored fire truck she brought back for me and it was one of my favorite toys growing up.\n\n2. My aunt is the only close family I have here in the States and growing up, whenever she would come visit us, it would always be a great adventure to go pick her up from the International airport in Mumbai, India. That sense of excitement to pick someone up from the US, seemed to kindle an initial fascination with this country.\n\n3. In the 90’s there was a time when western television and film content made its way over to India. Shows like Knight Rider, Street Hawk, Ally McBeal were all hugely popular. For me, it was watching the NBA. Following Tim Duncan and David Robinson ( the human Twin Towers! ) of the San Antonio Spurs kept me hooked for years at end.\n\nThere were a whole bunch of reasons — many of which, now that I look back, were seemingly formative experiences in shaping who I am now. The core reason, however, was to come for Silicon Valley and the technology utopia that was the United States.\n\nWhen I was in 4th grade, I still have the distinct memory of being asked for the first time what I wanted to be. My reply was “I want to be a Computer Engineer”. I had no idea what that entailed and I have no real clue why I said that, but there it was. You could put on your stereotype hat and say something like “I mean you are Indian, what else would you have said?”. Jokes aside, while that moment was foundational, it was only the beginning of a long journey of me coming up to speed with the idea of Silicon Valley and earning the chops to be there.\n\nFast forward to today. I do not work nor have I worked in Silicon Valley. Yet. You can never rule out the possibility. I do, however, work in technology, so you can say the goal was partially achieved.\n\nHowever, the current climate certainly raises some doubts about the sheer state of being here. I’d like to highlight the top 3 concerns, most Indian immigrants, in my opinion, have about the United States at the moment —\n\n1. Everyone likes a sense of belonging; for immigrants, this is most notably quantified in the form of citizenship of a country. After leaving behind a homeland, let us consider the arduous process of becoming a U. S. citizen if you are Indian. Let’s say you came here for your Master’s Degree in Computer Science (this can really be any major but I decided to draw on my personal experience). That’s about 2 years on a visa known as F-1. To continue staying in the United States, you have to have a job; with an employer who is willing to sponsor you for your stay. Now let’s say, you get a job, you get on something called the H1-B visa, or the high-skilled immigrant work visa, for a period of 3 years. If your employer likes you, you can renew the H1-B for another period of 3 years- for a total of 6 years. There are no more extensions permitted after this. If you want to continue staying here, your employer must apply for your Green Card. For Indian citizens, the process of getting the Permanent Residency ( most commonly known as Green Card ) takes anywhere between 7–12 years, based on average wait times, although some estimates put it at a laughable 83 years. 5 more years and then you are a US citizen! Woohoo! So let us put that all in perspective — 8 years before you even apply for permanent residency, anywhere between 15–20 ( in total ) years to get your green card and 20–25 years ( again, in total ) to get the citizenship. That is bonkers! That is like half of your adult life waiting to be the citizen of a country.\n\n2. Another less known fact of not having a Green Card (gentle reminder; the one that takes 15–20 years from start to finish), is that you can’t NOT have a job and just decide to chill/take a gap year or something. You have to stay employed by an “E-verified” employer. You cannot start your own company and you cannot have any side income besides your own employer paying you. You can sneak your way around some of the legalese, but it’s all a big gray area. As a result of this long wait time, I, among others, have started looking at other countries such as Canada and Australia, which have very compelling immigration policies to help promote entrepreneurship.\n\n3. Another by-product of having to be on the H1-B is the restriction on foreign travel. Let me try explaining this conundrum. When you are given an H1 visa, you are just given the document ( for all intents and purposes ). Yes, you can legally work on the basis of that document, but you aren’t ACTUALLY in possession of the “visa”. To do that, you need to go back to your home country after having scheduled an appointment with the American Consulate. Let’s call this process “stamping” of the visa. So, essentially, to get your visa “stamped” you need to travel nearly 8000 miles after having been certified to receive the visa document in the first place. In addition to this, there is a chance ( albeit pretty slim, depending on the reputation of the company you are working for ) that you might be rejected for the visa when you go back for the “stamping”. If all of this sounds complicated and kind of ridiculous, it’s because it actually is. Coming back to the original statement on restriction on foreign travel; if you have your H1B visa but you haven’t gotten it stamped from your home country, you are not allowed to leave the USA to go on some foreign adventure. In order to do that, you have to first get your visa stamped for your H1-B duration and after that occurs, you are permitted to travel abroad. Indian citizens get an H1-B visa for a period of 3 years at a time which means that if you want to travel abroad you have to at least stamp your visa once during that period. It is even worse for Chinese nationals, who need to do it every year since they get the H1-B visa for 1 year at a time.\n   There is a multitude of other concerns such as an uptick (maybe perceived) in xenophobia, taxation without representation, leaving behind families thousands of miles away yada yada but the ones I wished to highlight were the immigration issues.\n\nFor me, personally, Silicon Valley is Silicon Valley for reasons that are too numerous to elaborate in this post. There are several other countries, like China, Australia and Canada, pouring in research and money to create an environment akin to the Valley. Maybe it will work, maybe it won’t but the fact that there are competitors in a global market is always a good thing for everyone involved, except a monopoly.\n\nThe immigrants I talk about in this post, choose to come to this country willingly, knowing the travails that lay in front of us. The purpose of this piece is to have a meaningful dialogue about what it means to attract and retain high-skilled/talented immigrants in a country that prides itself for being the bedrock of modern immigration. If the United States does not take strong and constructive steps in the right direction, it could very well lose its edge on the world stage.",
      "code": "There is a lot of hubbub around immigration into the United States at the moment. With a slew of immigration orders and laws, fear, doubt and uncertainty have been struck into the hearts of all immigrants. Being an immigrant, let me tell you a story of how this has affected me personally and my fellow immigrants around me.\n\nI am Indian. I come from a land of over a billion people, so needless to say there are plenty of us, mildly putting. Everyone yearns to be unique and achieve success. That’s what brought me to the United States. These days I often wonder what exactly was the core reason that brought me here. There are several reasons to pick from and I’ll whittle it down to the core reason shortly.\n\n1. My mom visited the USA for the first time in 1994 when I was a little boy. My first memories of her return were a red colored fire truck she brought back for me and it was one of my favorite toys growing up.\n\n2. My aunt is the only close family I have here in the States and growing up, whenever she would come visit us, it would always be a great adventure to go pick her up from the International airport in Mumbai, India. That sense of excitement to pick someone up from the US, seemed to kindle an initial fascination with this country.\n\n3. In the 90’s there was a time when western television and film content made its way over to India. Shows like Knight Rider, Street Hawk, Ally McBeal were all hugely popular. For me, it was watching the NBA. Following Tim Duncan and David Robinson ( the human Twin Towers! ) of the San Antonio Spurs kept me hooked for years at end.\n\nThere were a whole bunch of reasons — many of which, now that I look back, were seemingly formative experiences in shaping who I am now. The core reason, however, was to come for Silicon Valley and the technology utopia that was the United States.\n\nWhen I was in 4th grade, I still have the distinct memory of being asked for the first time what I wanted to be. My reply was “I want to be a Computer Engineer”. I had no idea what that entailed and I have no real clue why I said that, but there it was. You could put on your stereotype hat and say something like “I mean you are Indian, what else would you have said?”. Jokes aside, while that moment was foundational, it was only the beginning of a long journey of me coming up to speed with the idea of Silicon Valley and earning the chops to be there.\n\nFast forward to today. I do not work nor have I worked in Silicon Valley. Yet. You can never rule out the possibility. I do, however, work in technology, so you can say the goal was partially achieved.\n\nHowever, the current climate certainly raises some doubts about the sheer state of being here. I’d like to highlight the top 3 concerns, most Indian immigrants, in my opinion, have about the United States at the moment —\n\n1. Everyone likes a sense of belonging; for immigrants, this is most notably quantified in the form of citizenship of a country. After leaving behind a homeland, let us consider the arduous process of becoming a U. S. citizen if you are Indian. Let’s say you came here for your Master’s Degree in Computer Science (this can really be any major but I decided to draw on my personal experience). That’s about 2 years on a visa known as F-1. To continue staying in the United States, you have to have a job; with an employer who is willing to sponsor you for your stay. Now let’s say, you get a job, you get on something called the H1-B visa, or the high-skilled immigrant work visa, for a period of 3 years. If your employer likes you, you can renew the H1-B for another period of 3 years- for a total of 6 years. There are no more extensions permitted after this. If you want to continue staying here, your employer must apply for your Green Card. For Indian citizens, the process of getting the Permanent Residency ( most commonly known as Green Card ) takes anywhere between 7–12 years, based on average wait times, although some estimates put it at a laughable 83 years. 5 more years and then you are a US citizen! Woohoo! So let us put that all in perspective — 8 years before you even apply for permanent residency, anywhere between 15–20 ( in total ) years to get your green card and 20–25 years ( again, in total ) to get the citizenship. That is bonkers! That is like half of your adult life waiting to be the citizen of a country.\n\n2. Another less known fact of not having a Green Card (gentle reminder; the one that takes 15–20 years from start to finish), is that you can’t NOT have a job and just decide to chill/take a gap year or something. You have to stay employed by an “E-verified” employer. You cannot start your own company and you cannot have any side income besides your own employer paying you. You can sneak your way around some of the legalese, but it’s all a big gray area. As a result of this long wait time, I, among others, have started looking at other countries such as Canada and Australia, which have very compelling immigration policies to help promote entrepreneurship.\n\n3. Another by-product of having to be on the H1-B is the restriction on foreign travel. Let me try explaining this conundrum. When you are given an H1 visa, you are just given the document ( for all intents and purposes ). Yes, you can legally work on the basis of that document, but you aren’t ACTUALLY in possession of the “visa”. To do that, you need to go back to your home country after having scheduled an appointment with the American Consulate. Let’s call this process “stamping” of the visa. So, essentially, to get your visa “stamped” you need to travel nearly 8000 miles after having been certified to receive the visa document in the first place. In addition to this, there is a chance ( albeit pretty slim, depending on the reputation of the company you are working for ) that you might be rejected for the visa when you go back for the “stamping”. If all of this sounds complicated and kind of ridiculous, it’s because it actually is. Coming back to the original statement on restriction on foreign travel; if you have your H1B visa but you haven’t gotten it stamped from your home country, you are not allowed to leave the USA to go on some foreign adventure. In order to do that, you have to first get your visa stamped for your H1-B duration and after that occurs, you are permitted to travel abroad. Indian citizens get an H1-B visa for a period of 3 years at a time which means that if you want to travel abroad you have to at least stamp your visa once during that period. It is even worse for Chinese nationals, who need to do it every year since they get the H1-B visa for 1 year at a time.\n   There is a multitude of other concerns such as an uptick (maybe perceived) in xenophobia, taxation without representation, leaving behind families thousands of miles away yada yada but the ones I wished to highlight were the immigration issues.\n\nFor me, personally, Silicon Valley is Silicon Valley for reasons that are too numerous to elaborate in this post. There are several other countries, like China, Australia and Canada, pouring in research and money to create an environment akin to the Valley. Maybe it will work, maybe it won’t but the fact that there are competitors in a global market is always a good thing for everyone involved, except a monopoly.\n\nThe immigrants I talk about in this post, choose to come to this country willingly, knowing the travails that lay in front of us. The purpose of this piece is to have a meaningful dialogue about what it means to attract and retain high-skilled/talented immigrants in a country that prides itself for being the bedrock of modern immigration. If the United States does not take strong and constructive steps in the right direction, it could very well lose its edge on the world stage."
    },
    "slug": "immigrant",
    "path": "posts/immigrant",
    "filePath": "immigrant.mdx",
    "toc": [],
    "readingTime": {
      "text": "8 min read",
      "minutes": 7.15,
      "time": 429000,
      "words": 1430
    },
    "structuredData": {
      "@context": "https://schema.org",
      "@type": "BlogPosting",
      "headline": "Coming to America - An Immigrant's Perspective",
      "datePublished": "2017-04-29T00:00:00.000Z",
      "dateModified": "2017-04-29T00:00:00.000Z",
      "description": "Why legal immigration to the United States sucks for Indians now",
      "image": "/static/images/twitter-card.png",
      "url": "https://arjunrao.co/posts/immigrant"
    }
  },
  {
    "title": "Is it intimidating to work with people smarter than you?",
    "date": "2020-07-18T00:00:00.000Z",
    "tags": [
      "growth",
      "work"
    ],
    "lastmod": undefined,
    "draft": false,
    "summary": "How to reframe feeling imposter syndrome",
    "images": undefined,
    "authors": undefined,
    "layout": undefined,
    "bibliography": undefined,
    "canonicalUrl": undefined,
    "content": "I was recently on a panel with [COOP](https://coopcareers.org/) which is an organization that is building a diverse movement of upwardly mobile college grads overcoming underemployment through digital skills and peer connections. It was a fantastic experience, and the students who were part of it, were awesome to interact with. During this panel, I was asked a question -\n\n> Was it ever intimidating to work with the enormous amount of talent that you have come across throughout your career?\n\nYes. There is no way around it, and its not even a thing in the past. If you are honest with yourself, then the unequivocal answer is `yes`. If people say otherwise they are either -\n\n- Not being honest\n- Too proud to admit that\n- Not challenging themselves enough to be in an environment which has other smart people\n\nSome of the reasons that I think have accentuated my feeling of being daunted include -\n\n- Being an immigrant, which itself comes with a bunch of baggage\n- Having imposter syndrome\n- Being afraid of looking stupid in front of peers or colleagues\n- Genuinely not having knowledge in areas that are being talked about\n\nI believe that there are tremendous benefits of being intimidated or surrounded by people who are _much_ smarter than you. In my opinion, most learning occurs at the cusp of discomfort. If you are early in your career, it could be your manager/peers who are challenging or asking you to do certain things you are unfamiliar with. If you are a more senior veteran, it could be your peers/reports, who are challenging or refuting your thoughts but -\n\n- If you frame it right, it can lead to non-linear gains over time\n- You want to surround yourself with people smarter than you because you will never have all the answers, and you need to be able to learn from others\n- You want people to disagree with you for the right reasons. As you get into managerial positions, it can get very easy for an opinion you voice to be interpreted as a task/order. You need people to call you out on your BS if you haven’t fully thought it through, or you have formed an opinion that is not using important inputs that should have been considered.\n- Being in an intellectually challenging environment helps you hone your opinions/thoughts. Every time I have taught or mentored students or people, I have always found myself questioning the very basics of my beliefs, using some form of Socratic method. You learn more as a teacher because you always question “why”. I believe that having these very smart people around you helps bring out the same kind of process.\n\nBasically what I am saying is, there is _always_ someone smarter than you in the room, and rather than feeling trepidation, embrace that feeling and use that as a resource to make yourself better.",
    "_id": "imposter.mdx",
    "_raw": {
      "flattenedPath": "imposter"
    },
    "body": {
      "raw": "I was recently on a panel with [COOP](https://coopcareers.org/) which is an organization that is building a diverse movement of upwardly mobile college grads overcoming underemployment through digital skills and peer connections. It was a fantastic experience, and the students who were part of it, were awesome to interact with. During this panel, I was asked a question -\n\n> Was it ever intimidating to work with the enormous amount of talent that you have come across throughout your career?\n\nYes. There is no way around it, and its not even a thing in the past. If you are honest with yourself, then the unequivocal answer is `yes`. If people say otherwise they are either -\n\n- Not being honest\n- Too proud to admit that\n- Not challenging themselves enough to be in an environment which has other smart people\n\nSome of the reasons that I think have accentuated my feeling of being daunted include -\n\n- Being an immigrant, which itself comes with a bunch of baggage\n- Having imposter syndrome\n- Being afraid of looking stupid in front of peers or colleagues\n- Genuinely not having knowledge in areas that are being talked about\n\nI believe that there are tremendous benefits of being intimidated or surrounded by people who are _much_ smarter than you. In my opinion, most learning occurs at the cusp of discomfort. If you are early in your career, it could be your manager/peers who are challenging or asking you to do certain things you are unfamiliar with. If you are a more senior veteran, it could be your peers/reports, who are challenging or refuting your thoughts but -\n\n- If you frame it right, it can lead to non-linear gains over time\n- You want to surround yourself with people smarter than you because you will never have all the answers, and you need to be able to learn from others\n- You want people to disagree with you for the right reasons. As you get into managerial positions, it can get very easy for an opinion you voice to be interpreted as a task/order. You need people to call you out on your BS if you haven’t fully thought it through, or you have formed an opinion that is not using important inputs that should have been considered.\n- Being in an intellectually challenging environment helps you hone your opinions/thoughts. Every time I have taught or mentored students or people, I have always found myself questioning the very basics of my beliefs, using some form of Socratic method. You learn more as a teacher because you always question “why”. I believe that having these very smart people around you helps bring out the same kind of process.\n\nBasically what I am saying is, there is _always_ someone smarter than you in the room, and rather than feeling trepidation, embrace that feeling and use that as a resource to make yourself better.",
      "code": "I was recently on a panel with [COOP](https://coopcareers.org/) which is an organization that is building a diverse movement of upwardly mobile college grads overcoming underemployment through digital skills and peer connections. It was a fantastic experience, and the students who were part of it, were awesome to interact with. During this panel, I was asked a question -\n\n> Was it ever intimidating to work with the enormous amount of talent that you have come across throughout your career?\n\nYes. There is no way around it, and its not even a thing in the past. If you are honest with yourself, then the unequivocal answer is `yes`. If people say otherwise they are either -\n\n- Not being honest\n- Too proud to admit that\n- Not challenging themselves enough to be in an environment which has other smart people\n\nSome of the reasons that I think have accentuated my feeling of being daunted include -\n\n- Being an immigrant, which itself comes with a bunch of baggage\n- Having imposter syndrome\n- Being afraid of looking stupid in front of peers or colleagues\n- Genuinely not having knowledge in areas that are being talked about\n\nI believe that there are tremendous benefits of being intimidated or surrounded by people who are _much_ smarter than you. In my opinion, most learning occurs at the cusp of discomfort. If you are early in your career, it could be your manager/peers who are challenging or asking you to do certain things you are unfamiliar with. If you are a more senior veteran, it could be your peers/reports, who are challenging or refuting your thoughts but -\n\n- If you frame it right, it can lead to non-linear gains over time\n- You want to surround yourself with people smarter than you because you will never have all the answers, and you need to be able to learn from others\n- You want people to disagree with you for the right reasons. As you get into managerial positions, it can get very easy for an opinion you voice to be interpreted as a task/order. You need people to call you out on your BS if you haven’t fully thought it through, or you have formed an opinion that is not using important inputs that should have been considered.\n- Being in an intellectually challenging environment helps you hone your opinions/thoughts. Every time I have taught or mentored students or people, I have always found myself questioning the very basics of my beliefs, using some form of Socratic method. You learn more as a teacher because you always question “why”. I believe that having these very smart people around you helps bring out the same kind of process.\n\nBasically what I am saying is, there is _always_ someone smarter than you in the room, and rather than feeling trepidation, embrace that feeling and use that as a resource to make yourself better."
    },
    "slug": "imposter",
    "path": "posts/imposter",
    "filePath": "imposter.mdx",
    "toc": [],
    "readingTime": {
      "text": "3 min read",
      "minutes": 2.44,
      "time": 146400,
      "words": 488
    },
    "structuredData": {
      "@context": "https://schema.org",
      "@type": "BlogPosting",
      "headline": "Is it intimidating to work with people smarter than you?",
      "datePublished": "2020-07-18T00:00:00.000Z",
      "dateModified": "2020-07-18T00:00:00.000Z",
      "description": "How to reframe feeling imposter syndrome",
      "image": "/static/images/twitter-card.png",
      "url": "https://arjunrao.co/posts/imposter"
    }
  },
  {
    "title": "A dozen (or so) learnings from 15 years of software incident management",
    "date": "2024-04-17T00:00:00.000Z",
    "tags": [
      "leadership",
      "incidents",
      "engineering"
    ],
    "lastmod": undefined,
    "draft": false,
    "summary": "How to get great at a solving a problem you never want to encounter",
    "images": [
      "/static/images/incident_frustrated.webp"
    ],
    "authors": undefined,
    "layout": undefined,
    "bibliography": undefined,
    "canonicalUrl": undefined,
    "content": "As a software engineer, dealing with incidents sucks. Getting that on-call page at 3am on a Saturday morning? It can be dread-inducing, soul sucking and altogether an abhorrent episode. If it happens frequently at your workplace, it can quite literally induce PTSD. \n\n\nUnfortunately this is a part and parcel of the software zeitgeist. If anything, these are the fires through which real engineering gets forged. These incidents teach you how to architect hardened systems, and in many cases, how not to. \n\nThis article goes into 2 aspects of how to deal with software incidents \n\n- 🛠️ The practices that one needs to instill in their software platform and teams to prevent and learn from these experiences.\n- 🧘 The attitude one needs to have to be resilient, and come away from these experiences not only unscathed, but with more than they went in.\n\nThe topics we will hit up are — \n\n1. [Automate your systems as much as you can](#automate-your-systems-as-much-as-you-can)\n1. [Tracking leading vs lagging indicators](#tracking-leading-vs-lagging-indicators)\n1. [“Actionable” Alerts should be self evident](#actionable-alerts-should-be-self-evident)\n1. [Establish clear call chains and escalation paths](#establish-clear-call-chains-and-escalation-paths)\n1. [Empower front lines to make big decisions](#empower-front-lines-to-make-big-decisions)\n1. [Not all incidents are created equal](#not-all-incidents-are-created-equal)\n1. [Resolve first, ask questions later](#resolve-first-ask-questions-later)\n1. [Make sure one person is in charge](#make-sure-one-person-is-in-charge)\n1. [Communicate clearly and frequently](#communicate-clearly-and-frequently)\n1. [Blameless post mortems are crucial](#blameless-post-mortems-are-crucial)\n1. [Followups to the post mortems are crucial](#followups-to-the-post-mortems-are-crucial)\n1. [Incidents are not bad as long as MTTD is low](#incidents-are-not-bad-as-long-as-mttd-is-low)\n1. [Humor is the great equalizer](#humor-is-the-great-equalizer)\n\nLet us dive in for some details! \n\n## Automate your systems as much as you can\nYou really want to minimize how many incidents you learn either through your customers or through some severe accounting discrepancy days or weeks from when the incident started. While “automation” is an overused word in engineering, this is one of those areas where you truly want to find the right balance of signal to noise ratio and ensure that you and your team receive alerts without needing any human intervention. If there are too many things to pick from, go super high level. What is the highest level metric you could pick? The one if the component systems fail to work as expected, will deviate from the norm? This could be tracking revenue flowing through the platform (for an e-commerce, financial or $-based platform), or number of current active users (for social media platforms). If you see the numbers crater or drop by a standard deviation or two, immediately alert the dev team. Focusing the first (or most important) alerts on the pulse of the business or the core user experience, is going to be a great metric to monitor. As you get more sophisticated and understand the system better, you can start to go deeper down the stack from an observability standpoint.\n\n![](/static/images/incident_green-graph.webp)\n\n## **Tracking leading vs lagging indicators**\nLeading indicators are predictive in nature and are likely to point to an issue about to happen whereas lagging indicators are post-hoc and are representative of the aftermath once the issue is well in progress. If you can tap into the leading indicators (such as say “Session duration” starting to go down) in addition to or in place of lagging indicators (such as say “number of orders placed plummeting”) you can likely avert something that is pretty catastrophic. \n\n![](/static/images/incident_alert.webp)\n\n## “Actionable” Alerts should be self evident\nYour alerts must be self-evident so that it is crystal clear what next steps to take when they get fired. Whether it is to ascertain the severity of the issue, or to troubleshoot the incident, or remediate the issue, there should be enough details associated with the alert. You want to ensure it doesn’t require a lot of upfront discussion to determine what to do with the alert. You could stick these details in the content of the alert itself, or if its fairly verbose, you could link out to a runbook(s) that the team maintains for these type of issues. \n\n![](/static/images/incident_alert_action.webp)\n\n## Establish clear call chains and escalation paths\nHave a clear outline of what happens when an alert fires, including who it gets routed to based on things like service ownership, timezone awareness etc is critical to ensure rapid response. Beyond that immediate first line of defense, it is also equally critical to ensure there is clarity about how and who to, the incident responder could escalate the incident. Often times if the issue is complex or far bigger in scope than one person can handle, it might be necessary to pull in more senior folks (or multiple people on the team) as well as cross-functional stakeholders. Making all of that easily accessible through tooling (like PagerDuty, OpsGenie) or crystal clear documentation (run books, wiki pages, repo READMEs), might be the difference between a catastrophic incident or a nothing-burger. \n\n![](/static/images/incident_callchain.webp)\n\n## Empower front lines to make big decisions\nWhile you need clear escalation paths, you don’t want that to be the default response. You must empower the first responders to be able to take real action to stem the bleeding or make on-the-spot decisions for remediation, without needing to consult senior management. This is both good for the company in terms of limiting fallout as well as for the employees who are giving a high responsibility that they are trusted to make big decisions. Reduce the red tape and increase the agency of individuals. \n\n## Not all incidents are created equal\nAlong with things like call chains and escalation paths, one other piece of collateral that is important is an incident priority scale. This is typically a quick reference for the first responder or the incident commander. It helps them quickly identify what the severity of the incident is and label it as such because it might warrant different grades of responses. Differentiating between critical incidents (like system outages or financial data corruption) and minor issues (such as color palette glitches) is essential for responders to avoid false alarms. It also ensures the team’s response remains effective and focused.\n\n![](/static/images/incident_priority.webp)\n\n## Resolve first, ask questions later\nWithout question, one of the most important things to do is to resolve the incident as quickly as possible. You do not want to spend time philosophizing why something happened or how it could have been prevented, while the incident is underway. You can reserve that for the post mortem. For the moment, just ruthlessly focus on resolving the incident and ask the tough questions later. \n\n## Make sure one person is in charge\nSometimes incidents can get too big. They touch too many services, they span multiple business domains, or they are just really impactful in terms of revenue or reputation. Thats when it is absolutely crucial that there is one person appointed to “traffic cop” the entire incident. At Place Exchange, we have instituted “Incident Commanders” who are a small group of people who are trained in complex incident response. The reason it is so important to have this kind of a role, is because when there are multiple parties involved, someone needs to be directing the traffic. Oftentimes engineers will start going down rabbit holes about the complexity of the problem or trying to understand how to solve the problem. The role of the Incident Commander is to keep the focus of the group on rapid incident resolution. They make sure that everyone has a bias to action and while side investigations might be important, ensuring forward momentum is even more important. They are also responsible for ensuring that there is clear and constant communication with both internal and external stakeholders and partners. Incident commanders typically will start a synchronous line of voice communication, like a Slack huddle or a Google Meet meeting. This ensures that the folks crucial to the resolution of the incident are in constant contact. It is amazing how effective this small thing is compared to just allowing people to solve things async using chat. Incident commanders are also responsible for ensuring there is clear delegation for tasks that need to get done and make sure there is accountability for getting back responses or outcomes for those tasks. As they say, if you ask 2 people to feed a horse, the horse dies. An incident commander prevents that from happening and ultimately is responsible for the swift resolution of the incident. \n\n![](/static/images/incident_traffic_cop.webp)\n\n## Communicate clearly and frequently\nPeople will often forgive their favorite app or software down, if they are being kept apprised of how the team is working hard at resolving the incident. Trying to keep things hidden either because you don’t feel you have a complete handle on the incident, or you and your team feel embarrassed about it, are no reasons to stop the communication from flowing outwards. Make sure the communication is concise, frequent and transparent to both your internal and external partners as that will help build goodwill.\n\n![](/static/images/incident_communication.webp)\n\n## Blameless post mortems are crucial\nPost mortems or post-incident retrospectives are important to build a culture of learning and they absolutely must be blameless. Be critical of the process not the person. No one is harder on themselves than the person(s) who might have caused this and you gain nothing from flagellating them in public. If anything, all research suggests that you actually lose by doing this. The folks at Etsy are much better at talking about it, so go read https://www.etsy.com/codeascraft/blameless-postmortems if you want to learn more. \n\n\n![](/static/images/incident_resolution.webp)\n\n## Followups to the post mortems are crucial\nWhile conducting post mortems by themselves are important to build awareness and the feedback loops to learn from these incidents, the action items that are discussed to prevent these from happening in the future, are maybe more important? If the group has identified a set of gaps or vulnerabilities in the system, it is super important that there is focus and attention to resolving them in a timely manner to prevent the same issue from happening again. Its hard to prevent incidents from happening, and that is generally a tough conversation with your business and customers. But if the same incident happens over and over again, now that is both way harder to defend and indicates a severe problem in the health of and skillsmanship of the team. \n\n## Incidents are not bad as long as MTTD is low\nEverybody gets it. Even the business people get it. Building software is HARD and in a world where all of our software has 100s of 1000s of dependencies, where the fault lines might crack is impossible to predict. Shit will hit the fan and it is OK. We can’t prevent incidents from happening. However, what really helps is to make sure that the MTTD for your incidents is really low. Mean Time to Detect (MTTD) is a key performance indicator (KPI) that measures the average time it takes for an organization to identify an incident or security threat. It is hard to generalize, given the business domain, severity of impact etc, but if you are able to reduce your MTTD to seconds to minutes you are likely going to be able to significantly reduce the impact of an incident versus say it was hours to days (let alone weeks or months, which unfortunately is entirely possible).\n\n![](/static/images/incident_mttd.webp)\n\n## Humor is the great equalizer\nAll of this is so SERIOUS! Money getting lost! Customers having a terrible experience! However, in the midst of it all, I have found it to be critical to have a sense of humor. We shouldn’t forget that everyone is a human in this process and is going through varying degrees of stress. Injecting doses of humor at appropriate junctures helps relieve some of that pressure. It builds a sense of camaraderie that makes the team feel like they are in it together rather than they are off on an island in hell.\n\nThat’s a wrap. Thanks for reading! \n\n---\n\n⭐ If you like this type of content, be sure to follow me or subscribe to https://a1engineering.beehiiv.com/subscribe! ⭐",
    "_id": "incidents.mdx",
    "_raw": {
      "flattenedPath": "incidents"
    },
    "body": {
      "raw": "As a software engineer, dealing with incidents sucks. Getting that on-call page at 3am on a Saturday morning? It can be dread-inducing, soul sucking and altogether an abhorrent episode. If it happens frequently at your workplace, it can quite literally induce PTSD. \n\n\nUnfortunately this is a part and parcel of the software zeitgeist. If anything, these are the fires through which real engineering gets forged. These incidents teach you how to architect hardened systems, and in many cases, how not to. \n\nThis article goes into 2 aspects of how to deal with software incidents \n\n- 🛠️ The practices that one needs to instill in their software platform and teams to prevent and learn from these experiences.\n- 🧘 The attitude one needs to have to be resilient, and come away from these experiences not only unscathed, but with more than they went in.\n\nThe topics we will hit up are — \n\n1. [Automate your systems as much as you can](#automate-your-systems-as-much-as-you-can)\n1. [Tracking leading vs lagging indicators](#tracking-leading-vs-lagging-indicators)\n1. [“Actionable” Alerts should be self evident](#actionable-alerts-should-be-self-evident)\n1. [Establish clear call chains and escalation paths](#establish-clear-call-chains-and-escalation-paths)\n1. [Empower front lines to make big decisions](#empower-front-lines-to-make-big-decisions)\n1. [Not all incidents are created equal](#not-all-incidents-are-created-equal)\n1. [Resolve first, ask questions later](#resolve-first-ask-questions-later)\n1. [Make sure one person is in charge](#make-sure-one-person-is-in-charge)\n1. [Communicate clearly and frequently](#communicate-clearly-and-frequently)\n1. [Blameless post mortems are crucial](#blameless-post-mortems-are-crucial)\n1. [Followups to the post mortems are crucial](#followups-to-the-post-mortems-are-crucial)\n1. [Incidents are not bad as long as MTTD is low](#incidents-are-not-bad-as-long-as-mttd-is-low)\n1. [Humor is the great equalizer](#humor-is-the-great-equalizer)\n\nLet us dive in for some details! \n\n## Automate your systems as much as you can\nYou really want to minimize how many incidents you learn either through your customers or through some severe accounting discrepancy days or weeks from when the incident started. While “automation” is an overused word in engineering, this is one of those areas where you truly want to find the right balance of signal to noise ratio and ensure that you and your team receive alerts without needing any human intervention. If there are too many things to pick from, go super high level. What is the highest level metric you could pick? The one if the component systems fail to work as expected, will deviate from the norm? This could be tracking revenue flowing through the platform (for an e-commerce, financial or $-based platform), or number of current active users (for social media platforms). If you see the numbers crater or drop by a standard deviation or two, immediately alert the dev team. Focusing the first (or most important) alerts on the pulse of the business or the core user experience, is going to be a great metric to monitor. As you get more sophisticated and understand the system better, you can start to go deeper down the stack from an observability standpoint.\n\n![](/static/images/incident_green-graph.webp)\n\n## **Tracking leading vs lagging indicators**\nLeading indicators are predictive in nature and are likely to point to an issue about to happen whereas lagging indicators are post-hoc and are representative of the aftermath once the issue is well in progress. If you can tap into the leading indicators (such as say “Session duration” starting to go down) in addition to or in place of lagging indicators (such as say “number of orders placed plummeting”) you can likely avert something that is pretty catastrophic. \n\n![](/static/images/incident_alert.webp)\n\n## “Actionable” Alerts should be self evident\nYour alerts must be self-evident so that it is crystal clear what next steps to take when they get fired. Whether it is to ascertain the severity of the issue, or to troubleshoot the incident, or remediate the issue, there should be enough details associated with the alert. You want to ensure it doesn’t require a lot of upfront discussion to determine what to do with the alert. You could stick these details in the content of the alert itself, or if its fairly verbose, you could link out to a runbook(s) that the team maintains for these type of issues. \n\n![](/static/images/incident_alert_action.webp)\n\n## Establish clear call chains and escalation paths\nHave a clear outline of what happens when an alert fires, including who it gets routed to based on things like service ownership, timezone awareness etc is critical to ensure rapid response. Beyond that immediate first line of defense, it is also equally critical to ensure there is clarity about how and who to, the incident responder could escalate the incident. Often times if the issue is complex or far bigger in scope than one person can handle, it might be necessary to pull in more senior folks (or multiple people on the team) as well as cross-functional stakeholders. Making all of that easily accessible through tooling (like PagerDuty, OpsGenie) or crystal clear documentation (run books, wiki pages, repo READMEs), might be the difference between a catastrophic incident or a nothing-burger. \n\n![](/static/images/incident_callchain.webp)\n\n## Empower front lines to make big decisions\nWhile you need clear escalation paths, you don’t want that to be the default response. You must empower the first responders to be able to take real action to stem the bleeding or make on-the-spot decisions for remediation, without needing to consult senior management. This is both good for the company in terms of limiting fallout as well as for the employees who are giving a high responsibility that they are trusted to make big decisions. Reduce the red tape and increase the agency of individuals. \n\n## Not all incidents are created equal\nAlong with things like call chains and escalation paths, one other piece of collateral that is important is an incident priority scale. This is typically a quick reference for the first responder or the incident commander. It helps them quickly identify what the severity of the incident is and label it as such because it might warrant different grades of responses. Differentiating between critical incidents (like system outages or financial data corruption) and minor issues (such as color palette glitches) is essential for responders to avoid false alarms. It also ensures the team’s response remains effective and focused.\n\n![](/static/images/incident_priority.webp)\n\n## Resolve first, ask questions later\nWithout question, one of the most important things to do is to resolve the incident as quickly as possible. You do not want to spend time philosophizing why something happened or how it could have been prevented, while the incident is underway. You can reserve that for the post mortem. For the moment, just ruthlessly focus on resolving the incident and ask the tough questions later. \n\n## Make sure one person is in charge\nSometimes incidents can get too big. They touch too many services, they span multiple business domains, or they are just really impactful in terms of revenue or reputation. Thats when it is absolutely crucial that there is one person appointed to “traffic cop” the entire incident. At Place Exchange, we have instituted “Incident Commanders” who are a small group of people who are trained in complex incident response. The reason it is so important to have this kind of a role, is because when there are multiple parties involved, someone needs to be directing the traffic. Oftentimes engineers will start going down rabbit holes about the complexity of the problem or trying to understand how to solve the problem. The role of the Incident Commander is to keep the focus of the group on rapid incident resolution. They make sure that everyone has a bias to action and while side investigations might be important, ensuring forward momentum is even more important. They are also responsible for ensuring that there is clear and constant communication with both internal and external stakeholders and partners. Incident commanders typically will start a synchronous line of voice communication, like a Slack huddle or a Google Meet meeting. This ensures that the folks crucial to the resolution of the incident are in constant contact. It is amazing how effective this small thing is compared to just allowing people to solve things async using chat. Incident commanders are also responsible for ensuring there is clear delegation for tasks that need to get done and make sure there is accountability for getting back responses or outcomes for those tasks. As they say, if you ask 2 people to feed a horse, the horse dies. An incident commander prevents that from happening and ultimately is responsible for the swift resolution of the incident. \n\n![](/static/images/incident_traffic_cop.webp)\n\n## Communicate clearly and frequently\nPeople will often forgive their favorite app or software down, if they are being kept apprised of how the team is working hard at resolving the incident. Trying to keep things hidden either because you don’t feel you have a complete handle on the incident, or you and your team feel embarrassed about it, are no reasons to stop the communication from flowing outwards. Make sure the communication is concise, frequent and transparent to both your internal and external partners as that will help build goodwill.\n\n![](/static/images/incident_communication.webp)\n\n## Blameless post mortems are crucial\nPost mortems or post-incident retrospectives are important to build a culture of learning and they absolutely must be blameless. Be critical of the process not the person. No one is harder on themselves than the person(s) who might have caused this and you gain nothing from flagellating them in public. If anything, all research suggests that you actually lose by doing this. The folks at Etsy are much better at talking about it, so go read https://www.etsy.com/codeascraft/blameless-postmortems if you want to learn more. \n\n\n![](/static/images/incident_resolution.webp)\n\n## Followups to the post mortems are crucial\nWhile conducting post mortems by themselves are important to build awareness and the feedback loops to learn from these incidents, the action items that are discussed to prevent these from happening in the future, are maybe more important? If the group has identified a set of gaps or vulnerabilities in the system, it is super important that there is focus and attention to resolving them in a timely manner to prevent the same issue from happening again. Its hard to prevent incidents from happening, and that is generally a tough conversation with your business and customers. But if the same incident happens over and over again, now that is both way harder to defend and indicates a severe problem in the health of and skillsmanship of the team. \n\n## Incidents are not bad as long as MTTD is low\nEverybody gets it. Even the business people get it. Building software is HARD and in a world where all of our software has 100s of 1000s of dependencies, where the fault lines might crack is impossible to predict. Shit will hit the fan and it is OK. We can’t prevent incidents from happening. However, what really helps is to make sure that the MTTD for your incidents is really low. Mean Time to Detect (MTTD) is a key performance indicator (KPI) that measures the average time it takes for an organization to identify an incident or security threat. It is hard to generalize, given the business domain, severity of impact etc, but if you are able to reduce your MTTD to seconds to minutes you are likely going to be able to significantly reduce the impact of an incident versus say it was hours to days (let alone weeks or months, which unfortunately is entirely possible).\n\n![](/static/images/incident_mttd.webp)\n\n## Humor is the great equalizer\nAll of this is so SERIOUS! Money getting lost! Customers having a terrible experience! However, in the midst of it all, I have found it to be critical to have a sense of humor. We shouldn’t forget that everyone is a human in this process and is going through varying degrees of stress. Injecting doses of humor at appropriate junctures helps relieve some of that pressure. It builds a sense of camaraderie that makes the team feel like they are in it together rather than they are off on an island in hell.\n\nThat’s a wrap. Thanks for reading! \n\n---\n\n⭐ If you like this type of content, be sure to follow me or subscribe to https://a1engineering.beehiiv.com/subscribe! ⭐",
      "code": "As a software engineer, dealing with incidents sucks. Getting that on-call page at 3am on a Saturday morning? It can be dread-inducing, soul sucking and altogether an abhorrent episode. If it happens frequently at your workplace, it can quite literally induce PTSD. \n\n\nUnfortunately this is a part and parcel of the software zeitgeist. If anything, these are the fires through which real engineering gets forged. These incidents teach you how to architect hardened systems, and in many cases, how not to. \n\nThis article goes into 2 aspects of how to deal with software incidents \n\n- 🛠️ The practices that one needs to instill in their software platform and teams to prevent and learn from these experiences.\n- 🧘 The attitude one needs to have to be resilient, and come away from these experiences not only unscathed, but with more than they went in.\n\nThe topics we will hit up are — \n\n1. [Automate your systems as much as you can](#automate-your-systems-as-much-as-you-can)\n1. [Tracking leading vs lagging indicators](#tracking-leading-vs-lagging-indicators)\n1. [“Actionable” Alerts should be self evident](#actionable-alerts-should-be-self-evident)\n1. [Establish clear call chains and escalation paths](#establish-clear-call-chains-and-escalation-paths)\n1. [Empower front lines to make big decisions](#empower-front-lines-to-make-big-decisions)\n1. [Not all incidents are created equal](#not-all-incidents-are-created-equal)\n1. [Resolve first, ask questions later](#resolve-first-ask-questions-later)\n1. [Make sure one person is in charge](#make-sure-one-person-is-in-charge)\n1. [Communicate clearly and frequently](#communicate-clearly-and-frequently)\n1. [Blameless post mortems are crucial](#blameless-post-mortems-are-crucial)\n1. [Followups to the post mortems are crucial](#followups-to-the-post-mortems-are-crucial)\n1. [Incidents are not bad as long as MTTD is low](#incidents-are-not-bad-as-long-as-mttd-is-low)\n1. [Humor is the great equalizer](#humor-is-the-great-equalizer)\n\nLet us dive in for some details! \n\n## Automate your systems as much as you can\nYou really want to minimize how many incidents you learn either through your customers or through some severe accounting discrepancy days or weeks from when the incident started. While “automation” is an overused word in engineering, this is one of those areas where you truly want to find the right balance of signal to noise ratio and ensure that you and your team receive alerts without needing any human intervention. If there are too many things to pick from, go super high level. What is the highest level metric you could pick? The one if the component systems fail to work as expected, will deviate from the norm? This could be tracking revenue flowing through the platform (for an e-commerce, financial or $-based platform), or number of current active users (for social media platforms). If you see the numbers crater or drop by a standard deviation or two, immediately alert the dev team. Focusing the first (or most important) alerts on the pulse of the business or the core user experience, is going to be a great metric to monitor. As you get more sophisticated and understand the system better, you can start to go deeper down the stack from an observability standpoint.\n\n![](/static/images/incident_green-graph.webp)\n\n## **Tracking leading vs lagging indicators**\nLeading indicators are predictive in nature and are likely to point to an issue about to happen whereas lagging indicators are post-hoc and are representative of the aftermath once the issue is well in progress. If you can tap into the leading indicators (such as say “Session duration” starting to go down) in addition to or in place of lagging indicators (such as say “number of orders placed plummeting”) you can likely avert something that is pretty catastrophic. \n\n![](/static/images/incident_alert.webp)\n\n## “Actionable” Alerts should be self evident\nYour alerts must be self-evident so that it is crystal clear what next steps to take when they get fired. Whether it is to ascertain the severity of the issue, or to troubleshoot the incident, or remediate the issue, there should be enough details associated with the alert. You want to ensure it doesn’t require a lot of upfront discussion to determine what to do with the alert. You could stick these details in the content of the alert itself, or if its fairly verbose, you could link out to a runbook(s) that the team maintains for these type of issues. \n\n![](/static/images/incident_alert_action.webp)\n\n## Establish clear call chains and escalation paths\nHave a clear outline of what happens when an alert fires, including who it gets routed to based on things like service ownership, timezone awareness etc is critical to ensure rapid response. Beyond that immediate first line of defense, it is also equally critical to ensure there is clarity about how and who to, the incident responder could escalate the incident. Often times if the issue is complex or far bigger in scope than one person can handle, it might be necessary to pull in more senior folks (or multiple people on the team) as well as cross-functional stakeholders. Making all of that easily accessible through tooling (like PagerDuty, OpsGenie) or crystal clear documentation (run books, wiki pages, repo READMEs), might be the difference between a catastrophic incident or a nothing-burger. \n\n![](/static/images/incident_callchain.webp)\n\n## Empower front lines to make big decisions\nWhile you need clear escalation paths, you don’t want that to be the default response. You must empower the first responders to be able to take real action to stem the bleeding or make on-the-spot decisions for remediation, without needing to consult senior management. This is both good for the company in terms of limiting fallout as well as for the employees who are giving a high responsibility that they are trusted to make big decisions. Reduce the red tape and increase the agency of individuals. \n\n## Not all incidents are created equal\nAlong with things like call chains and escalation paths, one other piece of collateral that is important is an incident priority scale. This is typically a quick reference for the first responder or the incident commander. It helps them quickly identify what the severity of the incident is and label it as such because it might warrant different grades of responses. Differentiating between critical incidents (like system outages or financial data corruption) and minor issues (such as color palette glitches) is essential for responders to avoid false alarms. It also ensures the team’s response remains effective and focused.\n\n![](/static/images/incident_priority.webp)\n\n## Resolve first, ask questions later\nWithout question, one of the most important things to do is to resolve the incident as quickly as possible. You do not want to spend time philosophizing why something happened or how it could have been prevented, while the incident is underway. You can reserve that for the post mortem. For the moment, just ruthlessly focus on resolving the incident and ask the tough questions later. \n\n## Make sure one person is in charge\nSometimes incidents can get too big. They touch too many services, they span multiple business domains, or they are just really impactful in terms of revenue or reputation. Thats when it is absolutely crucial that there is one person appointed to “traffic cop” the entire incident. At Place Exchange, we have instituted “Incident Commanders” who are a small group of people who are trained in complex incident response. The reason it is so important to have this kind of a role, is because when there are multiple parties involved, someone needs to be directing the traffic. Oftentimes engineers will start going down rabbit holes about the complexity of the problem or trying to understand how to solve the problem. The role of the Incident Commander is to keep the focus of the group on rapid incident resolution. They make sure that everyone has a bias to action and while side investigations might be important, ensuring forward momentum is even more important. They are also responsible for ensuring that there is clear and constant communication with both internal and external stakeholders and partners. Incident commanders typically will start a synchronous line of voice communication, like a Slack huddle or a Google Meet meeting. This ensures that the folks crucial to the resolution of the incident are in constant contact. It is amazing how effective this small thing is compared to just allowing people to solve things async using chat. Incident commanders are also responsible for ensuring there is clear delegation for tasks that need to get done and make sure there is accountability for getting back responses or outcomes for those tasks. As they say, if you ask 2 people to feed a horse, the horse dies. An incident commander prevents that from happening and ultimately is responsible for the swift resolution of the incident. \n\n![](/static/images/incident_traffic_cop.webp)\n\n## Communicate clearly and frequently\nPeople will often forgive their favorite app or software down, if they are being kept apprised of how the team is working hard at resolving the incident. Trying to keep things hidden either because you don’t feel you have a complete handle on the incident, or you and your team feel embarrassed about it, are no reasons to stop the communication from flowing outwards. Make sure the communication is concise, frequent and transparent to both your internal and external partners as that will help build goodwill.\n\n![](/static/images/incident_communication.webp)\n\n## Blameless post mortems are crucial\nPost mortems or post-incident retrospectives are important to build a culture of learning and they absolutely must be blameless. Be critical of the process not the person. No one is harder on themselves than the person(s) who might have caused this and you gain nothing from flagellating them in public. If anything, all research suggests that you actually lose by doing this. The folks at Etsy are much better at talking about it, so go read https://www.etsy.com/codeascraft/blameless-postmortems if you want to learn more. \n\n\n![](/static/images/incident_resolution.webp)\n\n## Followups to the post mortems are crucial\nWhile conducting post mortems by themselves are important to build awareness and the feedback loops to learn from these incidents, the action items that are discussed to prevent these from happening in the future, are maybe more important? If the group has identified a set of gaps or vulnerabilities in the system, it is super important that there is focus and attention to resolving them in a timely manner to prevent the same issue from happening again. Its hard to prevent incidents from happening, and that is generally a tough conversation with your business and customers. But if the same incident happens over and over again, now that is both way harder to defend and indicates a severe problem in the health of and skillsmanship of the team. \n\n## Incidents are not bad as long as MTTD is low\nEverybody gets it. Even the business people get it. Building software is HARD and in a world where all of our software has 100s of 1000s of dependencies, where the fault lines might crack is impossible to predict. Shit will hit the fan and it is OK. We can’t prevent incidents from happening. However, what really helps is to make sure that the MTTD for your incidents is really low. Mean Time to Detect (MTTD) is a key performance indicator (KPI) that measures the average time it takes for an organization to identify an incident or security threat. It is hard to generalize, given the business domain, severity of impact etc, but if you are able to reduce your MTTD to seconds to minutes you are likely going to be able to significantly reduce the impact of an incident versus say it was hours to days (let alone weeks or months, which unfortunately is entirely possible).\n\n![](/static/images/incident_mttd.webp)\n\n## Humor is the great equalizer\nAll of this is so SERIOUS! Money getting lost! Customers having a terrible experience! However, in the midst of it all, I have found it to be critical to have a sense of humor. We shouldn’t forget that everyone is a human in this process and is going through varying degrees of stress. Injecting doses of humor at appropriate junctures helps relieve some of that pressure. It builds a sense of camaraderie that makes the team feel like they are in it together rather than they are off on an island in hell.\n\nThat’s a wrap. Thanks for reading! \n\n---\n\n⭐ If you like this type of content, be sure to follow me or subscribe to https://a1engineering.beehiiv.com/subscribe! ⭐"
    },
    "slug": "incidents",
    "path": "posts/incidents",
    "filePath": "incidents.mdx",
    "toc": [],
    "readingTime": {
      "text": "10 min read",
      "minutes": 9.955,
      "time": 597300,
      "words": 1991
    },
    "structuredData": {
      "@context": "https://schema.org",
      "@type": "BlogPosting",
      "headline": "A dozen (or so) learnings from 15 years of software incident management",
      "datePublished": "2024-04-17T00:00:00.000Z",
      "dateModified": "2024-04-17T00:00:00.000Z",
      "description": "How to get great at a solving a problem you never want to encounter",
      "image": "/static/images/incident_frustrated.webp",
      "url": "https://arjunrao.co/posts/incidents"
    }
  },
  {
    "title": "State of the Individual",
    "date": "2015-08-02T00:00:00.000Z",
    "tags": [
      "growth"
    ],
    "lastmod": undefined,
    "draft": false,
    "summary": "Mediocrity is not always bad",
    "images": undefined,
    "authors": undefined,
    "layout": undefined,
    "bibliography": undefined,
    "canonicalUrl": undefined,
    "content": "As I sit in the the cool shade of the backyard at Saturday's Surf Cafe, SoHo, NYC, on a sunny Sunday, I can't help but look back at the steps that led me to this place ( not literally but figuratively ) and where it will take me from here henceforth.\n\nI have distinct memories of wanting to be a software engineer from the age of 10. It is kind of bizarre to have such a nerdy goal but that is the way it turned out to be. Sure, there were thoughts of wanting to be an astronaut but I had a weird presence of self-awareness even at that age which made it apparent that it was too lofty a goal for me.\n\nAs it turned out, there was a collusion of events that eventually resulted in  me becoming the software engineer that I am right now. Perhaps it is a case of the grass is always greener on the other side, but I am of the opinion that there needs to be something more than writing application code. Do not get me wrong. I still think having the logical bent of an engineer is of critical importance for application in any life situation. There is also no denying the fact that there is a dearth of good software engineers at this point, so it is definitely not a skill to be laughed at.  I like being a software engineer, it is really the only thing I can do well ( moderately so, for those who are appalled at the lack of humility ). Sure, I can do a bunch of other things moderately well too but there is no way I can earn a living off of that stuff. Unless there is a magical place on earth, where being a below-average gym enthusiast pays millions.\n\nIt begs the question, which I hope sparks something similar for you as well, \"Given that money were not a consideration, given that you can choose whatever you would ever want to do, given that you are at time T=0 with the conscious ability of choosing how your life should shape out, what would you choose to do?\". I feel that across the board, people gravitate towards things that will make them earn more, make them more successful, and that is not, by any means, a bad thing. This is only meant to be a thought experiment which I am, myself, going through. It is fascinating to me that society as a whole ( for the most part ), compromises on what they actually want with something that gets them to a preconceived place in life, monetarily.\n\nIt was a conversation with a friend that I was having one day, that made me realize one of the biggest flaws of our society today. It is the setting of expectations in our day-to-day as well as long term goals. In our youth, we are told that we are the best in our studies in our school , the best athletes, the best poets, the best scientists and that in the future we should aim to be the best in that field. However, no one talks about the fact that it is okay to be Mediocre. I really do not mean mediocre with a negative connotation. To clarify, when I use the word mediocre, I want to quasi-adhere to its dictionary definition <em>\"of only moderate quality; not very good.\"  </em>To dispel any sense of arrogance on my part, let me make it perfectly clear, I consider myself a mediocre software engineer. This has nothing to do with any lack of confidence on my part, it is just the way I set the bar for myself and the world.\n\nMediocrity is the driving force of our civilization yet it is treated like a taboo word. Our food is grown by farmers who are mediocre, our goods are transported by drivers who are mediocre, our entire society is choc-a-bloc with mediocre people.  Imho, it is totally ok to use that word. Before you hastily go out of your way to avoid associating yourself with this crowd, I do humbly request, honest introspection, whatever the answer may be for yourself.\n\nYes, there are the Einsteins, the Tolstoys, the Confucius' of the world and there is no doubt we need them. They are the ones that set the sights and plot the destination of the very fabric of human society. Do not, however, discount the importance of the countless millions who are mediocre as it is them, who push the fabric to that destination.\n\nTo give you an analogy, lets take the iPhone. When the iPhone first came out it was a sensation because it showed billions of people something they had never seen before. It was absolutely critical that the iPhone was created because it kickstarted a whole generation of ideas, something that wouldn't have been possible without it. However,think about the  incremental updates that happened to the iPhone ever since. Every minute update has brought so much more to the table that wasn't there in the first release. In Peter Thiel's words, the iPhone was the Zero to One, the updates to it were the One to Infinity.\n\nI hope the analogy loop that I was trying to get at with the mediocrity is complete and apparent. I might have digressed from my original train of thought, but it was necessary to bring this up since it weaves into the image I am trying to portray to you.\n\nThere is definitely a common theme running through all the things I deem important and I leave it to the reader to interpret what that might be. I will talk about those things in more detail in an upcoming post since smooshing them into this one wouldn't do them justice.",
    "_id": "individual.mdx",
    "_raw": {
      "flattenedPath": "individual"
    },
    "body": {
      "raw": "As I sit in the the cool shade of the backyard at Saturday's Surf Cafe, SoHo, NYC, on a sunny Sunday, I can't help but look back at the steps that led me to this place ( not literally but figuratively ) and where it will take me from here henceforth.\n\nI have distinct memories of wanting to be a software engineer from the age of 10. It is kind of bizarre to have such a nerdy goal but that is the way it turned out to be. Sure, there were thoughts of wanting to be an astronaut but I had a weird presence of self-awareness even at that age which made it apparent that it was too lofty a goal for me.\n\nAs it turned out, there was a collusion of events that eventually resulted in  me becoming the software engineer that I am right now. Perhaps it is a case of the grass is always greener on the other side, but I am of the opinion that there needs to be something more than writing application code. Do not get me wrong. I still think having the logical bent of an engineer is of critical importance for application in any life situation. There is also no denying the fact that there is a dearth of good software engineers at this point, so it is definitely not a skill to be laughed at.  I like being a software engineer, it is really the only thing I can do well ( moderately so, for those who are appalled at the lack of humility ). Sure, I can do a bunch of other things moderately well too but there is no way I can earn a living off of that stuff. Unless there is a magical place on earth, where being a below-average gym enthusiast pays millions.\n\nIt begs the question, which I hope sparks something similar for you as well, \"Given that money were not a consideration, given that you can choose whatever you would ever want to do, given that you are at time T=0 with the conscious ability of choosing how your life should shape out, what would you choose to do?\". I feel that across the board, people gravitate towards things that will make them earn more, make them more successful, and that is not, by any means, a bad thing. This is only meant to be a thought experiment which I am, myself, going through. It is fascinating to me that society as a whole ( for the most part ), compromises on what they actually want with something that gets them to a preconceived place in life, monetarily.\n\nIt was a conversation with a friend that I was having one day, that made me realize one of the biggest flaws of our society today. It is the setting of expectations in our day-to-day as well as long term goals. In our youth, we are told that we are the best in our studies in our school , the best athletes, the best poets, the best scientists and that in the future we should aim to be the best in that field. However, no one talks about the fact that it is okay to be Mediocre. I really do not mean mediocre with a negative connotation. To clarify, when I use the word mediocre, I want to quasi-adhere to its dictionary definition <em>\"of only moderate quality; not very good.\"  </em>To dispel any sense of arrogance on my part, let me make it perfectly clear, I consider myself a mediocre software engineer. This has nothing to do with any lack of confidence on my part, it is just the way I set the bar for myself and the world.\n\nMediocrity is the driving force of our civilization yet it is treated like a taboo word. Our food is grown by farmers who are mediocre, our goods are transported by drivers who are mediocre, our entire society is choc-a-bloc with mediocre people.  Imho, it is totally ok to use that word. Before you hastily go out of your way to avoid associating yourself with this crowd, I do humbly request, honest introspection, whatever the answer may be for yourself.\n\nYes, there are the Einsteins, the Tolstoys, the Confucius' of the world and there is no doubt we need them. They are the ones that set the sights and plot the destination of the very fabric of human society. Do not, however, discount the importance of the countless millions who are mediocre as it is them, who push the fabric to that destination.\n\nTo give you an analogy, lets take the iPhone. When the iPhone first came out it was a sensation because it showed billions of people something they had never seen before. It was absolutely critical that the iPhone was created because it kickstarted a whole generation of ideas, something that wouldn't have been possible without it. However,think about the  incremental updates that happened to the iPhone ever since. Every minute update has brought so much more to the table that wasn't there in the first release. In Peter Thiel's words, the iPhone was the Zero to One, the updates to it were the One to Infinity.\n\nI hope the analogy loop that I was trying to get at with the mediocrity is complete and apparent. I might have digressed from my original train of thought, but it was necessary to bring this up since it weaves into the image I am trying to portray to you.\n\nThere is definitely a common theme running through all the things I deem important and I leave it to the reader to interpret what that might be. I will talk about those things in more detail in an upcoming post since smooshing them into this one wouldn't do them justice.",
      "code": "As I sit in the the cool shade of the backyard at Saturday's Surf Cafe, SoHo, NYC, on a sunny Sunday, I can't help but look back at the steps that led me to this place ( not literally but figuratively ) and where it will take me from here henceforth.\n\nI have distinct memories of wanting to be a software engineer from the age of 10. It is kind of bizarre to have such a nerdy goal but that is the way it turned out to be. Sure, there were thoughts of wanting to be an astronaut but I had a weird presence of self-awareness even at that age which made it apparent that it was too lofty a goal for me.\n\nAs it turned out, there was a collusion of events that eventually resulted in  me becoming the software engineer that I am right now. Perhaps it is a case of the grass is always greener on the other side, but I am of the opinion that there needs to be something more than writing application code. Do not get me wrong. I still think having the logical bent of an engineer is of critical importance for application in any life situation. There is also no denying the fact that there is a dearth of good software engineers at this point, so it is definitely not a skill to be laughed at.  I like being a software engineer, it is really the only thing I can do well ( moderately so, for those who are appalled at the lack of humility ). Sure, I can do a bunch of other things moderately well too but there is no way I can earn a living off of that stuff. Unless there is a magical place on earth, where being a below-average gym enthusiast pays millions.\n\nIt begs the question, which I hope sparks something similar for you as well, \"Given that money were not a consideration, given that you can choose whatever you would ever want to do, given that you are at time T=0 with the conscious ability of choosing how your life should shape out, what would you choose to do?\". I feel that across the board, people gravitate towards things that will make them earn more, make them more successful, and that is not, by any means, a bad thing. This is only meant to be a thought experiment which I am, myself, going through. It is fascinating to me that society as a whole ( for the most part ), compromises on what they actually want with something that gets them to a preconceived place in life, monetarily.\n\nIt was a conversation with a friend that I was having one day, that made me realize one of the biggest flaws of our society today. It is the setting of expectations in our day-to-day as well as long term goals. In our youth, we are told that we are the best in our studies in our school , the best athletes, the best poets, the best scientists and that in the future we should aim to be the best in that field. However, no one talks about the fact that it is okay to be Mediocre. I really do not mean mediocre with a negative connotation. To clarify, when I use the word mediocre, I want to quasi-adhere to its dictionary definition <em>\"of only moderate quality; not very good.\"  </em>To dispel any sense of arrogance on my part, let me make it perfectly clear, I consider myself a mediocre software engineer. This has nothing to do with any lack of confidence on my part, it is just the way I set the bar for myself and the world.\n\nMediocrity is the driving force of our civilization yet it is treated like a taboo word. Our food is grown by farmers who are mediocre, our goods are transported by drivers who are mediocre, our entire society is choc-a-bloc with mediocre people.  Imho, it is totally ok to use that word. Before you hastily go out of your way to avoid associating yourself with this crowd, I do humbly request, honest introspection, whatever the answer may be for yourself.\n\nYes, there are the Einsteins, the Tolstoys, the Confucius' of the world and there is no doubt we need them. They are the ones that set the sights and plot the destination of the very fabric of human society. Do not, however, discount the importance of the countless millions who are mediocre as it is them, who push the fabric to that destination.\n\nTo give you an analogy, lets take the iPhone. When the iPhone first came out it was a sensation because it showed billions of people something they had never seen before. It was absolutely critical that the iPhone was created because it kickstarted a whole generation of ideas, something that wouldn't have been possible without it. However,think about the  incremental updates that happened to the iPhone ever since. Every minute update has brought so much more to the table that wasn't there in the first release. In Peter Thiel's words, the iPhone was the Zero to One, the updates to it were the One to Infinity.\n\nI hope the analogy loop that I was trying to get at with the mediocrity is complete and apparent. I might have digressed from my original train of thought, but it was necessary to bring this up since it weaves into the image I am trying to portray to you.\n\nThere is definitely a common theme running through all the things I deem important and I leave it to the reader to interpret what that might be. I will talk about those things in more detail in an upcoming post since smooshing them into this one wouldn't do them justice."
    },
    "slug": "individual",
    "path": "posts/individual",
    "filePath": "individual.mdx",
    "toc": [],
    "readingTime": {
      "text": "5 min read",
      "minutes": 4.785,
      "time": 287100,
      "words": 957
    },
    "structuredData": {
      "@context": "https://schema.org",
      "@type": "BlogPosting",
      "headline": "State of the Individual",
      "datePublished": "2015-08-02T00:00:00.000Z",
      "dateModified": "2015-08-02T00:00:00.000Z",
      "description": "Mediocrity is not always bad",
      "image": "/static/images/twitter-card.png",
      "url": "https://arjunrao.co/posts/individual"
    }
  },
  {
    "title": "Life and the Pursuit of Happiness",
    "date": "2017-07-02T04:00:00.000Z",
    "tags": [
      "growth"
    ],
    "lastmod": undefined,
    "draft": false,
    "summary": "Living in a material world and making decisions about being content",
    "images": undefined,
    "authors": undefined,
    "layout": undefined,
    "bibliography": undefined,
    "canonicalUrl": undefined,
    "content": "A creative man is motivated by the desire to achieve, not by the desire to beat others. — Ayn Rand\n\nWe are social creatures. Mankind rose to its greatness because of our ability to communicate with each other, share our stories and help and look out for each other. Without this, we would not be able to climb up the food chain the way we did. However, this ascent to the top and the perceived camaraderie does not come without a cost. The duality that abounds in nature, which states that every aspect of life is created from a balanced interaction of opposite and competing forces, makes it apparent that with the positives come the negatives. Too often we are battling with each other and trying to “win” against each other. Let us try and delve into the rationale behind this.\n\nIn all of us, there are 2 aspects of the brain —\n\nThere is the primitive brain or the ape brain, that keeps us alive. Its the part of our brain that is looking out for our survival, measuring our flight or flight, giving us the killer instinct to go out there and achieve things.\n\nAnd then there is the polished, modern brain. While we were hunters and gatherers back in the day, things are much, much more different in the recent past. In order to deal with the problems of modern life, we have created a shell around the primitive brain.\n\nLet me try explaining that further with a computer science analogy. In computer science, the kernel is the core part of the computer’s operating system and has complete control over everything going on in the computer. The operating system itself is the medium that the computer uses to converse with the external world. So in this analogy, the kernel is the primitive brain and the operating system is the polished brain. The kernel is fairly robust and doesn’t change around much whereas the operating system or the OS keeps getting upgrades from time to time. This is similar to the way our brain functions because the development of the primitive brain is fairly stable at this point. It has taken millennia to get to this point, and will not change state by much during the lifetime of a human being. The modern brain though is always looking for more and more and more.\n\nWe are looking at the world around us and are wondering, what we could do better and how we could do it better. Do not get me wrong, this is the virtue that propelled our species to the lead runner in this race. However, if not tamed, it can also end up in resulting in you being your own worst enemy.\nManners in which these negativities manifest can start off as trivial but over time, result in becoming reasons that drive your decision-making. As an example, jealousy or envy is one such negativity. Yearning to achieve that level of wealth that some acquaintance has; that gorgeous car or high salary or great looks and body that your friend has; or taking trips to exotic locations that some acquaintance of yours took are all feeding mechanisms to the building up of the volcano of jealousy. They could be motivators to achieve your own goals but more likely than not, aren’t. We are looking for these short term milestones to help us maintain status quo but often lose sight of the bigger picture due to this. Let me just jump back to another computer science analogy for one last time.\n\nIf we compare ourselves to iPhones, then our wants and desires are akin to iPhone upgrades. When has anyone ever been happy with their iPhone upgrades? I mean sure, every now and then you get this amazing upgrade which makes you content, but most of the time you’d hear people complain about the upgrades making their phone buggy or just slow in general. That analogy fits perfectly with how we can view and thus weigh, our desires.\n\nAm I advocating being a monk and living up in the Himalayas? No, unless that is something you want to do of course. On the contrary, I am merely suggesting an internal system of rigor to determine what is the intrinsic value-add of the object desired. There is a cost associated with anything we chase which is inherent in the duality of life.\n\nThe question for all of us then becomes a fairly simple one with not-so-simple ramifications — does the cost of acquiring the object we desire outweigh the benefits. Everyone has their own meter of what they value and consider beloved. Perhaps on another day, I might get into the details of how I make this decision, but I want to leave you with a Parthian shot — if you desire something, be it an object or outcome — know why you do so and even more importantly, know how that narrative weaves into the tapestry that is your life.",
    "_id": "life.mdx",
    "_raw": {
      "flattenedPath": "life"
    },
    "body": {
      "raw": "A creative man is motivated by the desire to achieve, not by the desire to beat others. — Ayn Rand\n\nWe are social creatures. Mankind rose to its greatness because of our ability to communicate with each other, share our stories and help and look out for each other. Without this, we would not be able to climb up the food chain the way we did. However, this ascent to the top and the perceived camaraderie does not come without a cost. The duality that abounds in nature, which states that every aspect of life is created from a balanced interaction of opposite and competing forces, makes it apparent that with the positives come the negatives. Too often we are battling with each other and trying to “win” against each other. Let us try and delve into the rationale behind this.\n\nIn all of us, there are 2 aspects of the brain —\n\nThere is the primitive brain or the ape brain, that keeps us alive. Its the part of our brain that is looking out for our survival, measuring our flight or flight, giving us the killer instinct to go out there and achieve things.\n\nAnd then there is the polished, modern brain. While we were hunters and gatherers back in the day, things are much, much more different in the recent past. In order to deal with the problems of modern life, we have created a shell around the primitive brain.\n\nLet me try explaining that further with a computer science analogy. In computer science, the kernel is the core part of the computer’s operating system and has complete control over everything going on in the computer. The operating system itself is the medium that the computer uses to converse with the external world. So in this analogy, the kernel is the primitive brain and the operating system is the polished brain. The kernel is fairly robust and doesn’t change around much whereas the operating system or the OS keeps getting upgrades from time to time. This is similar to the way our brain functions because the development of the primitive brain is fairly stable at this point. It has taken millennia to get to this point, and will not change state by much during the lifetime of a human being. The modern brain though is always looking for more and more and more.\n\nWe are looking at the world around us and are wondering, what we could do better and how we could do it better. Do not get me wrong, this is the virtue that propelled our species to the lead runner in this race. However, if not tamed, it can also end up in resulting in you being your own worst enemy.\nManners in which these negativities manifest can start off as trivial but over time, result in becoming reasons that drive your decision-making. As an example, jealousy or envy is one such negativity. Yearning to achieve that level of wealth that some acquaintance has; that gorgeous car or high salary or great looks and body that your friend has; or taking trips to exotic locations that some acquaintance of yours took are all feeding mechanisms to the building up of the volcano of jealousy. They could be motivators to achieve your own goals but more likely than not, aren’t. We are looking for these short term milestones to help us maintain status quo but often lose sight of the bigger picture due to this. Let me just jump back to another computer science analogy for one last time.\n\nIf we compare ourselves to iPhones, then our wants and desires are akin to iPhone upgrades. When has anyone ever been happy with their iPhone upgrades? I mean sure, every now and then you get this amazing upgrade which makes you content, but most of the time you’d hear people complain about the upgrades making their phone buggy or just slow in general. That analogy fits perfectly with how we can view and thus weigh, our desires.\n\nAm I advocating being a monk and living up in the Himalayas? No, unless that is something you want to do of course. On the contrary, I am merely suggesting an internal system of rigor to determine what is the intrinsic value-add of the object desired. There is a cost associated with anything we chase which is inherent in the duality of life.\n\nThe question for all of us then becomes a fairly simple one with not-so-simple ramifications — does the cost of acquiring the object we desire outweigh the benefits. Everyone has their own meter of what they value and consider beloved. Perhaps on another day, I might get into the details of how I make this decision, but I want to leave you with a Parthian shot — if you desire something, be it an object or outcome — know why you do so and even more importantly, know how that narrative weaves into the tapestry that is your life.",
      "code": "A creative man is motivated by the desire to achieve, not by the desire to beat others. — Ayn Rand\n\nWe are social creatures. Mankind rose to its greatness because of our ability to communicate with each other, share our stories and help and look out for each other. Without this, we would not be able to climb up the food chain the way we did. However, this ascent to the top and the perceived camaraderie does not come without a cost. The duality that abounds in nature, which states that every aspect of life is created from a balanced interaction of opposite and competing forces, makes it apparent that with the positives come the negatives. Too often we are battling with each other and trying to “win” against each other. Let us try and delve into the rationale behind this.\n\nIn all of us, there are 2 aspects of the brain —\n\nThere is the primitive brain or the ape brain, that keeps us alive. Its the part of our brain that is looking out for our survival, measuring our flight or flight, giving us the killer instinct to go out there and achieve things.\n\nAnd then there is the polished, modern brain. While we were hunters and gatherers back in the day, things are much, much more different in the recent past. In order to deal with the problems of modern life, we have created a shell around the primitive brain.\n\nLet me try explaining that further with a computer science analogy. In computer science, the kernel is the core part of the computer’s operating system and has complete control over everything going on in the computer. The operating system itself is the medium that the computer uses to converse with the external world. So in this analogy, the kernel is the primitive brain and the operating system is the polished brain. The kernel is fairly robust and doesn’t change around much whereas the operating system or the OS keeps getting upgrades from time to time. This is similar to the way our brain functions because the development of the primitive brain is fairly stable at this point. It has taken millennia to get to this point, and will not change state by much during the lifetime of a human being. The modern brain though is always looking for more and more and more.\n\nWe are looking at the world around us and are wondering, what we could do better and how we could do it better. Do not get me wrong, this is the virtue that propelled our species to the lead runner in this race. However, if not tamed, it can also end up in resulting in you being your own worst enemy.\nManners in which these negativities manifest can start off as trivial but over time, result in becoming reasons that drive your decision-making. As an example, jealousy or envy is one such negativity. Yearning to achieve that level of wealth that some acquaintance has; that gorgeous car or high salary or great looks and body that your friend has; or taking trips to exotic locations that some acquaintance of yours took are all feeding mechanisms to the building up of the volcano of jealousy. They could be motivators to achieve your own goals but more likely than not, aren’t. We are looking for these short term milestones to help us maintain status quo but often lose sight of the bigger picture due to this. Let me just jump back to another computer science analogy for one last time.\n\nIf we compare ourselves to iPhones, then our wants and desires are akin to iPhone upgrades. When has anyone ever been happy with their iPhone upgrades? I mean sure, every now and then you get this amazing upgrade which makes you content, but most of the time you’d hear people complain about the upgrades making their phone buggy or just slow in general. That analogy fits perfectly with how we can view and thus weigh, our desires.\n\nAm I advocating being a monk and living up in the Himalayas? No, unless that is something you want to do of course. On the contrary, I am merely suggesting an internal system of rigor to determine what is the intrinsic value-add of the object desired. There is a cost associated with anything we chase which is inherent in the duality of life.\n\nThe question for all of us then becomes a fairly simple one with not-so-simple ramifications — does the cost of acquiring the object we desire outweigh the benefits. Everyone has their own meter of what they value and consider beloved. Perhaps on another day, I might get into the details of how I make this decision, but I want to leave you with a Parthian shot — if you desire something, be it an object or outcome — know why you do so and even more importantly, know how that narrative weaves into the tapestry that is your life."
    },
    "slug": "life",
    "path": "posts/life",
    "filePath": "life.mdx",
    "toc": [],
    "readingTime": {
      "text": "5 min read",
      "minutes": 4.125,
      "time": 247500,
      "words": 825
    },
    "structuredData": {
      "@context": "https://schema.org",
      "@type": "BlogPosting",
      "headline": "Life and the Pursuit of Happiness",
      "datePublished": "2017-07-02T04:00:00.000Z",
      "dateModified": "2017-07-02T04:00:00.000Z",
      "description": "Living in a material world and making decisions about being content",
      "image": "/static/images/twitter-card.png",
      "url": "https://arjunrao.co/posts/life"
    }
  },
  {
    "title": "What are LLMs, Local LLMs and RAG?",
    "date": "2024-03-08T00:00:00.000Z",
    "tags": [
      "technology"
    ],
    "lastmod": undefined,
    "draft": false,
    "summary": "Learning the basics of Large Language Models",
    "images": [
      "/static/images/llm-header.jpeg"
    ],
    "authors": undefined,
    "layout": undefined,
    "bibliography": undefined,
    "canonicalUrl": undefined,
    "content": "Like most people in tech, I have been enthralled by the possibilities of this new wave of AI. Machine learning has been in the zeitgeist for the greater part of the 2000s. It has powered things like your Amazon and Spotify recommendations long before ChatGPT came along. However, the simplicity of outcomes and how achievable this now is for the average-joe is the real headline grabber\n\nI am on a quest to better understand the foundational blocks of where this space is at. I expect this to be the bedrock of most modern software application building from this point on. As I continue to expand into the fog of war (shoutout to all the Age of Empires players out there), I expect this map to be refined and updated with time.\n\n\n![](/static/images/aoe.jpeg)\n>> Age of Empires — best game ever made\n\nHere is the skeletal outline of the pieces I have encountered so far — \n\n- [Basics about ML models](#basics-about-ml-models)\n    - [Foundation Models](#foundation-models)\n    - [Large Language Models](#large-language-models)\n- [Making the models usable](#making-the-models-usable) \n    - [Fine tuning](#1-fine-tuning)\n    - [RAG (Retrieval Augmented Generation)](#2-rag)\n    - [Inference](#inference)\n- [Local LLMs](#local-llms)\n\n![](/static/images/llm-outline.png)\nDon’t pay attention to the apparent hierarchy. It merely represents the path my questfinding took.\n\nYou have to, of course, start with LLMs (Large Language Models), the space that OpenAI broke into with a sledgehammer. While there were plenty of incumbents in this space (namely models like BERT or proprietary domain models held closed-source by companies like Google or Meta or Spotify), ChatGPT pulled the rug on this space and brought things out in the open. \n\n# Basics about ML models\n\nThere is plenty of literature out there on LLMs and how they work (check the resources section for some of the good ones I encountered), but let’s get into some of the basics — \n\n## Foundation Models \n\nFoundation Models [FMs] (or base models) are built using a LOT of data — the data we are talking about could be in the 100s of petabytes range, if not more. The purpose of this process is to go wide, not deep. Datasets could span several domains, formats, timespans — all in the hope of pre-training the base model with unlabeled and self-supervised data. Foundation models are capable of performing a variety of general tasks such as generating text, visual comprehension and conversing in natural language. Foundation models can be refined to develop more specialized downstream models for specific applications. You can think of Foundation models as being a superset of LLMs. \n\n![](/static/images/llm-venn.png)\n\n## Large Language Models \n\nLarge language models are foundational models specifically trained on a massive text dataset. The refined output produced is a subset (or instances) of the Foundation models that are applied specifically to text and text-like things (eg. code). LLMs are still huge models when it comes to parameter count. A parameter is a value the model can change independently as it learns new things and the more parameters a model has, the more complex it can be. \n\n> For eg. GPT is the LLM behind OpenAI’s ChatGPT. GPT-3 has 175 million parameters. GPT-4 is estimated to have a total of 1.76 trillion parameters.\n\nCreating LLMs consist of 3 main steps \n- Collecting the “right” datasets\n- Determining the architecture used to process the datasets \n- Executing training by processing the datasets using the architecture \n\n### A bit more about the architecture \n\nThe “Transformer” architecture allows the model to handle sequences of data like sentences and they allow understanding meaning of each word in context to the other words in the sentence. This way the model can comprehensively understand what the sentence is and what it means in aggregate. This architecture is trained on the datasets mentioned above and during the training process the model is constantly adjusting its parameters based on how close the actual output is compared to the predictive output. It is trained until it basically produces about as close to the expected sentence structure in various scenarios. \n\n> Fun fact: Now that you know this, you know what GPT (Generative Pre-trained Transformer) means. In reverse, to follow things chronologically — \n\n> Transformer — The deep learning architecture used on the data\n\n> Pre-trained — The fact that it is already trained for usage, by using the datasets and parameters I mentioned before \n\n> Generative — The ability of the model to construct expected sentence structures based on inputs (prompts) from the external world. \n\n# Making the models usable\n\nSo now you have these enormous models — either Foundation models or LLMs, but you want to use it to assist you in very specific problem domains that you are interested in. How would you do that? Well, there are 2 broad ways to do so:\n- Fine tuning \n- RAG (Retrieval Augmented Generation)  \n\n### 1. Fine tuning\n\nLarge models can be trained on specific subsets/corpus of data to make them experts at certain tasks. This process is called “Fine tuning”. Fine tuning helps with understanding the context of the question without requiring the prompter to provide additional information. It must be noted, that fine tuning is a far far less computationally intensive process than the training step for LLMs/FMs. (For more details, you can read this)\n\n### 2. RAG\n\nRAG or Retrieval Augmented Generation is a really complicated way of saying “Knowledge base + LLM”. It describes a system that adds extra data, in addition to what the user provided, before querying the LLM. Where did that extra data come from? Well it could be from any number of external sources. \n\n![](/static/images/rag.png)\n\nAs shown in the diagram above, based on the prompt provided by the user, the server system could fabricate a query which it believes would enhance the quality of the response provided by the LLM. To do so, it could query external knowledge sources (outside of the training data of the LLM) like \n- ephemeral data using vector database\n- search indexes using Lucene \n- another pre-trained LLM that responds with a very specific set of context \n\nThis is the “Retrieval” step. Once the extra data has been received, the server then sends the prompt with this additional data (the “augmentation” step) to the LLM which “generates” the response sent back to the user. \n\n>> I recently read this article which rang the death knell on RAG by proposing an “Intelligent Agent” approach, but this approach doesn’t have widespread adoption thus far.\n\n## Inference\n\nWe already discussed how models get trained. The process of using these trained models to accept “live” inputs (i.e. prompts) from the user to make deductions of the response from the data, is called “Inference”. Naturally, this step can be pretty expensive if this is being run in the cloud, since for low latency outputs to be provided to the user, these inference systems need to be run on GPU compute. \n\n# Local LLMs\n\nSomething that I have been fascinated by is the “recent” (maybe 8 or so months old) phenomenon of running LLM inferences locally. Local could be your personal computer, your trusted network host etc. It just means you don’t need to use cloud providers or 3rd party sources to run inferences. This has a few amazing benefits — \n- Avoid the costs of running inference on the cloud or a third party provider.\n- Avoid vendor lock-in, since you could run these inferences on your own commodity hardware.\n- Data is yours, and you don’t need to worry about data corruption or leakage. \n\nThere are a couple of pre-eminent players in this space particularly Ollama and LMStudio. I have been using Ollama for the last week or so and have been amazed by the capabilities it unlocks. I can get into this in an upcoming post. \n\n![](/static/images/ollama-home.png)\n\nThere are a couple of things required to make local LLMs happen — \n\n> Now I must express, that these two points are not specific ONLY to local LLMs but to the broader model definition process. However, they become doubly as important when we talk about the local constraints.\n\n- **Model sizes** — When you can’t rely on cloud scale, obviously you are limited by the storage and memory constraints of your local hardware, There are several ways to reduce model sizes such as sharding, compression etc. One such technique is called quantization. An LLM is represented by a bunch of weights and activations. These values are generally represented by the usual 32-bit floating point (float32) datatype. Quantization is the process of representing an LLM using something that has lower fidelity than 32 bits. It does mean that the accuracy of the model reduces, but so does its size and thereby memory requirements. Depending on the type of task you are conducting, that could be a worthy tradeoff.\n\n- **Model formats**  —  There are several file formats to store LLM models for inference. Examples of these include GGML(GPT-Generated Model Language), GGUF (GPT-Generated Unified Format), GPTQ and the list goes on. GGUF has been a pretty popular format, especially for local LLMs since it allows for inference execution on the CPU, and uses the GPU (if available) only to speed up specific layers. While the CPU is slower than the GPU for executing this (this is a great article to get a look behind the curtains for the why), it enables inference on local computers like Windows and Macbooks. What a time to be alive! \n\nThat’s all I have for now. I’ll cover some other interesting aspects of Local LLMs and developing using them in an upcoming post. \n\n---\n\nIf this content is interesting to you, hit that 👏 button or subscribe to my newsletter here → https://a1engineering.beehiiv.com/subscribe. It gives me the feedback that I need to do more or less of something! Thanks ❤️\n\n---\n\n# Resources \n\n- https://www.youtube.com/watch?v=5sLYAQS9sWQ&t=2s&ab_channel=IBMTechnology\n- https://aws.amazon.com/what-is/foundation-models/\n- https://deepchecks.com/glossary/model-parameters/\n- https://www.projectpro.io/article/foundational-models-vs-large-language-models/893\n- https://www.maartengrootendorst.com/blog/quantization/\n- https://medium.com/@phillipgimmi/what-is-gguf-and-ggml-e364834d241c\n- https://aws.amazon.com/what-is/retrieval-augmented-generation",
    "_id": "llm-rag.mdx",
    "_raw": {
      "flattenedPath": "llm-rag"
    },
    "body": {
      "raw": "Like most people in tech, I have been enthralled by the possibilities of this new wave of AI. Machine learning has been in the zeitgeist for the greater part of the 2000s. It has powered things like your Amazon and Spotify recommendations long before ChatGPT came along. However, the simplicity of outcomes and how achievable this now is for the average-joe is the real headline grabber\n\nI am on a quest to better understand the foundational blocks of where this space is at. I expect this to be the bedrock of most modern software application building from this point on. As I continue to expand into the fog of war (shoutout to all the Age of Empires players out there), I expect this map to be refined and updated with time.\n\n\n![](/static/images/aoe.jpeg)\n>> Age of Empires — best game ever made\n\nHere is the skeletal outline of the pieces I have encountered so far — \n\n- [Basics about ML models](#basics-about-ml-models)\n    - [Foundation Models](#foundation-models)\n    - [Large Language Models](#large-language-models)\n- [Making the models usable](#making-the-models-usable) \n    - [Fine tuning](#1-fine-tuning)\n    - [RAG (Retrieval Augmented Generation)](#2-rag)\n    - [Inference](#inference)\n- [Local LLMs](#local-llms)\n\n![](/static/images/llm-outline.png)\nDon’t pay attention to the apparent hierarchy. It merely represents the path my questfinding took.\n\nYou have to, of course, start with LLMs (Large Language Models), the space that OpenAI broke into with a sledgehammer. While there were plenty of incumbents in this space (namely models like BERT or proprietary domain models held closed-source by companies like Google or Meta or Spotify), ChatGPT pulled the rug on this space and brought things out in the open. \n\n# Basics about ML models\n\nThere is plenty of literature out there on LLMs and how they work (check the resources section for some of the good ones I encountered), but let’s get into some of the basics — \n\n## Foundation Models \n\nFoundation Models [FMs] (or base models) are built using a LOT of data — the data we are talking about could be in the 100s of petabytes range, if not more. The purpose of this process is to go wide, not deep. Datasets could span several domains, formats, timespans — all in the hope of pre-training the base model with unlabeled and self-supervised data. Foundation models are capable of performing a variety of general tasks such as generating text, visual comprehension and conversing in natural language. Foundation models can be refined to develop more specialized downstream models for specific applications. You can think of Foundation models as being a superset of LLMs. \n\n![](/static/images/llm-venn.png)\n\n## Large Language Models \n\nLarge language models are foundational models specifically trained on a massive text dataset. The refined output produced is a subset (or instances) of the Foundation models that are applied specifically to text and text-like things (eg. code). LLMs are still huge models when it comes to parameter count. A parameter is a value the model can change independently as it learns new things and the more parameters a model has, the more complex it can be. \n\n> For eg. GPT is the LLM behind OpenAI’s ChatGPT. GPT-3 has 175 million parameters. GPT-4 is estimated to have a total of 1.76 trillion parameters.\n\nCreating LLMs consist of 3 main steps \n- Collecting the “right” datasets\n- Determining the architecture used to process the datasets \n- Executing training by processing the datasets using the architecture \n\n### A bit more about the architecture \n\nThe “Transformer” architecture allows the model to handle sequences of data like sentences and they allow understanding meaning of each word in context to the other words in the sentence. This way the model can comprehensively understand what the sentence is and what it means in aggregate. This architecture is trained on the datasets mentioned above and during the training process the model is constantly adjusting its parameters based on how close the actual output is compared to the predictive output. It is trained until it basically produces about as close to the expected sentence structure in various scenarios. \n\n> Fun fact: Now that you know this, you know what GPT (Generative Pre-trained Transformer) means. In reverse, to follow things chronologically — \n\n> Transformer — The deep learning architecture used on the data\n\n> Pre-trained — The fact that it is already trained for usage, by using the datasets and parameters I mentioned before \n\n> Generative — The ability of the model to construct expected sentence structures based on inputs (prompts) from the external world. \n\n# Making the models usable\n\nSo now you have these enormous models — either Foundation models or LLMs, but you want to use it to assist you in very specific problem domains that you are interested in. How would you do that? Well, there are 2 broad ways to do so:\n- Fine tuning \n- RAG (Retrieval Augmented Generation)  \n\n### 1. Fine tuning\n\nLarge models can be trained on specific subsets/corpus of data to make them experts at certain tasks. This process is called “Fine tuning”. Fine tuning helps with understanding the context of the question without requiring the prompter to provide additional information. It must be noted, that fine tuning is a far far less computationally intensive process than the training step for LLMs/FMs. (For more details, you can read this)\n\n### 2. RAG\n\nRAG or Retrieval Augmented Generation is a really complicated way of saying “Knowledge base + LLM”. It describes a system that adds extra data, in addition to what the user provided, before querying the LLM. Where did that extra data come from? Well it could be from any number of external sources. \n\n![](/static/images/rag.png)\n\nAs shown in the diagram above, based on the prompt provided by the user, the server system could fabricate a query which it believes would enhance the quality of the response provided by the LLM. To do so, it could query external knowledge sources (outside of the training data of the LLM) like \n- ephemeral data using vector database\n- search indexes using Lucene \n- another pre-trained LLM that responds with a very specific set of context \n\nThis is the “Retrieval” step. Once the extra data has been received, the server then sends the prompt with this additional data (the “augmentation” step) to the LLM which “generates” the response sent back to the user. \n\n>> I recently read this article which rang the death knell on RAG by proposing an “Intelligent Agent” approach, but this approach doesn’t have widespread adoption thus far.\n\n## Inference\n\nWe already discussed how models get trained. The process of using these trained models to accept “live” inputs (i.e. prompts) from the user to make deductions of the response from the data, is called “Inference”. Naturally, this step can be pretty expensive if this is being run in the cloud, since for low latency outputs to be provided to the user, these inference systems need to be run on GPU compute. \n\n# Local LLMs\n\nSomething that I have been fascinated by is the “recent” (maybe 8 or so months old) phenomenon of running LLM inferences locally. Local could be your personal computer, your trusted network host etc. It just means you don’t need to use cloud providers or 3rd party sources to run inferences. This has a few amazing benefits — \n- Avoid the costs of running inference on the cloud or a third party provider.\n- Avoid vendor lock-in, since you could run these inferences on your own commodity hardware.\n- Data is yours, and you don’t need to worry about data corruption or leakage. \n\nThere are a couple of pre-eminent players in this space particularly Ollama and LMStudio. I have been using Ollama for the last week or so and have been amazed by the capabilities it unlocks. I can get into this in an upcoming post. \n\n![](/static/images/ollama-home.png)\n\nThere are a couple of things required to make local LLMs happen — \n\n> Now I must express, that these two points are not specific ONLY to local LLMs but to the broader model definition process. However, they become doubly as important when we talk about the local constraints.\n\n- **Model sizes** — When you can’t rely on cloud scale, obviously you are limited by the storage and memory constraints of your local hardware, There are several ways to reduce model sizes such as sharding, compression etc. One such technique is called quantization. An LLM is represented by a bunch of weights and activations. These values are generally represented by the usual 32-bit floating point (float32) datatype. Quantization is the process of representing an LLM using something that has lower fidelity than 32 bits. It does mean that the accuracy of the model reduces, but so does its size and thereby memory requirements. Depending on the type of task you are conducting, that could be a worthy tradeoff.\n\n- **Model formats**  —  There are several file formats to store LLM models for inference. Examples of these include GGML(GPT-Generated Model Language), GGUF (GPT-Generated Unified Format), GPTQ and the list goes on. GGUF has been a pretty popular format, especially for local LLMs since it allows for inference execution on the CPU, and uses the GPU (if available) only to speed up specific layers. While the CPU is slower than the GPU for executing this (this is a great article to get a look behind the curtains for the why), it enables inference on local computers like Windows and Macbooks. What a time to be alive! \n\nThat’s all I have for now. I’ll cover some other interesting aspects of Local LLMs and developing using them in an upcoming post. \n\n---\n\nIf this content is interesting to you, hit that 👏 button or subscribe to my newsletter here → https://a1engineering.beehiiv.com/subscribe. It gives me the feedback that I need to do more or less of something! Thanks ❤️\n\n---\n\n# Resources \n\n- https://www.youtube.com/watch?v=5sLYAQS9sWQ&t=2s&ab_channel=IBMTechnology\n- https://aws.amazon.com/what-is/foundation-models/\n- https://deepchecks.com/glossary/model-parameters/\n- https://www.projectpro.io/article/foundational-models-vs-large-language-models/893\n- https://www.maartengrootendorst.com/blog/quantization/\n- https://medium.com/@phillipgimmi/what-is-gguf-and-ggml-e364834d241c\n- https://aws.amazon.com/what-is/retrieval-augmented-generation",
      "code": "Like most people in tech, I have been enthralled by the possibilities of this new wave of AI. Machine learning has been in the zeitgeist for the greater part of the 2000s. It has powered things like your Amazon and Spotify recommendations long before ChatGPT came along. However, the simplicity of outcomes and how achievable this now is for the average-joe is the real headline grabber\n\nI am on a quest to better understand the foundational blocks of where this space is at. I expect this to be the bedrock of most modern software application building from this point on. As I continue to expand into the fog of war (shoutout to all the Age of Empires players out there), I expect this map to be refined and updated with time.\n\n\n![](/static/images/aoe.jpeg)\n>> Age of Empires — best game ever made\n\nHere is the skeletal outline of the pieces I have encountered so far — \n\n- [Basics about ML models](#basics-about-ml-models)\n    - [Foundation Models](#foundation-models)\n    - [Large Language Models](#large-language-models)\n- [Making the models usable](#making-the-models-usable) \n    - [Fine tuning](#1-fine-tuning)\n    - [RAG (Retrieval Augmented Generation)](#2-rag)\n    - [Inference](#inference)\n- [Local LLMs](#local-llms)\n\n![](/static/images/llm-outline.png)\nDon’t pay attention to the apparent hierarchy. It merely represents the path my questfinding took.\n\nYou have to, of course, start with LLMs (Large Language Models), the space that OpenAI broke into with a sledgehammer. While there were plenty of incumbents in this space (namely models like BERT or proprietary domain models held closed-source by companies like Google or Meta or Spotify), ChatGPT pulled the rug on this space and brought things out in the open. \n\n# Basics about ML models\n\nThere is plenty of literature out there on LLMs and how they work (check the resources section for some of the good ones I encountered), but let’s get into some of the basics — \n\n## Foundation Models \n\nFoundation Models [FMs] (or base models) are built using a LOT of data — the data we are talking about could be in the 100s of petabytes range, if not more. The purpose of this process is to go wide, not deep. Datasets could span several domains, formats, timespans — all in the hope of pre-training the base model with unlabeled and self-supervised data. Foundation models are capable of performing a variety of general tasks such as generating text, visual comprehension and conversing in natural language. Foundation models can be refined to develop more specialized downstream models for specific applications. You can think of Foundation models as being a superset of LLMs. \n\n![](/static/images/llm-venn.png)\n\n## Large Language Models \n\nLarge language models are foundational models specifically trained on a massive text dataset. The refined output produced is a subset (or instances) of the Foundation models that are applied specifically to text and text-like things (eg. code). LLMs are still huge models when it comes to parameter count. A parameter is a value the model can change independently as it learns new things and the more parameters a model has, the more complex it can be. \n\n> For eg. GPT is the LLM behind OpenAI’s ChatGPT. GPT-3 has 175 million parameters. GPT-4 is estimated to have a total of 1.76 trillion parameters.\n\nCreating LLMs consist of 3 main steps \n- Collecting the “right” datasets\n- Determining the architecture used to process the datasets \n- Executing training by processing the datasets using the architecture \n\n### A bit more about the architecture \n\nThe “Transformer” architecture allows the model to handle sequences of data like sentences and they allow understanding meaning of each word in context to the other words in the sentence. This way the model can comprehensively understand what the sentence is and what it means in aggregate. This architecture is trained on the datasets mentioned above and during the training process the model is constantly adjusting its parameters based on how close the actual output is compared to the predictive output. It is trained until it basically produces about as close to the expected sentence structure in various scenarios. \n\n> Fun fact: Now that you know this, you know what GPT (Generative Pre-trained Transformer) means. In reverse, to follow things chronologically — \n\n> Transformer — The deep learning architecture used on the data\n\n> Pre-trained — The fact that it is already trained for usage, by using the datasets and parameters I mentioned before \n\n> Generative — The ability of the model to construct expected sentence structures based on inputs (prompts) from the external world. \n\n# Making the models usable\n\nSo now you have these enormous models — either Foundation models or LLMs, but you want to use it to assist you in very specific problem domains that you are interested in. How would you do that? Well, there are 2 broad ways to do so:\n- Fine tuning \n- RAG (Retrieval Augmented Generation)  \n\n### 1. Fine tuning\n\nLarge models can be trained on specific subsets/corpus of data to make them experts at certain tasks. This process is called “Fine tuning”. Fine tuning helps with understanding the context of the question without requiring the prompter to provide additional information. It must be noted, that fine tuning is a far far less computationally intensive process than the training step for LLMs/FMs. (For more details, you can read this)\n\n### 2. RAG\n\nRAG or Retrieval Augmented Generation is a really complicated way of saying “Knowledge base + LLM”. It describes a system that adds extra data, in addition to what the user provided, before querying the LLM. Where did that extra data come from? Well it could be from any number of external sources. \n\n![](/static/images/rag.png)\n\nAs shown in the diagram above, based on the prompt provided by the user, the server system could fabricate a query which it believes would enhance the quality of the response provided by the LLM. To do so, it could query external knowledge sources (outside of the training data of the LLM) like \n- ephemeral data using vector database\n- search indexes using Lucene \n- another pre-trained LLM that responds with a very specific set of context \n\nThis is the “Retrieval” step. Once the extra data has been received, the server then sends the prompt with this additional data (the “augmentation” step) to the LLM which “generates” the response sent back to the user. \n\n>> I recently read this article which rang the death knell on RAG by proposing an “Intelligent Agent” approach, but this approach doesn’t have widespread adoption thus far.\n\n## Inference\n\nWe already discussed how models get trained. The process of using these trained models to accept “live” inputs (i.e. prompts) from the user to make deductions of the response from the data, is called “Inference”. Naturally, this step can be pretty expensive if this is being run in the cloud, since for low latency outputs to be provided to the user, these inference systems need to be run on GPU compute. \n\n# Local LLMs\n\nSomething that I have been fascinated by is the “recent” (maybe 8 or so months old) phenomenon of running LLM inferences locally. Local could be your personal computer, your trusted network host etc. It just means you don’t need to use cloud providers or 3rd party sources to run inferences. This has a few amazing benefits — \n- Avoid the costs of running inference on the cloud or a third party provider.\n- Avoid vendor lock-in, since you could run these inferences on your own commodity hardware.\n- Data is yours, and you don’t need to worry about data corruption or leakage. \n\nThere are a couple of pre-eminent players in this space particularly Ollama and LMStudio. I have been using Ollama for the last week or so and have been amazed by the capabilities it unlocks. I can get into this in an upcoming post. \n\n![](/static/images/ollama-home.png)\n\nThere are a couple of things required to make local LLMs happen — \n\n> Now I must express, that these two points are not specific ONLY to local LLMs but to the broader model definition process. However, they become doubly as important when we talk about the local constraints.\n\n- **Model sizes** — When you can’t rely on cloud scale, obviously you are limited by the storage and memory constraints of your local hardware, There are several ways to reduce model sizes such as sharding, compression etc. One such technique is called quantization. An LLM is represented by a bunch of weights and activations. These values are generally represented by the usual 32-bit floating point (float32) datatype. Quantization is the process of representing an LLM using something that has lower fidelity than 32 bits. It does mean that the accuracy of the model reduces, but so does its size and thereby memory requirements. Depending on the type of task you are conducting, that could be a worthy tradeoff.\n\n- **Model formats**  —  There are several file formats to store LLM models for inference. Examples of these include GGML(GPT-Generated Model Language), GGUF (GPT-Generated Unified Format), GPTQ and the list goes on. GGUF has been a pretty popular format, especially for local LLMs since it allows for inference execution on the CPU, and uses the GPU (if available) only to speed up specific layers. While the CPU is slower than the GPU for executing this (this is a great article to get a look behind the curtains for the why), it enables inference on local computers like Windows and Macbooks. What a time to be alive! \n\nThat’s all I have for now. I’ll cover some other interesting aspects of Local LLMs and developing using them in an upcoming post. \n\n---\n\nIf this content is interesting to you, hit that 👏 button or subscribe to my newsletter here → https://a1engineering.beehiiv.com/subscribe. It gives me the feedback that I need to do more or less of something! Thanks ❤️\n\n---\n\n# Resources \n\n- https://www.youtube.com/watch?v=5sLYAQS9sWQ&t=2s&ab_channel=IBMTechnology\n- https://aws.amazon.com/what-is/foundation-models/\n- https://deepchecks.com/glossary/model-parameters/\n- https://www.projectpro.io/article/foundational-models-vs-large-language-models/893\n- https://www.maartengrootendorst.com/blog/quantization/\n- https://medium.com/@phillipgimmi/what-is-gguf-and-ggml-e364834d241c\n- https://aws.amazon.com/what-is/retrieval-augmented-generation"
    },
    "slug": "llm-rag",
    "path": "posts/llm-rag",
    "filePath": "llm-rag.mdx",
    "toc": [],
    "readingTime": {
      "text": "9 min read",
      "minutes": 8.08,
      "time": 484800,
      "words": 1616
    },
    "structuredData": {
      "@context": "https://schema.org",
      "@type": "BlogPosting",
      "headline": "What are LLMs, Local LLMs and RAG?",
      "datePublished": "2024-03-08T00:00:00.000Z",
      "dateModified": "2024-03-08T00:00:00.000Z",
      "description": "Learning the basics of Large Language Models",
      "image": "/static/images/llm-header.jpeg",
      "url": "https://arjunrao.co/posts/llm-rag"
    }
  },
  {
    "title": "Taste of the macabre",
    "date": "2019-02-06T00:00:00.000Z",
    "tags": [
      "philosophy"
    ],
    "lastmod": undefined,
    "draft": false,
    "summary": "Rise of true crime",
    "images": undefined,
    "authors": undefined,
    "layout": undefined,
    "bibliography": undefined,
    "canonicalUrl": undefined,
    "content": "I have noticed a recent spurt in dark and grisly stories being made available for consumption across all forms of media. Podcasts abound in this category ranging from \"S-Town\", \"Serial\" to uncomfortable names such as \"My Favorite Murder\". This is just a small cross-section of the available titles, but are some of the most popular podcasts today. On a bit of a tangent, there is a fascinating article about the gender disparity in podcast listenership numbers in the `True Crime` genre, [here](https://www.brandwatch.com/blog/react-podcast-audiences/), in which they observe how podcasts like \"My Favorite Murder,\" have 80% of it's listeners who are female. They bring up interesting reasons for why this might be the case, including getting tips for staying safe, but you cannot get away from the fact that this is gripping material for a big swath of consumers.\n\nPodcasts aren't the only channel of media for the `True Crime` category. Video streaming services like Netflix have a slew of offerings such as \"Making a Murderer\", \"Conversations with a Killer: The Ted Bundy Tapes\" and the list goes on and on. Amazon, for its part, is serving up titles like \"The Moors Murders\" and \"Where Is Robert Fisher?\" among others.\n\nIt is tough for me to attribute this spike in popularity, either to the current tastes of the consumer, or to something that has always been a part of our viewing palette. We have had fictionalized shows like Dexter in the past that have had tremendous success, but there is something about portraying these stories in the real world that differentiates this. The reality of the situation and the thrill of knowing how depraved the human mind can get, seems to have an unexpected allure. It is like watching a bad event unfold in front of you, that you cannot look away from. The adrenaline rush that one gets, from watching normal people describe how a diabolical figure walked among them and did terrible things, may put one in that twilight zone of thrill and fear, which might account for this grotesque magnetism.\n\nThe other option might be that we have something very primitive in us, that is weirdly attracted to actions of violence and blood. Over time, as civilization progresses, we have adapted our tolerance to brute force and gore. Back in the Roman times, having thousands of people watch grown men tear each other apart physically, was just society's idea of of a weekend excursion. Over time, we have gradually pared back those kind of activities, and we are now at the point where boxing and the NFL are considered to be violent sports. 40-50 years from now, any kind of contact sports might make their way out of our zeitgeist and become a faded memory. Not having a release for this desire, in a controlled environment, is probably what these `True Crime` episodes are providing an outlet for. Or at the end of the day, maybe all this complex analysis of the human psyche is moot and it is just the good production quality. 🤷🏽‍♂️",
    "_id": "macabre.mdx",
    "_raw": {
      "flattenedPath": "macabre"
    },
    "body": {
      "raw": "I have noticed a recent spurt in dark and grisly stories being made available for consumption across all forms of media. Podcasts abound in this category ranging from \"S-Town\", \"Serial\" to uncomfortable names such as \"My Favorite Murder\". This is just a small cross-section of the available titles, but are some of the most popular podcasts today. On a bit of a tangent, there is a fascinating article about the gender disparity in podcast listenership numbers in the `True Crime` genre, [here](https://www.brandwatch.com/blog/react-podcast-audiences/), in which they observe how podcasts like \"My Favorite Murder,\" have 80% of it's listeners who are female. They bring up interesting reasons for why this might be the case, including getting tips for staying safe, but you cannot get away from the fact that this is gripping material for a big swath of consumers.\n\nPodcasts aren't the only channel of media for the `True Crime` category. Video streaming services like Netflix have a slew of offerings such as \"Making a Murderer\", \"Conversations with a Killer: The Ted Bundy Tapes\" and the list goes on and on. Amazon, for its part, is serving up titles like \"The Moors Murders\" and \"Where Is Robert Fisher?\" among others.\n\nIt is tough for me to attribute this spike in popularity, either to the current tastes of the consumer, or to something that has always been a part of our viewing palette. We have had fictionalized shows like Dexter in the past that have had tremendous success, but there is something about portraying these stories in the real world that differentiates this. The reality of the situation and the thrill of knowing how depraved the human mind can get, seems to have an unexpected allure. It is like watching a bad event unfold in front of you, that you cannot look away from. The adrenaline rush that one gets, from watching normal people describe how a diabolical figure walked among them and did terrible things, may put one in that twilight zone of thrill and fear, which might account for this grotesque magnetism.\n\nThe other option might be that we have something very primitive in us, that is weirdly attracted to actions of violence and blood. Over time, as civilization progresses, we have adapted our tolerance to brute force and gore. Back in the Roman times, having thousands of people watch grown men tear each other apart physically, was just society's idea of of a weekend excursion. Over time, we have gradually pared back those kind of activities, and we are now at the point where boxing and the NFL are considered to be violent sports. 40-50 years from now, any kind of contact sports might make their way out of our zeitgeist and become a faded memory. Not having a release for this desire, in a controlled environment, is probably what these `True Crime` episodes are providing an outlet for. Or at the end of the day, maybe all this complex analysis of the human psyche is moot and it is just the good production quality. 🤷🏽‍♂️",
      "code": "I have noticed a recent spurt in dark and grisly stories being made available for consumption across all forms of media. Podcasts abound in this category ranging from \"S-Town\", \"Serial\" to uncomfortable names such as \"My Favorite Murder\". This is just a small cross-section of the available titles, but are some of the most popular podcasts today. On a bit of a tangent, there is a fascinating article about the gender disparity in podcast listenership numbers in the `True Crime` genre, [here](https://www.brandwatch.com/blog/react-podcast-audiences/), in which they observe how podcasts like \"My Favorite Murder,\" have 80% of it's listeners who are female. They bring up interesting reasons for why this might be the case, including getting tips for staying safe, but you cannot get away from the fact that this is gripping material for a big swath of consumers.\n\nPodcasts aren't the only channel of media for the `True Crime` category. Video streaming services like Netflix have a slew of offerings such as \"Making a Murderer\", \"Conversations with a Killer: The Ted Bundy Tapes\" and the list goes on and on. Amazon, for its part, is serving up titles like \"The Moors Murders\" and \"Where Is Robert Fisher?\" among others.\n\nIt is tough for me to attribute this spike in popularity, either to the current tastes of the consumer, or to something that has always been a part of our viewing palette. We have had fictionalized shows like Dexter in the past that have had tremendous success, but there is something about portraying these stories in the real world that differentiates this. The reality of the situation and the thrill of knowing how depraved the human mind can get, seems to have an unexpected allure. It is like watching a bad event unfold in front of you, that you cannot look away from. The adrenaline rush that one gets, from watching normal people describe how a diabolical figure walked among them and did terrible things, may put one in that twilight zone of thrill and fear, which might account for this grotesque magnetism.\n\nThe other option might be that we have something very primitive in us, that is weirdly attracted to actions of violence and blood. Over time, as civilization progresses, we have adapted our tolerance to brute force and gore. Back in the Roman times, having thousands of people watch grown men tear each other apart physically, was just society's idea of of a weekend excursion. Over time, we have gradually pared back those kind of activities, and we are now at the point where boxing and the NFL are considered to be violent sports. 40-50 years from now, any kind of contact sports might make their way out of our zeitgeist and become a faded memory. Not having a release for this desire, in a controlled environment, is probably what these `True Crime` episodes are providing an outlet for. Or at the end of the day, maybe all this complex analysis of the human psyche is moot and it is just the good production quality. 🤷🏽‍♂️"
    },
    "slug": "macabre",
    "path": "posts/macabre",
    "filePath": "macabre.mdx",
    "toc": [],
    "readingTime": {
      "text": "3 min read",
      "minutes": 2.53,
      "time": 151800,
      "words": 506
    },
    "structuredData": {
      "@context": "https://schema.org",
      "@type": "BlogPosting",
      "headline": "Taste of the macabre",
      "datePublished": "2019-02-06T00:00:00.000Z",
      "dateModified": "2019-02-06T00:00:00.000Z",
      "description": "Rise of true crime",
      "image": "/static/images/twitter-card.png",
      "url": "https://arjunrao.co/posts/macabre"
    }
  },
  {
    "title": "End Meeting Madness And Reclaim Productivity",
    "date": "2024-05-05T00:00:00.000Z",
    "tags": [
      "management",
      "leadership",
      "productivity"
    ],
    "lastmod": undefined,
    "draft": false,
    "summary": "Escape the meeting treadmill and regain control of your time",
    "images": [
      "/static/images/maker_mgr.webp"
    ],
    "authors": undefined,
    "layout": undefined,
    "bibliography": undefined,
    "canonicalUrl": undefined,
    "content": "Meetings. A word that symbolizes you have entered the corporate world. Whether you are at a Fortune 500 company or at a Series A startup, you can’t get away from meetings. \n\nThere are people who say that meetings are important. Establishing collaboration and clarifying interfaces is crucial for the success of the business? Maybe. But to the extent we have accepted as the norm today? Unlikely. \n\n## Maker vs Manager\n\nEach time any discussion about meetings comes up, it is hard not to think about Paul Graham’s essay about the Maker vs Manager schedule. On the left is what we have come to accept as the Manager's schedule. On the right is what the ideal Maker schedule looks like. I am always striving to veer towards the maker's schedule while ensuring I am not forsaking on my duties as a manager. This pursuit isn't always successful. \n\n\n> The manager's schedule is for bosses. It's embodied in the traditional appointment book, with each day cut into one hour intervals. There's always something coming on the next hour; the only question is what.\n\n> When you're operating on the maker's schedule, meetings are a disaster. A single meeting can blow a whole afternoon, by breaking it into two pieces each too small to do anything hard in. Plus you have to remember to go to the meeting. \n\n15 years on, this essay still rings true. Any person in the workforce (maker or manager) has meetings that roughly fall in these categories - \n\n- **Regular checkins** - typically called “1 on 1s” and occur on a weekly/biweekly/monthly cadence. These could be with your team, your stakeholders, your manager and so on.\n- **Scheduled small group meetings** - collaborative sessions that occur on a weekly/biweekly/monthly cadence like backlog refinement and sprint retrospectives.\n- **Informational large group meetings** - company wide sessions that are used to disperse information across the employees, and occur on a monthly/quarterly/annual basis. \n- **Adhoc meeting** - pretty unpredictable and based on what the situation calls for. They could be groups of people or even a couple of people trying to pair program or use this time for sounding out ideas.\n\nBesides these you might have some function-specific meetings - \n\n- For example if you are customer facing, you might have a slew of engagements to meet your constituents either in person or virtually. \n- If you are vendor facing, you might need to connect with your customer success representatives for things like contract renewals, cost discussions. \n- If you are a C-Suite member, you might have things like board meetings, roadshows, fundraising, customer sales, strategy sessions. \n\nIf you have gotten this far, you recognize this list. Heck, you might even be going - “Arjun - you haven’t even covered this entire other list of meetings that I am required to attend/run”. Yes - that is true. We have trapped ourselves in a labyrinth of meetings to execute initiatives. \n\n## As you grow, so shall you meet\n\nThe higher you go up in your career, the bigger your sphere of influence gets and at some point, your team is not just your team.  Your stakeholder peers are also your team. This means that ensuring their success is also part of your responsibility. \n\nLet us take a contrived example to follow this progression for a manager. The character in orange is our protagonist (let us say this is you) and the characters in green are the people our protagonist has regular checkins with. \n\n- **Upon being hired**\n\n![mgr](/static/images/mgr1.png)\n\nWhen you are a junior engineering manager, you are expected to mostly have your checkins with your direct reports and manager and maybe a peer or 2. \n\n> 🤝 “Checkins” counter: 5 \n\n- **After 1 Promotion**\n\n![mgr](/static/images/mgr2.png)\n\nWhen you get promoted, you are now in charge of a group of people. As before, you are  expected to have one-on-ones with your direct reports and your manager. In your new position, you are also expected to have checkins with your peers and maybe a senior member to make sure all things are working as expected. You might also do skip-level 1 on 1s to keep a pulse on the team. \n\n> 🤝 “Checkins” counter: 11\n\n- **After 2 Promotions**\n\n![mgr](/static/images/mgr3.png)\n\nWhen you get promoted again, you are now in charge of a department. As before, you are  expected to have one-on-ones with your direct reports and your manager. In your new position, you are also expected to have checkins with all your peers and maybe some of their reports to make sure all things are working as expected. You will also do several skip-level 1 on 1s to keep a pulse on the team. \n\n> 🤝 “Checkins” counter: 17\n\nAs you can see, the number of meetings has increased drastically, and these are just the 1 on 1 checkins. This also assumes that the organizational size remains the same while you are getting promoted, which in most cases is unlikely. This means that these numbers are likely on the lower end.\n\n## The impact of meetings on culture\n\nMeetings can be a useful tool but when either of the scenarios highlighted below occurs, that can lead to a bad culture. \n\n1. Someone feels like they are not useful if they are NOT in meetings \n1. People say things like “I wish I had fewer meetings so that I could get to the work I really need to get done!” \n\nThe first scenario leads to creating a self-fulfilling cycle - the more a person doesn’t feel worthy if they aren’t in meetings, the more meetings they will try to get into or create, which will create knock-on effects for other people in the company. \n\nThe second scenario leads to burnout and disenchantment. It is a call to action for the managers/peers to ensure that the sentiment is well understood. I fully believe that this scenario is possible but at the same time I find it to be ridiculous we have gotten ourselves in a place where it actually happens. \n\nBeing a pure-play people manager is not a lasting trend. Yes, there will always be places that have 1000s or 10s of 1000s of employees who will need purely people managers. Maybe there is still a place in those companies for that kind of individual. However, for the vast majority of people who are either ICs or people managers in small-mid sized companies, there is an expectation that a large percentage of their productivity is driven by their individual contribution. \n\n![mgr](/static/images/mgr_matrix.png)\n\nWhat a high meeting environment optimizes for is social contributions, which will not encompass the personal contributions an individual is responsible for. This doesn’t just mean that the person won’t get their job done on time. It means that the person will start questioning if they are growing in the most optimal way possible. This leads to disgruntled employees who seek greener pastures. While there are several reasons for people to look for new opportunities, this can often be the final nail in the coffin. \n\n## So what can we do about it? \n\nAs a group we must understand that this scenario we have put ourselves in is ridiculous. It is stasis that we have all acknowledged is necessary for the greater good. \n\n![mgr](/static/images/mgr_midwit.jpeg)\n\nHow do we break out of this cycle? We can take heed of these 6 actions - \n\n- **Focus on speed. Speed is king** - Focus on the “Now” not “How” (shoutout to Noah Kagan). So much of meeting continuum is invested in the future planning of “things”.  Whereas if you just do it you will likely find out significantly more things, than if you had planned and talked about it. \n\n- **Fewer meetings for all** - Get upper management buy-in into consciously reducing the amount of meeting time people are subjected to. This is not always easy since there are internal or external commitments you can’t avoid. But if you can’t get to this point, then this is likely a lost cause for you. As a hammer, you could institute something like “No meetings wednesday” which would need to be a shared commitment. \n\n- **Spare the makers** - The makers are the people you need to value in your company because they are the ones producing stuff. If you are disrupting any time on their calendar, you are effectively saying what they are doing is less important that what you are asking them for. In few cases this might be the case, but don’t make that the default assumption. Be cognizant of the impact of your actions. \n\n- **Async over sync and keep communications concise** - Fewer synchronous sessions prevents the mental bloodbath of meetings. However, it is easy to polemically vote for async communication but also mess this up. The way it usually happens is that someone unleashes a firehose of comments on confluence/github/google docs/coda. This now requires an intense back and forth, either on the document or potentially synchronously if the gaps are too far apart. Instead, keep your comments concise and to-the-point. Aim for density, not volume with your comments. \n\n- **Be ruthless for the sake of others** - Slash meetings that are not productive. \n    - If you are running the sessions, be brutally honest with yourself to see if there is any value in the session. \n    - If you notice high participant meetings, raise the exact same question with the organizers of those meetings. Ask them to either\n        - Cut the meeting \n        - shorten it and make it significantly more productive or \n        - reduce the participant count if their attendance is not required. Meeting attendee creep is a reality and when you see something, say something. \n\n- **Be ruthless for your sake** - You have done everything you could to reduce meeting time for other people. Now time to help yourself. \n    - Use apps like reclaim.ai to create focus time blocks for yourself that proactively rejects new meetings from colliding with your focus time. \n    - If you think you are on far too many meetings, take yourself off them. See what happens. Do things crash and burn? Do you hear about people noticing your absence? If so, is it because something got stuck or not get done? If that is not the case, then you weren’t required in the meeting. \n    - Often people use meetings to learn about things happening in other parts of the organization. If you are losing out on this context, find alternate ways like reading meeting minutes or written documentation to be plugged in or leverage your other 1/1s to get this information. \n\n![mgr](/static/images/mgr_reclaim.webp)\n\n## 💪 Keep Calm and Carry On\n\nUnfortunately, this is a hard problem and we have been talking about it for decades now. It is hard because it requires collective buy-in from others. If others don’t see the benefit of this or institute alternate practices to make fewer meetings happen, it is a losing battle. The way organizations are setup to communicate with each other also impedes this from being a problem that has an easy solution. \n\nHowever, if you are able to convince others of the benefits of this approach, and incrementally are able to reclaim time, you will find that you might just be able to move that needle everyone is talking about. \n\n![mgr](/static/images/mgr_needle.webp)\n\n---\n\n⭐ If you liked this, be sure to ♥️ this post and follow/subscribe at [https://a1engineering.beehiiv.com/subscribe](https://a1engineering.beehiiv.com/subscribe) ⭐",
    "_id": "meetings.mdx",
    "_raw": {
      "flattenedPath": "meetings"
    },
    "body": {
      "raw": "Meetings. A word that symbolizes you have entered the corporate world. Whether you are at a Fortune 500 company or at a Series A startup, you can’t get away from meetings. \n\nThere are people who say that meetings are important. Establishing collaboration and clarifying interfaces is crucial for the success of the business? Maybe. But to the extent we have accepted as the norm today? Unlikely. \n\n## Maker vs Manager\n\nEach time any discussion about meetings comes up, it is hard not to think about Paul Graham’s essay about the Maker vs Manager schedule. On the left is what we have come to accept as the Manager's schedule. On the right is what the ideal Maker schedule looks like. I am always striving to veer towards the maker's schedule while ensuring I am not forsaking on my duties as a manager. This pursuit isn't always successful. \n\n\n> The manager's schedule is for bosses. It's embodied in the traditional appointment book, with each day cut into one hour intervals. There's always something coming on the next hour; the only question is what.\n\n> When you're operating on the maker's schedule, meetings are a disaster. A single meeting can blow a whole afternoon, by breaking it into two pieces each too small to do anything hard in. Plus you have to remember to go to the meeting. \n\n15 years on, this essay still rings true. Any person in the workforce (maker or manager) has meetings that roughly fall in these categories - \n\n- **Regular checkins** - typically called “1 on 1s” and occur on a weekly/biweekly/monthly cadence. These could be with your team, your stakeholders, your manager and so on.\n- **Scheduled small group meetings** - collaborative sessions that occur on a weekly/biweekly/monthly cadence like backlog refinement and sprint retrospectives.\n- **Informational large group meetings** - company wide sessions that are used to disperse information across the employees, and occur on a monthly/quarterly/annual basis. \n- **Adhoc meeting** - pretty unpredictable and based on what the situation calls for. They could be groups of people or even a couple of people trying to pair program or use this time for sounding out ideas.\n\nBesides these you might have some function-specific meetings - \n\n- For example if you are customer facing, you might have a slew of engagements to meet your constituents either in person or virtually. \n- If you are vendor facing, you might need to connect with your customer success representatives for things like contract renewals, cost discussions. \n- If you are a C-Suite member, you might have things like board meetings, roadshows, fundraising, customer sales, strategy sessions. \n\nIf you have gotten this far, you recognize this list. Heck, you might even be going - “Arjun - you haven’t even covered this entire other list of meetings that I am required to attend/run”. Yes - that is true. We have trapped ourselves in a labyrinth of meetings to execute initiatives. \n\n## As you grow, so shall you meet\n\nThe higher you go up in your career, the bigger your sphere of influence gets and at some point, your team is not just your team.  Your stakeholder peers are also your team. This means that ensuring their success is also part of your responsibility. \n\nLet us take a contrived example to follow this progression for a manager. The character in orange is our protagonist (let us say this is you) and the characters in green are the people our protagonist has regular checkins with. \n\n- **Upon being hired**\n\n![mgr](/static/images/mgr1.png)\n\nWhen you are a junior engineering manager, you are expected to mostly have your checkins with your direct reports and manager and maybe a peer or 2. \n\n> 🤝 “Checkins” counter: 5 \n\n- **After 1 Promotion**\n\n![mgr](/static/images/mgr2.png)\n\nWhen you get promoted, you are now in charge of a group of people. As before, you are  expected to have one-on-ones with your direct reports and your manager. In your new position, you are also expected to have checkins with your peers and maybe a senior member to make sure all things are working as expected. You might also do skip-level 1 on 1s to keep a pulse on the team. \n\n> 🤝 “Checkins” counter: 11\n\n- **After 2 Promotions**\n\n![mgr](/static/images/mgr3.png)\n\nWhen you get promoted again, you are now in charge of a department. As before, you are  expected to have one-on-ones with your direct reports and your manager. In your new position, you are also expected to have checkins with all your peers and maybe some of their reports to make sure all things are working as expected. You will also do several skip-level 1 on 1s to keep a pulse on the team. \n\n> 🤝 “Checkins” counter: 17\n\nAs you can see, the number of meetings has increased drastically, and these are just the 1 on 1 checkins. This also assumes that the organizational size remains the same while you are getting promoted, which in most cases is unlikely. This means that these numbers are likely on the lower end.\n\n## The impact of meetings on culture\n\nMeetings can be a useful tool but when either of the scenarios highlighted below occurs, that can lead to a bad culture. \n\n1. Someone feels like they are not useful if they are NOT in meetings \n1. People say things like “I wish I had fewer meetings so that I could get to the work I really need to get done!” \n\nThe first scenario leads to creating a self-fulfilling cycle - the more a person doesn’t feel worthy if they aren’t in meetings, the more meetings they will try to get into or create, which will create knock-on effects for other people in the company. \n\nThe second scenario leads to burnout and disenchantment. It is a call to action for the managers/peers to ensure that the sentiment is well understood. I fully believe that this scenario is possible but at the same time I find it to be ridiculous we have gotten ourselves in a place where it actually happens. \n\nBeing a pure-play people manager is not a lasting trend. Yes, there will always be places that have 1000s or 10s of 1000s of employees who will need purely people managers. Maybe there is still a place in those companies for that kind of individual. However, for the vast majority of people who are either ICs or people managers in small-mid sized companies, there is an expectation that a large percentage of their productivity is driven by their individual contribution. \n\n![mgr](/static/images/mgr_matrix.png)\n\nWhat a high meeting environment optimizes for is social contributions, which will not encompass the personal contributions an individual is responsible for. This doesn’t just mean that the person won’t get their job done on time. It means that the person will start questioning if they are growing in the most optimal way possible. This leads to disgruntled employees who seek greener pastures. While there are several reasons for people to look for new opportunities, this can often be the final nail in the coffin. \n\n## So what can we do about it? \n\nAs a group we must understand that this scenario we have put ourselves in is ridiculous. It is stasis that we have all acknowledged is necessary for the greater good. \n\n![mgr](/static/images/mgr_midwit.jpeg)\n\nHow do we break out of this cycle? We can take heed of these 6 actions - \n\n- **Focus on speed. Speed is king** - Focus on the “Now” not “How” (shoutout to Noah Kagan). So much of meeting continuum is invested in the future planning of “things”.  Whereas if you just do it you will likely find out significantly more things, than if you had planned and talked about it. \n\n- **Fewer meetings for all** - Get upper management buy-in into consciously reducing the amount of meeting time people are subjected to. This is not always easy since there are internal or external commitments you can’t avoid. But if you can’t get to this point, then this is likely a lost cause for you. As a hammer, you could institute something like “No meetings wednesday” which would need to be a shared commitment. \n\n- **Spare the makers** - The makers are the people you need to value in your company because they are the ones producing stuff. If you are disrupting any time on their calendar, you are effectively saying what they are doing is less important that what you are asking them for. In few cases this might be the case, but don’t make that the default assumption. Be cognizant of the impact of your actions. \n\n- **Async over sync and keep communications concise** - Fewer synchronous sessions prevents the mental bloodbath of meetings. However, it is easy to polemically vote for async communication but also mess this up. The way it usually happens is that someone unleashes a firehose of comments on confluence/github/google docs/coda. This now requires an intense back and forth, either on the document or potentially synchronously if the gaps are too far apart. Instead, keep your comments concise and to-the-point. Aim for density, not volume with your comments. \n\n- **Be ruthless for the sake of others** - Slash meetings that are not productive. \n    - If you are running the sessions, be brutally honest with yourself to see if there is any value in the session. \n    - If you notice high participant meetings, raise the exact same question with the organizers of those meetings. Ask them to either\n        - Cut the meeting \n        - shorten it and make it significantly more productive or \n        - reduce the participant count if their attendance is not required. Meeting attendee creep is a reality and when you see something, say something. \n\n- **Be ruthless for your sake** - You have done everything you could to reduce meeting time for other people. Now time to help yourself. \n    - Use apps like reclaim.ai to create focus time blocks for yourself that proactively rejects new meetings from colliding with your focus time. \n    - If you think you are on far too many meetings, take yourself off them. See what happens. Do things crash and burn? Do you hear about people noticing your absence? If so, is it because something got stuck or not get done? If that is not the case, then you weren’t required in the meeting. \n    - Often people use meetings to learn about things happening in other parts of the organization. If you are losing out on this context, find alternate ways like reading meeting minutes or written documentation to be plugged in or leverage your other 1/1s to get this information. \n\n![mgr](/static/images/mgr_reclaim.webp)\n\n## 💪 Keep Calm and Carry On\n\nUnfortunately, this is a hard problem and we have been talking about it for decades now. It is hard because it requires collective buy-in from others. If others don’t see the benefit of this or institute alternate practices to make fewer meetings happen, it is a losing battle. The way organizations are setup to communicate with each other also impedes this from being a problem that has an easy solution. \n\nHowever, if you are able to convince others of the benefits of this approach, and incrementally are able to reclaim time, you will find that you might just be able to move that needle everyone is talking about. \n\n![mgr](/static/images/mgr_needle.webp)\n\n---\n\n⭐ If you liked this, be sure to ♥️ this post and follow/subscribe at [https://a1engineering.beehiiv.com/subscribe](https://a1engineering.beehiiv.com/subscribe) ⭐",
      "code": "Meetings. A word that symbolizes you have entered the corporate world. Whether you are at a Fortune 500 company or at a Series A startup, you can’t get away from meetings. \n\nThere are people who say that meetings are important. Establishing collaboration and clarifying interfaces is crucial for the success of the business? Maybe. But to the extent we have accepted as the norm today? Unlikely. \n\n## Maker vs Manager\n\nEach time any discussion about meetings comes up, it is hard not to think about Paul Graham’s essay about the Maker vs Manager schedule. On the left is what we have come to accept as the Manager's schedule. On the right is what the ideal Maker schedule looks like. I am always striving to veer towards the maker's schedule while ensuring I am not forsaking on my duties as a manager. This pursuit isn't always successful. \n\n\n> The manager's schedule is for bosses. It's embodied in the traditional appointment book, with each day cut into one hour intervals. There's always something coming on the next hour; the only question is what.\n\n> When you're operating on the maker's schedule, meetings are a disaster. A single meeting can blow a whole afternoon, by breaking it into two pieces each too small to do anything hard in. Plus you have to remember to go to the meeting. \n\n15 years on, this essay still rings true. Any person in the workforce (maker or manager) has meetings that roughly fall in these categories - \n\n- **Regular checkins** - typically called “1 on 1s” and occur on a weekly/biweekly/monthly cadence. These could be with your team, your stakeholders, your manager and so on.\n- **Scheduled small group meetings** - collaborative sessions that occur on a weekly/biweekly/monthly cadence like backlog refinement and sprint retrospectives.\n- **Informational large group meetings** - company wide sessions that are used to disperse information across the employees, and occur on a monthly/quarterly/annual basis. \n- **Adhoc meeting** - pretty unpredictable and based on what the situation calls for. They could be groups of people or even a couple of people trying to pair program or use this time for sounding out ideas.\n\nBesides these you might have some function-specific meetings - \n\n- For example if you are customer facing, you might have a slew of engagements to meet your constituents either in person or virtually. \n- If you are vendor facing, you might need to connect with your customer success representatives for things like contract renewals, cost discussions. \n- If you are a C-Suite member, you might have things like board meetings, roadshows, fundraising, customer sales, strategy sessions. \n\nIf you have gotten this far, you recognize this list. Heck, you might even be going - “Arjun - you haven’t even covered this entire other list of meetings that I am required to attend/run”. Yes - that is true. We have trapped ourselves in a labyrinth of meetings to execute initiatives. \n\n## As you grow, so shall you meet\n\nThe higher you go up in your career, the bigger your sphere of influence gets and at some point, your team is not just your team.  Your stakeholder peers are also your team. This means that ensuring their success is also part of your responsibility. \n\nLet us take a contrived example to follow this progression for a manager. The character in orange is our protagonist (let us say this is you) and the characters in green are the people our protagonist has regular checkins with. \n\n- **Upon being hired**\n\n![mgr](/static/images/mgr1.png)\n\nWhen you are a junior engineering manager, you are expected to mostly have your checkins with your direct reports and manager and maybe a peer or 2. \n\n> 🤝 “Checkins” counter: 5 \n\n- **After 1 Promotion**\n\n![mgr](/static/images/mgr2.png)\n\nWhen you get promoted, you are now in charge of a group of people. As before, you are  expected to have one-on-ones with your direct reports and your manager. In your new position, you are also expected to have checkins with your peers and maybe a senior member to make sure all things are working as expected. You might also do skip-level 1 on 1s to keep a pulse on the team. \n\n> 🤝 “Checkins” counter: 11\n\n- **After 2 Promotions**\n\n![mgr](/static/images/mgr3.png)\n\nWhen you get promoted again, you are now in charge of a department. As before, you are  expected to have one-on-ones with your direct reports and your manager. In your new position, you are also expected to have checkins with all your peers and maybe some of their reports to make sure all things are working as expected. You will also do several skip-level 1 on 1s to keep a pulse on the team. \n\n> 🤝 “Checkins” counter: 17\n\nAs you can see, the number of meetings has increased drastically, and these are just the 1 on 1 checkins. This also assumes that the organizational size remains the same while you are getting promoted, which in most cases is unlikely. This means that these numbers are likely on the lower end.\n\n## The impact of meetings on culture\n\nMeetings can be a useful tool but when either of the scenarios highlighted below occurs, that can lead to a bad culture. \n\n1. Someone feels like they are not useful if they are NOT in meetings \n1. People say things like “I wish I had fewer meetings so that I could get to the work I really need to get done!” \n\nThe first scenario leads to creating a self-fulfilling cycle - the more a person doesn’t feel worthy if they aren’t in meetings, the more meetings they will try to get into or create, which will create knock-on effects for other people in the company. \n\nThe second scenario leads to burnout and disenchantment. It is a call to action for the managers/peers to ensure that the sentiment is well understood. I fully believe that this scenario is possible but at the same time I find it to be ridiculous we have gotten ourselves in a place where it actually happens. \n\nBeing a pure-play people manager is not a lasting trend. Yes, there will always be places that have 1000s or 10s of 1000s of employees who will need purely people managers. Maybe there is still a place in those companies for that kind of individual. However, for the vast majority of people who are either ICs or people managers in small-mid sized companies, there is an expectation that a large percentage of their productivity is driven by their individual contribution. \n\n![mgr](/static/images/mgr_matrix.png)\n\nWhat a high meeting environment optimizes for is social contributions, which will not encompass the personal contributions an individual is responsible for. This doesn’t just mean that the person won’t get their job done on time. It means that the person will start questioning if they are growing in the most optimal way possible. This leads to disgruntled employees who seek greener pastures. While there are several reasons for people to look for new opportunities, this can often be the final nail in the coffin. \n\n## So what can we do about it? \n\nAs a group we must understand that this scenario we have put ourselves in is ridiculous. It is stasis that we have all acknowledged is necessary for the greater good. \n\n![mgr](/static/images/mgr_midwit.jpeg)\n\nHow do we break out of this cycle? We can take heed of these 6 actions - \n\n- **Focus on speed. Speed is king** - Focus on the “Now” not “How” (shoutout to Noah Kagan). So much of meeting continuum is invested in the future planning of “things”.  Whereas if you just do it you will likely find out significantly more things, than if you had planned and talked about it. \n\n- **Fewer meetings for all** - Get upper management buy-in into consciously reducing the amount of meeting time people are subjected to. This is not always easy since there are internal or external commitments you can’t avoid. But if you can’t get to this point, then this is likely a lost cause for you. As a hammer, you could institute something like “No meetings wednesday” which would need to be a shared commitment. \n\n- **Spare the makers** - The makers are the people you need to value in your company because they are the ones producing stuff. If you are disrupting any time on their calendar, you are effectively saying what they are doing is less important that what you are asking them for. In few cases this might be the case, but don’t make that the default assumption. Be cognizant of the impact of your actions. \n\n- **Async over sync and keep communications concise** - Fewer synchronous sessions prevents the mental bloodbath of meetings. However, it is easy to polemically vote for async communication but also mess this up. The way it usually happens is that someone unleashes a firehose of comments on confluence/github/google docs/coda. This now requires an intense back and forth, either on the document or potentially synchronously if the gaps are too far apart. Instead, keep your comments concise and to-the-point. Aim for density, not volume with your comments. \n\n- **Be ruthless for the sake of others** - Slash meetings that are not productive. \n    - If you are running the sessions, be brutally honest with yourself to see if there is any value in the session. \n    - If you notice high participant meetings, raise the exact same question with the organizers of those meetings. Ask them to either\n        - Cut the meeting \n        - shorten it and make it significantly more productive or \n        - reduce the participant count if their attendance is not required. Meeting attendee creep is a reality and when you see something, say something. \n\n- **Be ruthless for your sake** - You have done everything you could to reduce meeting time for other people. Now time to help yourself. \n    - Use apps like reclaim.ai to create focus time blocks for yourself that proactively rejects new meetings from colliding with your focus time. \n    - If you think you are on far too many meetings, take yourself off them. See what happens. Do things crash and burn? Do you hear about people noticing your absence? If so, is it because something got stuck or not get done? If that is not the case, then you weren’t required in the meeting. \n    - Often people use meetings to learn about things happening in other parts of the organization. If you are losing out on this context, find alternate ways like reading meeting minutes or written documentation to be plugged in or leverage your other 1/1s to get this information. \n\n![mgr](/static/images/mgr_reclaim.webp)\n\n## 💪 Keep Calm and Carry On\n\nUnfortunately, this is a hard problem and we have been talking about it for decades now. It is hard because it requires collective buy-in from others. If others don’t see the benefit of this or institute alternate practices to make fewer meetings happen, it is a losing battle. The way organizations are setup to communicate with each other also impedes this from being a problem that has an easy solution. \n\nHowever, if you are able to convince others of the benefits of this approach, and incrementally are able to reclaim time, you will find that you might just be able to move that needle everyone is talking about. \n\n![mgr](/static/images/mgr_needle.webp)\n\n---\n\n⭐ If you liked this, be sure to ♥️ this post and follow/subscribe at [https://a1engineering.beehiiv.com/subscribe](https://a1engineering.beehiiv.com/subscribe) ⭐"
    },
    "slug": "meetings",
    "path": "posts/meetings",
    "filePath": "meetings.mdx",
    "toc": [],
    "readingTime": {
      "text": "10 min read",
      "minutes": 9.47,
      "time": 568200,
      "words": 1894
    },
    "structuredData": {
      "@context": "https://schema.org",
      "@type": "BlogPosting",
      "headline": "End Meeting Madness And Reclaim Productivity",
      "datePublished": "2024-05-05T00:00:00.000Z",
      "dateModified": "2024-05-05T00:00:00.000Z",
      "description": "Escape the meeting treadmill and regain control of your time",
      "image": "/static/images/maker_mgr.webp",
      "url": "https://arjunrao.co/posts/meetings"
    }
  },
  {
    "title": "The unsexy (but important) role played by middle management",
    "date": "2024-04-24T00:00:00.000Z",
    "tags": [
      "management",
      "leadership",
      "productivity"
    ],
    "lastmod": undefined,
    "draft": false,
    "summary": "What having killer managers can help you accomplish",
    "images": [
      "/static/images/mgmt-cover.jpeg"
    ],
    "authors": undefined,
    "layout": undefined,
    "bibliography": undefined,
    "canonicalUrl": undefined,
    "content": "I came across a story in the BBC that wanted to take a different take on middle management in the aptly titled “Why middle managers are often cast as villains”. As a middle manager myself, I would like to second the spirit of that article and provide my own perspective on this topic. \n\nI am the VP of Engineering at an adtech startup that has < 100 people and I am quite literally a middle manager. \n\n![mgmt-layers](/static/images/mgmt-layers.webp)\n\nAmongst other things, one of my jobs as a People Manager has always been “Make sure to unblock your team” aka do whatever it takes so that your team doesn’t feel like they are stuck in the mud with their wheels spinning.  However, as my scope of work has increased or gotten clearer, one of my responsibilities is to also ensure that the vision of the company leaders is clearly and transparently communicated to the team and executed without hiccups. \n\nThis is where the real need for middle management comes in. The size and scope of “middle” management depends on the size of the company itself. Now is probably the time for the caveats - \n\n- You want to make sure the middle managers you have, themselves have the skills or the awareness of what their individual contributors are capable of doing, because that can be a killer combination. \n- Having pure managers for the sake of having managers, can be a double edged sword. Not having the right people in place might end up gumming up the works even more. This would be an unintended side effect of trying to fix a different problem. \n\nLet's maybe rewind a bit to when you are first thinking of these problems. You really should maintain as much of a flat hierarchy as possible when you are small. That way you can have focused discussions with all parties involved and keep moving the vision forward expediently. Let us assume there is a 15 person company structured like this which has a pretty direct line between founders and individual contributors. \n\n![mgmt-flat](/static/images/mgmt-flat.webp)\n\nAt some point, you are likely going to outgrow this model. Either because you are growing gangbusters and you need to hire people, or because the senior most members (typically the founders) will need to go do other things — like raise capital, or deal with legal or HR related concerns. Typically you start feeling this pain around the 15–20 employee mark if not sooner. This might now leave a vacuum in place. While previously there was a direct line of communication between the founder and the doer, now there is a lack of direction or constant feedback. \n\nOne solution is to have the CEO be the flag bearer of the company and have the other 2 co-founders manage all the other people in the company. Now, co-founders also tend to be pretty involved in outward facing activities like pursuing new clients or working with the board on due diligence. Suddenly you are asking 12 people to set up time with 2 people who aren’t really available for internal folks, which creates bottlenecks all around.\n\n![mgmt-cofounders](/static/images/mgmt-cofounders.webp)\n\nAnother alternative is to hire/recruit/promote managers who lie between the co founders and individual contributors. These middle managers help achieve the following benefits — \n\n- **Provide a translation layer**  — The upper management/founders/CEO/C-Suite layer tend to have very high level (50,000 feet) views and dabble in mile-wide-inch-deep sort of conversations. On the other hand, Individual contributors have very detailed views of granular items and deal with inch-wide-mile-deep sort of discussions. Ensuring these 2 groups of people are able to communicate effectively is the duty of middle managers. Conveying high level vision from upper management to the individual contributors, and likewise, conveying the successes and impediments in the other direction are both key goals for middle managers. \n\n- **Help look inwards** — Middle managers ensure that while the founders are looking outwards, there is someone to look inwards. This guarantees that people in the company are well looked after and their needs are addressed. It allows for the nitty gritty of daily life — or as the phrase goes “Keep the trains on track” — to be accomplished successfully. Whether this is personnel needs, technical wherewithal, or being able to facilitate the solution to a cross-functional problem, effective middle managers help move the needle. \n\n- **Form a robust peer group** — By linking up across the breadth of the organization, middle managers can be very effective at creating super highways of information that enable communication to flow laterally. Besides cultural benefits, this also helps expedite completion of important initiatives. These peer groups can help surface impediments early on in the process. It also provides a cohort that can rely on and learn from each other for mutual benefit. \n\n![mgmt-mgmt](/static/images/mgmt-mgmt.webp)\n\nAt the end of the day, its a balance. Having unnecessary layers of management will slow down your company and create organizational bureaucracy or red tape. On the other hand, effective middle managers inserted with strategic precision can help scale your company to new heights.",
    "_id": "middle-management.mdx",
    "_raw": {
      "flattenedPath": "middle-management"
    },
    "body": {
      "raw": "I came across a story in the BBC that wanted to take a different take on middle management in the aptly titled “Why middle managers are often cast as villains”. As a middle manager myself, I would like to second the spirit of that article and provide my own perspective on this topic. \n\nI am the VP of Engineering at an adtech startup that has < 100 people and I am quite literally a middle manager. \n\n![mgmt-layers](/static/images/mgmt-layers.webp)\n\nAmongst other things, one of my jobs as a People Manager has always been “Make sure to unblock your team” aka do whatever it takes so that your team doesn’t feel like they are stuck in the mud with their wheels spinning.  However, as my scope of work has increased or gotten clearer, one of my responsibilities is to also ensure that the vision of the company leaders is clearly and transparently communicated to the team and executed without hiccups. \n\nThis is where the real need for middle management comes in. The size and scope of “middle” management depends on the size of the company itself. Now is probably the time for the caveats - \n\n- You want to make sure the middle managers you have, themselves have the skills or the awareness of what their individual contributors are capable of doing, because that can be a killer combination. \n- Having pure managers for the sake of having managers, can be a double edged sword. Not having the right people in place might end up gumming up the works even more. This would be an unintended side effect of trying to fix a different problem. \n\nLet's maybe rewind a bit to when you are first thinking of these problems. You really should maintain as much of a flat hierarchy as possible when you are small. That way you can have focused discussions with all parties involved and keep moving the vision forward expediently. Let us assume there is a 15 person company structured like this which has a pretty direct line between founders and individual contributors. \n\n![mgmt-flat](/static/images/mgmt-flat.webp)\n\nAt some point, you are likely going to outgrow this model. Either because you are growing gangbusters and you need to hire people, or because the senior most members (typically the founders) will need to go do other things — like raise capital, or deal with legal or HR related concerns. Typically you start feeling this pain around the 15–20 employee mark if not sooner. This might now leave a vacuum in place. While previously there was a direct line of communication between the founder and the doer, now there is a lack of direction or constant feedback. \n\nOne solution is to have the CEO be the flag bearer of the company and have the other 2 co-founders manage all the other people in the company. Now, co-founders also tend to be pretty involved in outward facing activities like pursuing new clients or working with the board on due diligence. Suddenly you are asking 12 people to set up time with 2 people who aren’t really available for internal folks, which creates bottlenecks all around.\n\n![mgmt-cofounders](/static/images/mgmt-cofounders.webp)\n\nAnother alternative is to hire/recruit/promote managers who lie between the co founders and individual contributors. These middle managers help achieve the following benefits — \n\n- **Provide a translation layer**  — The upper management/founders/CEO/C-Suite layer tend to have very high level (50,000 feet) views and dabble in mile-wide-inch-deep sort of conversations. On the other hand, Individual contributors have very detailed views of granular items and deal with inch-wide-mile-deep sort of discussions. Ensuring these 2 groups of people are able to communicate effectively is the duty of middle managers. Conveying high level vision from upper management to the individual contributors, and likewise, conveying the successes and impediments in the other direction are both key goals for middle managers. \n\n- **Help look inwards** — Middle managers ensure that while the founders are looking outwards, there is someone to look inwards. This guarantees that people in the company are well looked after and their needs are addressed. It allows for the nitty gritty of daily life — or as the phrase goes “Keep the trains on track” — to be accomplished successfully. Whether this is personnel needs, technical wherewithal, or being able to facilitate the solution to a cross-functional problem, effective middle managers help move the needle. \n\n- **Form a robust peer group** — By linking up across the breadth of the organization, middle managers can be very effective at creating super highways of information that enable communication to flow laterally. Besides cultural benefits, this also helps expedite completion of important initiatives. These peer groups can help surface impediments early on in the process. It also provides a cohort that can rely on and learn from each other for mutual benefit. \n\n![mgmt-mgmt](/static/images/mgmt-mgmt.webp)\n\nAt the end of the day, its a balance. Having unnecessary layers of management will slow down your company and create organizational bureaucracy or red tape. On the other hand, effective middle managers inserted with strategic precision can help scale your company to new heights.",
      "code": "I came across a story in the BBC that wanted to take a different take on middle management in the aptly titled “Why middle managers are often cast as villains”. As a middle manager myself, I would like to second the spirit of that article and provide my own perspective on this topic. \n\nI am the VP of Engineering at an adtech startup that has < 100 people and I am quite literally a middle manager. \n\n![mgmt-layers](/static/images/mgmt-layers.webp)\n\nAmongst other things, one of my jobs as a People Manager has always been “Make sure to unblock your team” aka do whatever it takes so that your team doesn’t feel like they are stuck in the mud with their wheels spinning.  However, as my scope of work has increased or gotten clearer, one of my responsibilities is to also ensure that the vision of the company leaders is clearly and transparently communicated to the team and executed without hiccups. \n\nThis is where the real need for middle management comes in. The size and scope of “middle” management depends on the size of the company itself. Now is probably the time for the caveats - \n\n- You want to make sure the middle managers you have, themselves have the skills or the awareness of what their individual contributors are capable of doing, because that can be a killer combination. \n- Having pure managers for the sake of having managers, can be a double edged sword. Not having the right people in place might end up gumming up the works even more. This would be an unintended side effect of trying to fix a different problem. \n\nLet's maybe rewind a bit to when you are first thinking of these problems. You really should maintain as much of a flat hierarchy as possible when you are small. That way you can have focused discussions with all parties involved and keep moving the vision forward expediently. Let us assume there is a 15 person company structured like this which has a pretty direct line between founders and individual contributors. \n\n![mgmt-flat](/static/images/mgmt-flat.webp)\n\nAt some point, you are likely going to outgrow this model. Either because you are growing gangbusters and you need to hire people, or because the senior most members (typically the founders) will need to go do other things — like raise capital, or deal with legal or HR related concerns. Typically you start feeling this pain around the 15–20 employee mark if not sooner. This might now leave a vacuum in place. While previously there was a direct line of communication between the founder and the doer, now there is a lack of direction or constant feedback. \n\nOne solution is to have the CEO be the flag bearer of the company and have the other 2 co-founders manage all the other people in the company. Now, co-founders also tend to be pretty involved in outward facing activities like pursuing new clients or working with the board on due diligence. Suddenly you are asking 12 people to set up time with 2 people who aren’t really available for internal folks, which creates bottlenecks all around.\n\n![mgmt-cofounders](/static/images/mgmt-cofounders.webp)\n\nAnother alternative is to hire/recruit/promote managers who lie between the co founders and individual contributors. These middle managers help achieve the following benefits — \n\n- **Provide a translation layer**  — The upper management/founders/CEO/C-Suite layer tend to have very high level (50,000 feet) views and dabble in mile-wide-inch-deep sort of conversations. On the other hand, Individual contributors have very detailed views of granular items and deal with inch-wide-mile-deep sort of discussions. Ensuring these 2 groups of people are able to communicate effectively is the duty of middle managers. Conveying high level vision from upper management to the individual contributors, and likewise, conveying the successes and impediments in the other direction are both key goals for middle managers. \n\n- **Help look inwards** — Middle managers ensure that while the founders are looking outwards, there is someone to look inwards. This guarantees that people in the company are well looked after and their needs are addressed. It allows for the nitty gritty of daily life — or as the phrase goes “Keep the trains on track” — to be accomplished successfully. Whether this is personnel needs, technical wherewithal, or being able to facilitate the solution to a cross-functional problem, effective middle managers help move the needle. \n\n- **Form a robust peer group** — By linking up across the breadth of the organization, middle managers can be very effective at creating super highways of information that enable communication to flow laterally. Besides cultural benefits, this also helps expedite completion of important initiatives. These peer groups can help surface impediments early on in the process. It also provides a cohort that can rely on and learn from each other for mutual benefit. \n\n![mgmt-mgmt](/static/images/mgmt-mgmt.webp)\n\nAt the end of the day, its a balance. Having unnecessary layers of management will slow down your company and create organizational bureaucracy or red tape. On the other hand, effective middle managers inserted with strategic precision can help scale your company to new heights."
    },
    "slug": "middle-management",
    "path": "posts/middle-management",
    "filePath": "middle-management.mdx",
    "toc": [],
    "readingTime": {
      "text": "5 min read",
      "minutes": 4.155,
      "time": 249300,
      "words": 831
    },
    "structuredData": {
      "@context": "https://schema.org",
      "@type": "BlogPosting",
      "headline": "The unsexy (but important) role played by middle management",
      "datePublished": "2024-04-24T00:00:00.000Z",
      "dateModified": "2024-04-24T00:00:00.000Z",
      "description": "What having killer managers can help you accomplish",
      "image": "/static/images/mgmt-cover.jpeg",
      "url": "https://arjunrao.co/posts/middle-management"
    }
  },
  {
    "title": "Why Are Millennials Creating All This Content?",
    "date": "2017-06-09T00:00:00.000Z",
    "tags": [
      "technology",
      "millenials"
    ],
    "lastmod": undefined,
    "draft": false,
    "summary": "The ever increasing trend of content creation",
    "images": undefined,
    "authors": undefined,
    "layout": undefined,
    "bibliography": undefined,
    "canonicalUrl": undefined,
    "content": "“Make it simple. Make it memorable. Make it inviting to look at. Make it fun to read.” — Leo Burnett\n\nIn a strictly observational sense, ours is a society obsessed with self indulgence and self obsession. I attribute this narcissism due to our passion for publishing content about ourselves. I am a millennial, we are a content creating generation and are the most prolific content creating generation to have been seen thus far. With avenues like Instagram and Snapchat we create stories, snaps, pictures, videos and post it for the world to see. Using social networks like Facebook , Twitter and Reddit ( sorry Reddit, you are kind of like a social network ), we are posting links, photos, experiences, news articles, memes and gifs for the world to see. On YouTube, Vimeo and other video sharing websites, we are seeing a new generation of content rockstars like Casey Neistat and PewDiePie. With Medium, PostHaven, WordPress and other blog outlets, we are enunciating our thoughts at rates never seen before. The content deluge is continuous and at times overwhelming for all people concerned.\n\nTo give you a sense of how much content is being created regularly, here are some numbers I scraped off the interwebs ; for every minute —\n\n- Email users send 204,000,000 messages\n- 3,567,850 text messages are sent\n- Google receives over 4,000,000 search queries\n- Snapchat users watch 6,944,444 videos\n- Uber passengers take 694 rides\n- Google translates 69,500,000 words\n- Blog writers post 1400 new blog posts\n- Facebook users share 2,460,000 pieces of content\n- Facebook users like 4,166,667 times\n- Twitter users tweet 347,222 times\n- Netflix subscribers stream 86,805 hours of video\n- Amazon makes $83,000 in online sales\n- Tinder users swipe 972,222 times\n- Whats App users share 347,222 photos\n- Instagram users post 216,000 new photos\n- Instagram users like 2,430,555 times\n- Pandora users listen to 61,141 hours of music\n- Apple users download 48,000 apps\n- Yelp users post 26,380 reviews\n- Skype users connect for 23,300 hours\n- Vine users share 8,333 videos\n- Pinterest users pin 3,472 images\n- Youtube users upload 300 hours of video\n\n_Source : http://bit.ly/2agpt2g ; http://bit.ly/2qE7tL8;_\n\nThis is in one. single. minute. Let that sink in. Lest you get too comfortable with that, here is an infographic of how much data we end up creating each year — _Source : http://bit.ly/2h4QPjq_\n\nPerhaps the above infographic is a bit misleading because its not just the content we are creating on social media but also the data being generated by companies, governments; the whole enchilada. When I read statistics of this content barrage, it gives me the same sense of amazement I get when I read about something like this — some of whose highlights include numbers like the Amazon River pumps out enough water each day to provide New York City’s water needs for nine years or that the Amazon forest releases 20 billion tonnes of moisture into the atmosphere every day, equivalent to 8,000,000 swimming pools! I digress but what cannot be denied is the sheer volume of data cascading into our lives each and every minute of each and every day.\nLet us for a moment think about the people who are creating this content. In particular, user generated content- the content people create willingly and put it up for the world to see. I am a content creator at this very moment with this Medium article, so I want to delve into reasons why my fellow content creators and I go through the trouble of generating original and personal content. Since there are different content networks targeting wildly different human behaviors, I will try to go into the rabbit hole keeping in mind 3 networks —\n\nFacebook — Due to a large user base and being “the” definitive social network of our era\n\nSnapchat — New kid on the block (for all intents and purposes ) that upended the status quo established by Facebook by approaching sharing with a different perspective\n\nMedium — The stomping grounds of ideologues or at least the perception that most writers have of their craft and form of delivery. By making “blog” writing cool again and achieving discoverability to a wider audience, Medium has changed the way people consume articles and news in the recent modern world.\nThe first reason that jumps to mind is self-expression. Everyone wants to feel distinct and have experiences that are fundamentally unique. YOLO or ‘You Only Live Once’ used to be the latent anthem of all adventures. I mean if you only live once, you gotta live your best life; and while you live your best life why not showcase the best experiences to your friends and family. This is partially responsible for the meteoric rise of content networks like Facebook, Instagram and the likes. Prior to this ( discounting MySpace here ) there was no way to broadcast your activities to a wide audience. Tales of such adventures would spread either via word of mouth or by passing photos to friends and family you’d meet.\n\nThen there is this term “FOMO”. YOLO is so 2000's. FOMO or “Fear Of Missing Out” is the negative counterpart of YOLO. While YOLO looks to live life on a high, FOMO encourages doubt and uncertainty. Typical millennials. To explain by analogy — by posting your YOLO content, you might be brewing FOMO in someone else and when it is that person’s chance to YOLO, it could create FOMO in someone else. At first glance, this might seem confusing or plain stupid, but if you were to scratch the surface, you might get a better picture of the human psyche. Some people might argue with this, but the yearning to achieve more and do more, coupled with a sense of greed and avarice is the a pretty crucial factor in the engine propagating the growth of social behaviors; as well as consequently, usage patterns of social networks.\n\nWith Medium, its fundamentally the same thing but with a different outcome in mind. Here, the objective is not to bedazzle people in a short time span with your extravagant adventures but instead, do the same thing with your wits and thoughts. It cannot be disputed that millennials and consequently Gen Z’ers are losing attention far more quickly than before as is evidenced by the infographic below-\n\nIn addition, 47% of consumers expect a web page to be loaded in under 2 seconds. We will go past a link/page if it takes more than TWO SECONDS! In such an age of dwindling attention spans, it is no surprise that Medium gravitated to announcing upfront how long articles take to read. It quickly weeds people who will stay away from longer articles while attracts people to short, quick reads. The fact that there is a platform where people can publish thoughtful content that can be made available to a multitude of people is truly a great value proposition. But herein lies the crux of all social network behavior.\nFor Medium, it is “Recommends”, for Instagram it is “Hearts”, for Facebook it is “Likes”, for Snapchat it is “Views”. This is the holy grail of all human behavior on social networks. It is the quest to achieve the highest discoverability as possible. Getting your content seen by as many people as possible is a HUGE driver of all content being posted. For some people it might be the amount of content consumers within their private ( closed-off ) network while for others it is across a broader spectrum of public users ( open to all ). I am no scientist but the rush that people seem to get from seeing their content viewed/appreciated by as many people as possible is akin to the high you feel from having a good workout at the gym or doing something truly fulfilling. It is also very much like a sugar high in that, after having achieved a certain number of ‘likes’ the first time, the only way to satiate appetite is to exceed your views/likes the following time. There is some research here, here and here which tries to explain why we gravitate towards this kind of behavior. This can be a maniacal cycle and lead to an obsession around statistics of a certain content publication. People who publish their content constantly check their apps/website profiles to see if the number of people appreciating their posts or following them, is increasing. I am not pretending to be above this phenomenon and have definitely fallen prey to this. It is this feeling of being appreciated by others ( strangers or otherwise ) and having a chip on the shoulder of highest likes/recommends/hearts/retweets that, in my opinion, is the main reason for the continued success of social networks.\nIn all likelihood, we might not see a reduction in content-creation any time soon and most probably will only see an uptick in the next few years. However, it is important to remember to use these content platforms as a force for good and to not let stats on likes and followers get in the way of focusing on the most important things in our lives.\n\n_\"Our current obsession with creativity is the result of our continued striving for immortality in an era when most people no longer believe in an after-life.\" Ariana Huffington_",
    "_id": "millenials.mdx",
    "_raw": {
      "flattenedPath": "millenials"
    },
    "body": {
      "raw": "“Make it simple. Make it memorable. Make it inviting to look at. Make it fun to read.” — Leo Burnett\n\nIn a strictly observational sense, ours is a society obsessed with self indulgence and self obsession. I attribute this narcissism due to our passion for publishing content about ourselves. I am a millennial, we are a content creating generation and are the most prolific content creating generation to have been seen thus far. With avenues like Instagram and Snapchat we create stories, snaps, pictures, videos and post it for the world to see. Using social networks like Facebook , Twitter and Reddit ( sorry Reddit, you are kind of like a social network ), we are posting links, photos, experiences, news articles, memes and gifs for the world to see. On YouTube, Vimeo and other video sharing websites, we are seeing a new generation of content rockstars like Casey Neistat and PewDiePie. With Medium, PostHaven, WordPress and other blog outlets, we are enunciating our thoughts at rates never seen before. The content deluge is continuous and at times overwhelming for all people concerned.\n\nTo give you a sense of how much content is being created regularly, here are some numbers I scraped off the interwebs ; for every minute —\n\n- Email users send 204,000,000 messages\n- 3,567,850 text messages are sent\n- Google receives over 4,000,000 search queries\n- Snapchat users watch 6,944,444 videos\n- Uber passengers take 694 rides\n- Google translates 69,500,000 words\n- Blog writers post 1400 new blog posts\n- Facebook users share 2,460,000 pieces of content\n- Facebook users like 4,166,667 times\n- Twitter users tweet 347,222 times\n- Netflix subscribers stream 86,805 hours of video\n- Amazon makes $83,000 in online sales\n- Tinder users swipe 972,222 times\n- Whats App users share 347,222 photos\n- Instagram users post 216,000 new photos\n- Instagram users like 2,430,555 times\n- Pandora users listen to 61,141 hours of music\n- Apple users download 48,000 apps\n- Yelp users post 26,380 reviews\n- Skype users connect for 23,300 hours\n- Vine users share 8,333 videos\n- Pinterest users pin 3,472 images\n- Youtube users upload 300 hours of video\n\n_Source : http://bit.ly/2agpt2g ; http://bit.ly/2qE7tL8;_\n\nThis is in one. single. minute. Let that sink in. Lest you get too comfortable with that, here is an infographic of how much data we end up creating each year — _Source : http://bit.ly/2h4QPjq_\n\nPerhaps the above infographic is a bit misleading because its not just the content we are creating on social media but also the data being generated by companies, governments; the whole enchilada. When I read statistics of this content barrage, it gives me the same sense of amazement I get when I read about something like this — some of whose highlights include numbers like the Amazon River pumps out enough water each day to provide New York City’s water needs for nine years or that the Amazon forest releases 20 billion tonnes of moisture into the atmosphere every day, equivalent to 8,000,000 swimming pools! I digress but what cannot be denied is the sheer volume of data cascading into our lives each and every minute of each and every day.\nLet us for a moment think about the people who are creating this content. In particular, user generated content- the content people create willingly and put it up for the world to see. I am a content creator at this very moment with this Medium article, so I want to delve into reasons why my fellow content creators and I go through the trouble of generating original and personal content. Since there are different content networks targeting wildly different human behaviors, I will try to go into the rabbit hole keeping in mind 3 networks —\n\nFacebook — Due to a large user base and being “the” definitive social network of our era\n\nSnapchat — New kid on the block (for all intents and purposes ) that upended the status quo established by Facebook by approaching sharing with a different perspective\n\nMedium — The stomping grounds of ideologues or at least the perception that most writers have of their craft and form of delivery. By making “blog” writing cool again and achieving discoverability to a wider audience, Medium has changed the way people consume articles and news in the recent modern world.\nThe first reason that jumps to mind is self-expression. Everyone wants to feel distinct and have experiences that are fundamentally unique. YOLO or ‘You Only Live Once’ used to be the latent anthem of all adventures. I mean if you only live once, you gotta live your best life; and while you live your best life why not showcase the best experiences to your friends and family. This is partially responsible for the meteoric rise of content networks like Facebook, Instagram and the likes. Prior to this ( discounting MySpace here ) there was no way to broadcast your activities to a wide audience. Tales of such adventures would spread either via word of mouth or by passing photos to friends and family you’d meet.\n\nThen there is this term “FOMO”. YOLO is so 2000's. FOMO or “Fear Of Missing Out” is the negative counterpart of YOLO. While YOLO looks to live life on a high, FOMO encourages doubt and uncertainty. Typical millennials. To explain by analogy — by posting your YOLO content, you might be brewing FOMO in someone else and when it is that person’s chance to YOLO, it could create FOMO in someone else. At first glance, this might seem confusing or plain stupid, but if you were to scratch the surface, you might get a better picture of the human psyche. Some people might argue with this, but the yearning to achieve more and do more, coupled with a sense of greed and avarice is the a pretty crucial factor in the engine propagating the growth of social behaviors; as well as consequently, usage patterns of social networks.\n\nWith Medium, its fundamentally the same thing but with a different outcome in mind. Here, the objective is not to bedazzle people in a short time span with your extravagant adventures but instead, do the same thing with your wits and thoughts. It cannot be disputed that millennials and consequently Gen Z’ers are losing attention far more quickly than before as is evidenced by the infographic below-\n\nIn addition, 47% of consumers expect a web page to be loaded in under 2 seconds. We will go past a link/page if it takes more than TWO SECONDS! In such an age of dwindling attention spans, it is no surprise that Medium gravitated to announcing upfront how long articles take to read. It quickly weeds people who will stay away from longer articles while attracts people to short, quick reads. The fact that there is a platform where people can publish thoughtful content that can be made available to a multitude of people is truly a great value proposition. But herein lies the crux of all social network behavior.\nFor Medium, it is “Recommends”, for Instagram it is “Hearts”, for Facebook it is “Likes”, for Snapchat it is “Views”. This is the holy grail of all human behavior on social networks. It is the quest to achieve the highest discoverability as possible. Getting your content seen by as many people as possible is a HUGE driver of all content being posted. For some people it might be the amount of content consumers within their private ( closed-off ) network while for others it is across a broader spectrum of public users ( open to all ). I am no scientist but the rush that people seem to get from seeing their content viewed/appreciated by as many people as possible is akin to the high you feel from having a good workout at the gym or doing something truly fulfilling. It is also very much like a sugar high in that, after having achieved a certain number of ‘likes’ the first time, the only way to satiate appetite is to exceed your views/likes the following time. There is some research here, here and here which tries to explain why we gravitate towards this kind of behavior. This can be a maniacal cycle and lead to an obsession around statistics of a certain content publication. People who publish their content constantly check their apps/website profiles to see if the number of people appreciating their posts or following them, is increasing. I am not pretending to be above this phenomenon and have definitely fallen prey to this. It is this feeling of being appreciated by others ( strangers or otherwise ) and having a chip on the shoulder of highest likes/recommends/hearts/retweets that, in my opinion, is the main reason for the continued success of social networks.\nIn all likelihood, we might not see a reduction in content-creation any time soon and most probably will only see an uptick in the next few years. However, it is important to remember to use these content platforms as a force for good and to not let stats on likes and followers get in the way of focusing on the most important things in our lives.\n\n_\"Our current obsession with creativity is the result of our continued striving for immortality in an era when most people no longer believe in an after-life.\" Ariana Huffington_",
      "code": "“Make it simple. Make it memorable. Make it inviting to look at. Make it fun to read.” — Leo Burnett\n\nIn a strictly observational sense, ours is a society obsessed with self indulgence and self obsession. I attribute this narcissism due to our passion for publishing content about ourselves. I am a millennial, we are a content creating generation and are the most prolific content creating generation to have been seen thus far. With avenues like Instagram and Snapchat we create stories, snaps, pictures, videos and post it for the world to see. Using social networks like Facebook , Twitter and Reddit ( sorry Reddit, you are kind of like a social network ), we are posting links, photos, experiences, news articles, memes and gifs for the world to see. On YouTube, Vimeo and other video sharing websites, we are seeing a new generation of content rockstars like Casey Neistat and PewDiePie. With Medium, PostHaven, WordPress and other blog outlets, we are enunciating our thoughts at rates never seen before. The content deluge is continuous and at times overwhelming for all people concerned.\n\nTo give you a sense of how much content is being created regularly, here are some numbers I scraped off the interwebs ; for every minute —\n\n- Email users send 204,000,000 messages\n- 3,567,850 text messages are sent\n- Google receives over 4,000,000 search queries\n- Snapchat users watch 6,944,444 videos\n- Uber passengers take 694 rides\n- Google translates 69,500,000 words\n- Blog writers post 1400 new blog posts\n- Facebook users share 2,460,000 pieces of content\n- Facebook users like 4,166,667 times\n- Twitter users tweet 347,222 times\n- Netflix subscribers stream 86,805 hours of video\n- Amazon makes $83,000 in online sales\n- Tinder users swipe 972,222 times\n- Whats App users share 347,222 photos\n- Instagram users post 216,000 new photos\n- Instagram users like 2,430,555 times\n- Pandora users listen to 61,141 hours of music\n- Apple users download 48,000 apps\n- Yelp users post 26,380 reviews\n- Skype users connect for 23,300 hours\n- Vine users share 8,333 videos\n- Pinterest users pin 3,472 images\n- Youtube users upload 300 hours of video\n\n_Source : http://bit.ly/2agpt2g ; http://bit.ly/2qE7tL8;_\n\nThis is in one. single. minute. Let that sink in. Lest you get too comfortable with that, here is an infographic of how much data we end up creating each year — _Source : http://bit.ly/2h4QPjq_\n\nPerhaps the above infographic is a bit misleading because its not just the content we are creating on social media but also the data being generated by companies, governments; the whole enchilada. When I read statistics of this content barrage, it gives me the same sense of amazement I get when I read about something like this — some of whose highlights include numbers like the Amazon River pumps out enough water each day to provide New York City’s water needs for nine years or that the Amazon forest releases 20 billion tonnes of moisture into the atmosphere every day, equivalent to 8,000,000 swimming pools! I digress but what cannot be denied is the sheer volume of data cascading into our lives each and every minute of each and every day.\nLet us for a moment think about the people who are creating this content. In particular, user generated content- the content people create willingly and put it up for the world to see. I am a content creator at this very moment with this Medium article, so I want to delve into reasons why my fellow content creators and I go through the trouble of generating original and personal content. Since there are different content networks targeting wildly different human behaviors, I will try to go into the rabbit hole keeping in mind 3 networks —\n\nFacebook — Due to a large user base and being “the” definitive social network of our era\n\nSnapchat — New kid on the block (for all intents and purposes ) that upended the status quo established by Facebook by approaching sharing with a different perspective\n\nMedium — The stomping grounds of ideologues or at least the perception that most writers have of their craft and form of delivery. By making “blog” writing cool again and achieving discoverability to a wider audience, Medium has changed the way people consume articles and news in the recent modern world.\nThe first reason that jumps to mind is self-expression. Everyone wants to feel distinct and have experiences that are fundamentally unique. YOLO or ‘You Only Live Once’ used to be the latent anthem of all adventures. I mean if you only live once, you gotta live your best life; and while you live your best life why not showcase the best experiences to your friends and family. This is partially responsible for the meteoric rise of content networks like Facebook, Instagram and the likes. Prior to this ( discounting MySpace here ) there was no way to broadcast your activities to a wide audience. Tales of such adventures would spread either via word of mouth or by passing photos to friends and family you’d meet.\n\nThen there is this term “FOMO”. YOLO is so 2000's. FOMO or “Fear Of Missing Out” is the negative counterpart of YOLO. While YOLO looks to live life on a high, FOMO encourages doubt and uncertainty. Typical millennials. To explain by analogy — by posting your YOLO content, you might be brewing FOMO in someone else and when it is that person’s chance to YOLO, it could create FOMO in someone else. At first glance, this might seem confusing or plain stupid, but if you were to scratch the surface, you might get a better picture of the human psyche. Some people might argue with this, but the yearning to achieve more and do more, coupled with a sense of greed and avarice is the a pretty crucial factor in the engine propagating the growth of social behaviors; as well as consequently, usage patterns of social networks.\n\nWith Medium, its fundamentally the same thing but with a different outcome in mind. Here, the objective is not to bedazzle people in a short time span with your extravagant adventures but instead, do the same thing with your wits and thoughts. It cannot be disputed that millennials and consequently Gen Z’ers are losing attention far more quickly than before as is evidenced by the infographic below-\n\nIn addition, 47% of consumers expect a web page to be loaded in under 2 seconds. We will go past a link/page if it takes more than TWO SECONDS! In such an age of dwindling attention spans, it is no surprise that Medium gravitated to announcing upfront how long articles take to read. It quickly weeds people who will stay away from longer articles while attracts people to short, quick reads. The fact that there is a platform where people can publish thoughtful content that can be made available to a multitude of people is truly a great value proposition. But herein lies the crux of all social network behavior.\nFor Medium, it is “Recommends”, for Instagram it is “Hearts”, for Facebook it is “Likes”, for Snapchat it is “Views”. This is the holy grail of all human behavior on social networks. It is the quest to achieve the highest discoverability as possible. Getting your content seen by as many people as possible is a HUGE driver of all content being posted. For some people it might be the amount of content consumers within their private ( closed-off ) network while for others it is across a broader spectrum of public users ( open to all ). I am no scientist but the rush that people seem to get from seeing their content viewed/appreciated by as many people as possible is akin to the high you feel from having a good workout at the gym or doing something truly fulfilling. It is also very much like a sugar high in that, after having achieved a certain number of ‘likes’ the first time, the only way to satiate appetite is to exceed your views/likes the following time. There is some research here, here and here which tries to explain why we gravitate towards this kind of behavior. This can be a maniacal cycle and lead to an obsession around statistics of a certain content publication. People who publish their content constantly check their apps/website profiles to see if the number of people appreciating their posts or following them, is increasing. I am not pretending to be above this phenomenon and have definitely fallen prey to this. It is this feeling of being appreciated by others ( strangers or otherwise ) and having a chip on the shoulder of highest likes/recommends/hearts/retweets that, in my opinion, is the main reason for the continued success of social networks.\nIn all likelihood, we might not see a reduction in content-creation any time soon and most probably will only see an uptick in the next few years. However, it is important to remember to use these content platforms as a force for good and to not let stats on likes and followers get in the way of focusing on the most important things in our lives.\n\n_\"Our current obsession with creativity is the result of our continued striving for immortality in an era when most people no longer believe in an after-life.\" Ariana Huffington_"
    },
    "slug": "millenials",
    "path": "posts/millenials",
    "filePath": "millenials.mdx",
    "toc": [],
    "readingTime": {
      "text": "8 min read",
      "minutes": 7.755,
      "time": 465300,
      "words": 1551
    },
    "structuredData": {
      "@context": "https://schema.org",
      "@type": "BlogPosting",
      "headline": "Why Are Millennials Creating All This Content?",
      "datePublished": "2017-06-09T00:00:00.000Z",
      "dateModified": "2017-06-09T00:00:00.000Z",
      "description": "The ever increasing trend of content creation",
      "image": "/static/images/twitter-card.png",
      "url": "https://arjunrao.co/posts/millenials"
    }
  },
  {
    "title": "Why you should practice Nemawashi — The Art of Obtaining Consensus",
    "date": "2024-05-24T00:00:00.000Z",
    "tags": [
      "productivity",
      "consensus",
      "longterm"
    ],
    "lastmod": undefined,
    "draft": true,
    "summary": "The secret of effective decision making",
    "images": [
      "/static/images/nemawashi.jpeg"
    ],
    "authors": undefined,
    "layout": undefined,
    "bibliography": undefined,
    "canonicalUrl": undefined,
    "content": "Oftentimes people find it hard to convince others of their idea. There can be many reasons for this. Trying to convince someone is a tough ask. The person conveying the idea either doesn’t understand their audience, haven’t done the right amount of research to explain it, haven’t crafted a crisp enough message and so on. Consensus is hard — so many people, so many opinions. \n\n![](/static/images/consensus.webp)\n\nAs you get more senior in your organization, getting consensus is table stakes. You are expected to make suggestions and bring new ideas to the table across cross functional stakeholders. Unfortunately the moment your idea gets put on the table, it receives tremendous pushback and that prevents the idea from making any real headway. Sound familiar? You’re not alone.\n\nIn fact, there is plenty of research that suggests if one person in a group raises concerns, odds are that influences the others to question the sanctity of the idea — the idea of Information Cascade. This is precisely why it is critical to learn the technique of Nemawashi. \n\n![](/static/images/nemawashi.jpeg)\n\n\n## What is Nemawashi?\n\nI think of Nemawashi as “hallway review” or as wikipedia (see below) refers to it as “laying the groundwork”. It is the act of voicing out your ideas to smaller groups of people before you put the idea in front of a larger group. You get individual buy-in into your idea and build on that to get momentum with the larger group. Any feedback you get from individuals, and incrementally bigger groups, can be baked into your proposal. Once you do this for all the important stakeholders of the idea, you have gotten all the critical feedback you need to ensure no one has any visceral reactions to your idea. \n\nNow, when you put this in front of the whole group, you will basically get no major resistance because everyone has already given their most important feedback. At most you will receive requests for some cosmetic changes from other participants in your sessions. \n\nNemawashi is a crucial component of your leadership toolkit. It requires some work upfront but is so powerful at delivering results. Use it to be more effective at driving change and a fresh perspective. \n\n## Origins of Nemawashi for the curious \n\nPer Wikipedia\n\n> Nemawashi (根回し) is a Japanese business informal process of laying the foundation for some proposed change or project by talking to the people concerned and gathering support and feedback before a formal announcement. It is considered an important element in any major change in the Japanese business environment before any formal steps are taken. Successful nemawashi enables changes to be carried out with the consent of all sides, avoiding embarrassment.\n\nFor the history of how this came to be, Wikipedia goes on to explain - \n\n> Nemawashi literally translates as “turning the roots”, from ne (根, “root”) and mawasu (回す, “to turn something, to put something around something else”). Its original meaning was literal: in preparation for transplanting a tree, one would carefully dig around a tree some time before transplanting, and trim the roots to encourage the growth of smaller roots that will help the tree become established in its new location.[1][2][3][4][5] Nemawashi is often cited as an example of a Japanese word which is difficult to translate effectively, because it is tied so closely to Japanese culture itself, although it is often translated as “laying the groundwork.”\n\n---\n\n⭐ If you liked this, be sure to ♥️ this post and follow/subscribe at https://a1engineering.substack.com/subscribe! ⭐",
    "_id": "nemawashi.mdx",
    "_raw": {
      "flattenedPath": "nemawashi"
    },
    "body": {
      "raw": "Oftentimes people find it hard to convince others of their idea. There can be many reasons for this. Trying to convince someone is a tough ask. The person conveying the idea either doesn’t understand their audience, haven’t done the right amount of research to explain it, haven’t crafted a crisp enough message and so on. Consensus is hard — so many people, so many opinions. \n\n![](/static/images/consensus.webp)\n\nAs you get more senior in your organization, getting consensus is table stakes. You are expected to make suggestions and bring new ideas to the table across cross functional stakeholders. Unfortunately the moment your idea gets put on the table, it receives tremendous pushback and that prevents the idea from making any real headway. Sound familiar? You’re not alone.\n\nIn fact, there is plenty of research that suggests if one person in a group raises concerns, odds are that influences the others to question the sanctity of the idea — the idea of Information Cascade. This is precisely why it is critical to learn the technique of Nemawashi. \n\n![](/static/images/nemawashi.jpeg)\n\n\n## What is Nemawashi?\n\nI think of Nemawashi as “hallway review” or as wikipedia (see below) refers to it as “laying the groundwork”. It is the act of voicing out your ideas to smaller groups of people before you put the idea in front of a larger group. You get individual buy-in into your idea and build on that to get momentum with the larger group. Any feedback you get from individuals, and incrementally bigger groups, can be baked into your proposal. Once you do this for all the important stakeholders of the idea, you have gotten all the critical feedback you need to ensure no one has any visceral reactions to your idea. \n\nNow, when you put this in front of the whole group, you will basically get no major resistance because everyone has already given their most important feedback. At most you will receive requests for some cosmetic changes from other participants in your sessions. \n\nNemawashi is a crucial component of your leadership toolkit. It requires some work upfront but is so powerful at delivering results. Use it to be more effective at driving change and a fresh perspective. \n\n## Origins of Nemawashi for the curious \n\nPer Wikipedia\n\n> Nemawashi (根回し) is a Japanese business informal process of laying the foundation for some proposed change or project by talking to the people concerned and gathering support and feedback before a formal announcement. It is considered an important element in any major change in the Japanese business environment before any formal steps are taken. Successful nemawashi enables changes to be carried out with the consent of all sides, avoiding embarrassment.\n\nFor the history of how this came to be, Wikipedia goes on to explain - \n\n> Nemawashi literally translates as “turning the roots”, from ne (根, “root”) and mawasu (回す, “to turn something, to put something around something else”). Its original meaning was literal: in preparation for transplanting a tree, one would carefully dig around a tree some time before transplanting, and trim the roots to encourage the growth of smaller roots that will help the tree become established in its new location.[1][2][3][4][5] Nemawashi is often cited as an example of a Japanese word which is difficult to translate effectively, because it is tied so closely to Japanese culture itself, although it is often translated as “laying the groundwork.”\n\n---\n\n⭐ If you liked this, be sure to ♥️ this post and follow/subscribe at https://a1engineering.substack.com/subscribe! ⭐",
      "code": "Oftentimes people find it hard to convince others of their idea. There can be many reasons for this. Trying to convince someone is a tough ask. The person conveying the idea either doesn’t understand their audience, haven’t done the right amount of research to explain it, haven’t crafted a crisp enough message and so on. Consensus is hard — so many people, so many opinions. \n\n![](/static/images/consensus.webp)\n\nAs you get more senior in your organization, getting consensus is table stakes. You are expected to make suggestions and bring new ideas to the table across cross functional stakeholders. Unfortunately the moment your idea gets put on the table, it receives tremendous pushback and that prevents the idea from making any real headway. Sound familiar? You’re not alone.\n\nIn fact, there is plenty of research that suggests if one person in a group raises concerns, odds are that influences the others to question the sanctity of the idea — the idea of Information Cascade. This is precisely why it is critical to learn the technique of Nemawashi. \n\n![](/static/images/nemawashi.jpeg)\n\n\n## What is Nemawashi?\n\nI think of Nemawashi as “hallway review” or as wikipedia (see below) refers to it as “laying the groundwork”. It is the act of voicing out your ideas to smaller groups of people before you put the idea in front of a larger group. You get individual buy-in into your idea and build on that to get momentum with the larger group. Any feedback you get from individuals, and incrementally bigger groups, can be baked into your proposal. Once you do this for all the important stakeholders of the idea, you have gotten all the critical feedback you need to ensure no one has any visceral reactions to your idea. \n\nNow, when you put this in front of the whole group, you will basically get no major resistance because everyone has already given their most important feedback. At most you will receive requests for some cosmetic changes from other participants in your sessions. \n\nNemawashi is a crucial component of your leadership toolkit. It requires some work upfront but is so powerful at delivering results. Use it to be more effective at driving change and a fresh perspective. \n\n## Origins of Nemawashi for the curious \n\nPer Wikipedia\n\n> Nemawashi (根回し) is a Japanese business informal process of laying the foundation for some proposed change or project by talking to the people concerned and gathering support and feedback before a formal announcement. It is considered an important element in any major change in the Japanese business environment before any formal steps are taken. Successful nemawashi enables changes to be carried out with the consent of all sides, avoiding embarrassment.\n\nFor the history of how this came to be, Wikipedia goes on to explain - \n\n> Nemawashi literally translates as “turning the roots”, from ne (根, “root”) and mawasu (回す, “to turn something, to put something around something else”). Its original meaning was literal: in preparation for transplanting a tree, one would carefully dig around a tree some time before transplanting, and trim the roots to encourage the growth of smaller roots that will help the tree become established in its new location.[1][2][3][4][5] Nemawashi is often cited as an example of a Japanese word which is difficult to translate effectively, because it is tied so closely to Japanese culture itself, although it is often translated as “laying the groundwork.”\n\n---\n\n⭐ If you liked this, be sure to ♥️ this post and follow/subscribe at https://a1engineering.substack.com/subscribe! ⭐"
    },
    "slug": "nemawashi",
    "path": "posts/nemawashi",
    "filePath": "nemawashi.mdx",
    "toc": [],
    "readingTime": {
      "text": "3 min read",
      "minutes": 2.915,
      "time": 174900,
      "words": 583
    },
    "structuredData": {
      "@context": "https://schema.org",
      "@type": "BlogPosting",
      "headline": "Why you should practice Nemawashi — The Art of Obtaining Consensus",
      "datePublished": "2024-05-24T00:00:00.000Z",
      "dateModified": "2024-05-24T00:00:00.000Z",
      "description": "The secret of effective decision making",
      "image": "/static/images/nemawashi.jpeg",
      "url": "https://arjunrao.co/posts/nemawashi"
    }
  },
  {
    "title": "The Network Effect",
    "date": "2017-04-19T00:00:00.000Z",
    "tags": [
      "growth"
    ],
    "lastmod": undefined,
    "draft": false,
    "summary": "The importance of having a good network",
    "images": undefined,
    "authors": undefined,
    "layout": undefined,
    "bibliography": undefined,
    "canonicalUrl": undefined,
    "content": "Achieving success is not a formula. Being successful involves doing things, really difficult things. It is easy to do nothing and it is the basic premise of inertia; Newton’s First Law of Motion states that a body at rest will remain at rest unless an outside force acts on it. Human thought is something that is is a most vibrant force when in motion, but to get it into that state takes an action or an idea of herculean proportions.\n\nHaving observed the fact that its tough to achieve success, let me talk about something that doesn’t usually come up. Whenever people talk about other successful people, the grossly oversimplified conversation most typically, consists of :\n\n1. The person had a revolutionary ( or not so revolutionary ) idea\n\n2. Over a span of time, she/he slogged over the idea while being filled with self-doubt and failure\n\n3. Hit that magical spot of growth, which catapulted her/him into the successful person that they have become.\n\nThe part that is universally left out is something that I call ‘The Network Effect’; not to be confused with the term used in Economics. The Network Effect, in my definition, is the effect you benefit from by being in/around a successful network. It is what you gain (perhaps mutually) by being in contact with people who have achieved a heavy measure of success in their own venture. People who have achieved success didn’t benefit from The Network Effect serendipitously.\n\nIt is possible they grew up with people who were part of the Network already; examples of this are Evan Spiegel (Snapchat) , Donald Trump (no introductions needed) , Richard Branson and the list goes on. I don’t intend to imply that wealth necessarily played a part in their success story, but being exposed to a culture of high achievement and being placed in contact with people in highly influential positions, cannot be ignored as a part of this conversation.\n\nThen there are people who enter the Network. These are people who pivot from what they are doing on a daily basis and get in contact with members of the Network. Examples include getting mentored at Y Combinator. While the jury maybe out on this one, there is no doubt that by inviting co-founders over to their site, Y Combinator creates a congenial atmosphere for the network effect to proliferate through to budding entrepreneurs. By participating in shows like Shark Tank and coming in contact with high-profile investors and showing the strength of their products, the arteries of the Network Effect spread. Some people debate the merits of MBA programs at schools like MIT/Columbia/Wharton but what is an unquestionable truth, in my opinion, are the benefits of the Network Effect. You are placed in contact with a plethora of alpha individuals powering on a dynamically different level, that it will tend to elevate the status of the basest individuals.\n\nBeing mentored by a strong individual with a powerful Network presence, is something that should sought after, regardless of title or age. It must be said that to become influential, you must have access to influencers. As Jim Rohn famously quoted, we are the average of the five people we spend the most time with, this means that the more ambitious and focused people you spend your time with on a regular basis, the more lofty and accented your goals become.",
    "_id": "network.mdx",
    "_raw": {
      "flattenedPath": "network"
    },
    "body": {
      "raw": "Achieving success is not a formula. Being successful involves doing things, really difficult things. It is easy to do nothing and it is the basic premise of inertia; Newton’s First Law of Motion states that a body at rest will remain at rest unless an outside force acts on it. Human thought is something that is is a most vibrant force when in motion, but to get it into that state takes an action or an idea of herculean proportions.\n\nHaving observed the fact that its tough to achieve success, let me talk about something that doesn’t usually come up. Whenever people talk about other successful people, the grossly oversimplified conversation most typically, consists of :\n\n1. The person had a revolutionary ( or not so revolutionary ) idea\n\n2. Over a span of time, she/he slogged over the idea while being filled with self-doubt and failure\n\n3. Hit that magical spot of growth, which catapulted her/him into the successful person that they have become.\n\nThe part that is universally left out is something that I call ‘The Network Effect’; not to be confused with the term used in Economics. The Network Effect, in my definition, is the effect you benefit from by being in/around a successful network. It is what you gain (perhaps mutually) by being in contact with people who have achieved a heavy measure of success in their own venture. People who have achieved success didn’t benefit from The Network Effect serendipitously.\n\nIt is possible they grew up with people who were part of the Network already; examples of this are Evan Spiegel (Snapchat) , Donald Trump (no introductions needed) , Richard Branson and the list goes on. I don’t intend to imply that wealth necessarily played a part in their success story, but being exposed to a culture of high achievement and being placed in contact with people in highly influential positions, cannot be ignored as a part of this conversation.\n\nThen there are people who enter the Network. These are people who pivot from what they are doing on a daily basis and get in contact with members of the Network. Examples include getting mentored at Y Combinator. While the jury maybe out on this one, there is no doubt that by inviting co-founders over to their site, Y Combinator creates a congenial atmosphere for the network effect to proliferate through to budding entrepreneurs. By participating in shows like Shark Tank and coming in contact with high-profile investors and showing the strength of their products, the arteries of the Network Effect spread. Some people debate the merits of MBA programs at schools like MIT/Columbia/Wharton but what is an unquestionable truth, in my opinion, are the benefits of the Network Effect. You are placed in contact with a plethora of alpha individuals powering on a dynamically different level, that it will tend to elevate the status of the basest individuals.\n\nBeing mentored by a strong individual with a powerful Network presence, is something that should sought after, regardless of title or age. It must be said that to become influential, you must have access to influencers. As Jim Rohn famously quoted, we are the average of the five people we spend the most time with, this means that the more ambitious and focused people you spend your time with on a regular basis, the more lofty and accented your goals become.",
      "code": "Achieving success is not a formula. Being successful involves doing things, really difficult things. It is easy to do nothing and it is the basic premise of inertia; Newton’s First Law of Motion states that a body at rest will remain at rest unless an outside force acts on it. Human thought is something that is is a most vibrant force when in motion, but to get it into that state takes an action or an idea of herculean proportions.\n\nHaving observed the fact that its tough to achieve success, let me talk about something that doesn’t usually come up. Whenever people talk about other successful people, the grossly oversimplified conversation most typically, consists of :\n\n1. The person had a revolutionary ( or not so revolutionary ) idea\n\n2. Over a span of time, she/he slogged over the idea while being filled with self-doubt and failure\n\n3. Hit that magical spot of growth, which catapulted her/him into the successful person that they have become.\n\nThe part that is universally left out is something that I call ‘The Network Effect’; not to be confused with the term used in Economics. The Network Effect, in my definition, is the effect you benefit from by being in/around a successful network. It is what you gain (perhaps mutually) by being in contact with people who have achieved a heavy measure of success in their own venture. People who have achieved success didn’t benefit from The Network Effect serendipitously.\n\nIt is possible they grew up with people who were part of the Network already; examples of this are Evan Spiegel (Snapchat) , Donald Trump (no introductions needed) , Richard Branson and the list goes on. I don’t intend to imply that wealth necessarily played a part in their success story, but being exposed to a culture of high achievement and being placed in contact with people in highly influential positions, cannot be ignored as a part of this conversation.\n\nThen there are people who enter the Network. These are people who pivot from what they are doing on a daily basis and get in contact with members of the Network. Examples include getting mentored at Y Combinator. While the jury maybe out on this one, there is no doubt that by inviting co-founders over to their site, Y Combinator creates a congenial atmosphere for the network effect to proliferate through to budding entrepreneurs. By participating in shows like Shark Tank and coming in contact with high-profile investors and showing the strength of their products, the arteries of the Network Effect spread. Some people debate the merits of MBA programs at schools like MIT/Columbia/Wharton but what is an unquestionable truth, in my opinion, are the benefits of the Network Effect. You are placed in contact with a plethora of alpha individuals powering on a dynamically different level, that it will tend to elevate the status of the basest individuals.\n\nBeing mentored by a strong individual with a powerful Network presence, is something that should sought after, regardless of title or age. It must be said that to become influential, you must have access to influencers. As Jim Rohn famously quoted, we are the average of the five people we spend the most time with, this means that the more ambitious and focused people you spend your time with on a regular basis, the more lofty and accented your goals become."
    },
    "slug": "network",
    "path": "posts/network",
    "filePath": "network.mdx",
    "toc": [],
    "readingTime": {
      "text": "3 min read",
      "minutes": 2.825,
      "time": 169500,
      "words": 565
    },
    "structuredData": {
      "@context": "https://schema.org",
      "@type": "BlogPosting",
      "headline": "The Network Effect",
      "datePublished": "2017-04-19T00:00:00.000Z",
      "dateModified": "2017-04-19T00:00:00.000Z",
      "description": "The importance of having a good network",
      "image": "/static/images/twitter-card.png",
      "url": "https://arjunrao.co/posts/network"
    }
  },
  {
    "title": "Observations and opinions on navigating work and life",
    "date": "2019-04-09T00:00:00.000Z",
    "tags": [
      "philosophy"
    ],
    "lastmod": undefined,
    "draft": false,
    "summary": "Principles of my life (when I am 30'sh)",
    "images": undefined,
    "authors": undefined,
    "layout": undefined,
    "bibliography": undefined,
    "canonicalUrl": undefined,
    "content": "50 (for now!) principles, about life and work in general, that I have said to myself in the past, and wanted to codify.\n\n- Never underestimate the importance of the people around you, and the impact you have on them.\n- If you fight the good fight and you fight it for the right reasons, people will appreciate you for who you are.\n- Don't burn any bridges, because you never know when your paths will cross again and in what capacity.\n- No (wo)man is an island. Decisions that you make, have a far broader impact than just yourself.\n- Listen to the other voices in the room and build out the decision tree to formulate/translate your own thoughts. If you have a differing opinion, voice it, because you won't always be asked for it.\n- It is easy to criticize and not that easy to empathize. Before criticizing decisions other people made, first think of what kind of assumptions might have been made to come to that conclusion, and that might help with empathizing.\n- Don't be a yes (wo)man and don't be a no (wo)man either. Others like minds that poke holes in theories, with rational arguments, but do not like someone who is always a contrarian, for the sake of it.\n- When you present a problem, make sure you have a possible solution to go with it, even if it is nascent/half-baked. If you always bring only problems, and no solutions, it isn't helpful to anyone.\n- Always be positive and energetic around your team. Positivity is contagious but negativity even more so.\n- Have conviction in what you believe, based on gut instinct or facts. Have confidence in your own decisions and stick by it.\n- Don't fall for the buzzwords and the shiny toys. As per Occam's razor, the simplest solutions are often the right ones.\n- When in doubt or confusion, seek help. Spinning wheels, twiddling thumbs or presenting face-time, in an effort to look productive, while headed nowhere, is a waste of time and effort.\n- As much as it is a cliche, no question is a dumb question.\n- Always try to build something of \"true\" value. People you work with along the way, as well as end users, will always know and appreciate the significance of a maker who cares.\n- Multiple choices have diminishing returns. Marie Kondo the options, so that you can make a decision faster and more efficiently. Follow the principle of Essentialism. Instead of dispersing your energy in a 100 directions, focus all that energy in 1 direction.\n- Know when the juice is not worth the squeeze. This is with respect to holding positions in a discussion/argument, effort being put into building something out, etc.\n- Don't make money the sole measure of success. Money makes certain things simpler, but makes other things more complicated. Invest in good projects and healthy relationships as a priority, and money will find its way.\n- Perfect is the enemy of good. Don't procrastinate to deliver on a result. If you aren't embarassed of what you shipped, then you are probably too late. Avoid paralysis by analysis.\n- Don't compete in a rat race. Even if you win, you are still a rat.\n- Don't wing your career. It isn't something that you can just do on the fly. Be deliberate about the skills you lack and the direction you need to take, while making the important decisions.\n- Inspire and inform people around you. Inspiration comes in all shapes and forms. It isn't always an a-ha moment.\n- If you have achieved a modicum of success, give back to the community. The social fabric binds the sanity of the collective.\n- Don't silo and hide information from other people. Being transparent will help you and others achieve their tasks and objectives much more efficiently.\n- If your subordinate outshines you, don't be petty or vengeful. Them achieving that success is a measure of your mentorship/leadership abilities.\n- As a general rule, don't discuss politics, religion or race at a workplace.\n- Always be open to new ideas and differing points of view. You may or may not agree with them today, but they might help shape an opinion on a completely different topic, some other time.\n- Take ownership and accountability of things you are responsible for. If someone trusts you to do something, you need to be accountable for that.\n- Task determination and execution should be as decentralized as possible. The more the concentration of decision-making capabilities, the more the bottlenecks and points of failure.\n- Different people have different strengths and weaknesses. If you find out what these are for individual people, your value-add increases drastically.\n- Increase diversity of thought in your decision making process. You agreeing, all the time, with a bunch of other people, who have no differing opinions, serves no purpose.\n- If you truly believe in something, give it your all.\n- Always be hungry and curious for learning. If you do not have the knowledge, be a sponge.\n- You are unique and, by extension, your perspectives that you bring to the table are unique. Dismiss any feelings of \"imposter syndrome\" you have and seize the opportunity. Carpe diem.\n- If you are stuck with a problem, trying to jackhammer it, for extended periods of time, might be completely unhelpful. Letting it sit overnight, and seeing it with a fresh set of eyes and neuron connections, might help facilitate the solution.\n- As General Patton said - \"Do everything you ask of those you command\". Don't try to pass off some grunt work to someone else, just to shirk responsibility, if you yourself would never want to do it.\n- Professional life is a fine balance between being a one-trick-pony and a jack-of-all-trades-master-of-none.\n- Be greedy with your ideas and frugal with your implementations. Ideas can be cheap, your time isn't.\n- If you are building a product or designing something, be your own first customer. Try to understand and predict what kind of pains a first user will encounter.\n- Before jumping into any assignment given to you, ask all the right questions prior to starting it. Taking a step back and applying some critical thinking to the problem at hand will only move towards a positive outcome.\n- Don't be too attached to an idea. An idea held too long without rationale is just an ideology.\n- If someone isn't agreeing to your point of view, it could be that you are not conveying your idea clearly enough, rather than the other person being intransigient.\n- While making your argument, don't be polemic or pedantic. People don't like being attacked or talked down to.\n- Less is more. Some people like to pad their words with jargon and fancy sounding terms for no apparent reason, but it just reduces the potency of their point and you will tend to lose interest in what they have to say.\n- If you notice problems/issues, see what you can do to solve it rather than resorting to complaining.\n- If a lot of people are complaining about something, rather than joining them, think about how it can be solved. Opportunities abound where inaction lays.\n- When executing a plan, always have a plan B. No plan survives the first contact intact.\n- If you do not know something, admit it rather than making an elaborate excuse to cover up your lack of expertise. You will be respected for your honesty.\n- Don't lose touch with reality. Always make an attempt to feel the pulse of the community around you, below and above you.\n- A job is about 3 things - security/peace of mind, money/financially rewarding and learning/being challenged. Many times, you can find at most, 2 out of 3 at a place. If you find all 3, consider yourself lucky.\n- Don't be afraid of failure - not every project or endeavor can be successful. If you haven't failed at anything, you haven't tried to get out of your comfort zone and tried anything worthwhile yet.",
    "_id": "observations.mdx",
    "_raw": {
      "flattenedPath": "observations"
    },
    "body": {
      "raw": "50 (for now!) principles, about life and work in general, that I have said to myself in the past, and wanted to codify.\n\n- Never underestimate the importance of the people around you, and the impact you have on them.\n- If you fight the good fight and you fight it for the right reasons, people will appreciate you for who you are.\n- Don't burn any bridges, because you never know when your paths will cross again and in what capacity.\n- No (wo)man is an island. Decisions that you make, have a far broader impact than just yourself.\n- Listen to the other voices in the room and build out the decision tree to formulate/translate your own thoughts. If you have a differing opinion, voice it, because you won't always be asked for it.\n- It is easy to criticize and not that easy to empathize. Before criticizing decisions other people made, first think of what kind of assumptions might have been made to come to that conclusion, and that might help with empathizing.\n- Don't be a yes (wo)man and don't be a no (wo)man either. Others like minds that poke holes in theories, with rational arguments, but do not like someone who is always a contrarian, for the sake of it.\n- When you present a problem, make sure you have a possible solution to go with it, even if it is nascent/half-baked. If you always bring only problems, and no solutions, it isn't helpful to anyone.\n- Always be positive and energetic around your team. Positivity is contagious but negativity even more so.\n- Have conviction in what you believe, based on gut instinct or facts. Have confidence in your own decisions and stick by it.\n- Don't fall for the buzzwords and the shiny toys. As per Occam's razor, the simplest solutions are often the right ones.\n- When in doubt or confusion, seek help. Spinning wheels, twiddling thumbs or presenting face-time, in an effort to look productive, while headed nowhere, is a waste of time and effort.\n- As much as it is a cliche, no question is a dumb question.\n- Always try to build something of \"true\" value. People you work with along the way, as well as end users, will always know and appreciate the significance of a maker who cares.\n- Multiple choices have diminishing returns. Marie Kondo the options, so that you can make a decision faster and more efficiently. Follow the principle of Essentialism. Instead of dispersing your energy in a 100 directions, focus all that energy in 1 direction.\n- Know when the juice is not worth the squeeze. This is with respect to holding positions in a discussion/argument, effort being put into building something out, etc.\n- Don't make money the sole measure of success. Money makes certain things simpler, but makes other things more complicated. Invest in good projects and healthy relationships as a priority, and money will find its way.\n- Perfect is the enemy of good. Don't procrastinate to deliver on a result. If you aren't embarassed of what you shipped, then you are probably too late. Avoid paralysis by analysis.\n- Don't compete in a rat race. Even if you win, you are still a rat.\n- Don't wing your career. It isn't something that you can just do on the fly. Be deliberate about the skills you lack and the direction you need to take, while making the important decisions.\n- Inspire and inform people around you. Inspiration comes in all shapes and forms. It isn't always an a-ha moment.\n- If you have achieved a modicum of success, give back to the community. The social fabric binds the sanity of the collective.\n- Don't silo and hide information from other people. Being transparent will help you and others achieve their tasks and objectives much more efficiently.\n- If your subordinate outshines you, don't be petty or vengeful. Them achieving that success is a measure of your mentorship/leadership abilities.\n- As a general rule, don't discuss politics, religion or race at a workplace.\n- Always be open to new ideas and differing points of view. You may or may not agree with them today, but they might help shape an opinion on a completely different topic, some other time.\n- Take ownership and accountability of things you are responsible for. If someone trusts you to do something, you need to be accountable for that.\n- Task determination and execution should be as decentralized as possible. The more the concentration of decision-making capabilities, the more the bottlenecks and points of failure.\n- Different people have different strengths and weaknesses. If you find out what these are for individual people, your value-add increases drastically.\n- Increase diversity of thought in your decision making process. You agreeing, all the time, with a bunch of other people, who have no differing opinions, serves no purpose.\n- If you truly believe in something, give it your all.\n- Always be hungry and curious for learning. If you do not have the knowledge, be a sponge.\n- You are unique and, by extension, your perspectives that you bring to the table are unique. Dismiss any feelings of \"imposter syndrome\" you have and seize the opportunity. Carpe diem.\n- If you are stuck with a problem, trying to jackhammer it, for extended periods of time, might be completely unhelpful. Letting it sit overnight, and seeing it with a fresh set of eyes and neuron connections, might help facilitate the solution.\n- As General Patton said - \"Do everything you ask of those you command\". Don't try to pass off some grunt work to someone else, just to shirk responsibility, if you yourself would never want to do it.\n- Professional life is a fine balance between being a one-trick-pony and a jack-of-all-trades-master-of-none.\n- Be greedy with your ideas and frugal with your implementations. Ideas can be cheap, your time isn't.\n- If you are building a product or designing something, be your own first customer. Try to understand and predict what kind of pains a first user will encounter.\n- Before jumping into any assignment given to you, ask all the right questions prior to starting it. Taking a step back and applying some critical thinking to the problem at hand will only move towards a positive outcome.\n- Don't be too attached to an idea. An idea held too long without rationale is just an ideology.\n- If someone isn't agreeing to your point of view, it could be that you are not conveying your idea clearly enough, rather than the other person being intransigient.\n- While making your argument, don't be polemic or pedantic. People don't like being attacked or talked down to.\n- Less is more. Some people like to pad their words with jargon and fancy sounding terms for no apparent reason, but it just reduces the potency of their point and you will tend to lose interest in what they have to say.\n- If you notice problems/issues, see what you can do to solve it rather than resorting to complaining.\n- If a lot of people are complaining about something, rather than joining them, think about how it can be solved. Opportunities abound where inaction lays.\n- When executing a plan, always have a plan B. No plan survives the first contact intact.\n- If you do not know something, admit it rather than making an elaborate excuse to cover up your lack of expertise. You will be respected for your honesty.\n- Don't lose touch with reality. Always make an attempt to feel the pulse of the community around you, below and above you.\n- A job is about 3 things - security/peace of mind, money/financially rewarding and learning/being challenged. Many times, you can find at most, 2 out of 3 at a place. If you find all 3, consider yourself lucky.\n- Don't be afraid of failure - not every project or endeavor can be successful. If you haven't failed at anything, you haven't tried to get out of your comfort zone and tried anything worthwhile yet.",
      "code": "50 (for now!) principles, about life and work in general, that I have said to myself in the past, and wanted to codify.\n\n- Never underestimate the importance of the people around you, and the impact you have on them.\n- If you fight the good fight and you fight it for the right reasons, people will appreciate you for who you are.\n- Don't burn any bridges, because you never know when your paths will cross again and in what capacity.\n- No (wo)man is an island. Decisions that you make, have a far broader impact than just yourself.\n- Listen to the other voices in the room and build out the decision tree to formulate/translate your own thoughts. If you have a differing opinion, voice it, because you won't always be asked for it.\n- It is easy to criticize and not that easy to empathize. Before criticizing decisions other people made, first think of what kind of assumptions might have been made to come to that conclusion, and that might help with empathizing.\n- Don't be a yes (wo)man and don't be a no (wo)man either. Others like minds that poke holes in theories, with rational arguments, but do not like someone who is always a contrarian, for the sake of it.\n- When you present a problem, make sure you have a possible solution to go with it, even if it is nascent/half-baked. If you always bring only problems, and no solutions, it isn't helpful to anyone.\n- Always be positive and energetic around your team. Positivity is contagious but negativity even more so.\n- Have conviction in what you believe, based on gut instinct or facts. Have confidence in your own decisions and stick by it.\n- Don't fall for the buzzwords and the shiny toys. As per Occam's razor, the simplest solutions are often the right ones.\n- When in doubt or confusion, seek help. Spinning wheels, twiddling thumbs or presenting face-time, in an effort to look productive, while headed nowhere, is a waste of time and effort.\n- As much as it is a cliche, no question is a dumb question.\n- Always try to build something of \"true\" value. People you work with along the way, as well as end users, will always know and appreciate the significance of a maker who cares.\n- Multiple choices have diminishing returns. Marie Kondo the options, so that you can make a decision faster and more efficiently. Follow the principle of Essentialism. Instead of dispersing your energy in a 100 directions, focus all that energy in 1 direction.\n- Know when the juice is not worth the squeeze. This is with respect to holding positions in a discussion/argument, effort being put into building something out, etc.\n- Don't make money the sole measure of success. Money makes certain things simpler, but makes other things more complicated. Invest in good projects and healthy relationships as a priority, and money will find its way.\n- Perfect is the enemy of good. Don't procrastinate to deliver on a result. If you aren't embarassed of what you shipped, then you are probably too late. Avoid paralysis by analysis.\n- Don't compete in a rat race. Even if you win, you are still a rat.\n- Don't wing your career. It isn't something that you can just do on the fly. Be deliberate about the skills you lack and the direction you need to take, while making the important decisions.\n- Inspire and inform people around you. Inspiration comes in all shapes and forms. It isn't always an a-ha moment.\n- If you have achieved a modicum of success, give back to the community. The social fabric binds the sanity of the collective.\n- Don't silo and hide information from other people. Being transparent will help you and others achieve their tasks and objectives much more efficiently.\n- If your subordinate outshines you, don't be petty or vengeful. Them achieving that success is a measure of your mentorship/leadership abilities.\n- As a general rule, don't discuss politics, religion or race at a workplace.\n- Always be open to new ideas and differing points of view. You may or may not agree with them today, but they might help shape an opinion on a completely different topic, some other time.\n- Take ownership and accountability of things you are responsible for. If someone trusts you to do something, you need to be accountable for that.\n- Task determination and execution should be as decentralized as possible. The more the concentration of decision-making capabilities, the more the bottlenecks and points of failure.\n- Different people have different strengths and weaknesses. If you find out what these are for individual people, your value-add increases drastically.\n- Increase diversity of thought in your decision making process. You agreeing, all the time, with a bunch of other people, who have no differing opinions, serves no purpose.\n- If you truly believe in something, give it your all.\n- Always be hungry and curious for learning. If you do not have the knowledge, be a sponge.\n- You are unique and, by extension, your perspectives that you bring to the table are unique. Dismiss any feelings of \"imposter syndrome\" you have and seize the opportunity. Carpe diem.\n- If you are stuck with a problem, trying to jackhammer it, for extended periods of time, might be completely unhelpful. Letting it sit overnight, and seeing it with a fresh set of eyes and neuron connections, might help facilitate the solution.\n- As General Patton said - \"Do everything you ask of those you command\". Don't try to pass off some grunt work to someone else, just to shirk responsibility, if you yourself would never want to do it.\n- Professional life is a fine balance between being a one-trick-pony and a jack-of-all-trades-master-of-none.\n- Be greedy with your ideas and frugal with your implementations. Ideas can be cheap, your time isn't.\n- If you are building a product or designing something, be your own first customer. Try to understand and predict what kind of pains a first user will encounter.\n- Before jumping into any assignment given to you, ask all the right questions prior to starting it. Taking a step back and applying some critical thinking to the problem at hand will only move towards a positive outcome.\n- Don't be too attached to an idea. An idea held too long without rationale is just an ideology.\n- If someone isn't agreeing to your point of view, it could be that you are not conveying your idea clearly enough, rather than the other person being intransigient.\n- While making your argument, don't be polemic or pedantic. People don't like being attacked or talked down to.\n- Less is more. Some people like to pad their words with jargon and fancy sounding terms for no apparent reason, but it just reduces the potency of their point and you will tend to lose interest in what they have to say.\n- If you notice problems/issues, see what you can do to solve it rather than resorting to complaining.\n- If a lot of people are complaining about something, rather than joining them, think about how it can be solved. Opportunities abound where inaction lays.\n- When executing a plan, always have a plan B. No plan survives the first contact intact.\n- If you do not know something, admit it rather than making an elaborate excuse to cover up your lack of expertise. You will be respected for your honesty.\n- Don't lose touch with reality. Always make an attempt to feel the pulse of the community around you, below and above you.\n- A job is about 3 things - security/peace of mind, money/financially rewarding and learning/being challenged. Many times, you can find at most, 2 out of 3 at a place. If you find all 3, consider yourself lucky.\n- Don't be afraid of failure - not every project or endeavor can be successful. If you haven't failed at anything, you haven't tried to get out of your comfort zone and tried anything worthwhile yet."
    },
    "slug": "observations",
    "path": "posts/observations",
    "filePath": "observations.mdx",
    "toc": [],
    "readingTime": {
      "text": "7 min read",
      "minutes": 6.79,
      "time": 407400,
      "words": 1358
    },
    "structuredData": {
      "@context": "https://schema.org",
      "@type": "BlogPosting",
      "headline": "Observations and opinions on navigating work and life",
      "datePublished": "2019-04-09T00:00:00.000Z",
      "dateModified": "2019-04-09T00:00:00.000Z",
      "description": "Principles of my life (when I am 30'sh)",
      "image": "/static/images/twitter-card.png",
      "url": "https://arjunrao.co/posts/observations"
    }
  },
  {
    "title": "Using Ollama: Getting hands-on with local LLMs and building a chatbot",
    "date": "2024-03-13T00:00:00.000Z",
    "tags": [
      "growth"
    ],
    "lastmod": undefined,
    "draft": false,
    "summary": "Build a ChatGPT clone in less than 50 lines of code",
    "images": [
      "/static/images/ollama-models.png"
    ],
    "authors": undefined,
    "layout": undefined,
    "bibliography": undefined,
    "canonicalUrl": undefined,
    "content": "This is the first part of a deeper dive into Ollama and things that I have learned about local LLMs and how you can use them for inference-based applications. In this post, you will learn about - \n\n- [How to use Ollama](#how-to-use-ollama)\n- [How to create your own model in Ollama](#how-to-create-your-own-model-in-ollama)\n- [Using Ollama to build a chatbot](#using-ollama-to-build-a-chatbot)\n\n> To understand the basics of LLMs (including Local LLMs) you can refer to my previous post on this topic [here](https://arjunrao.co/posts/llm-rag). \n\n## First, some background\n\nIn the space of local LLMs, I first ran into LMStudio. While the app itself is easy to use, I liked the simplicity and maneuverability that Ollama provides. To learn more about Ollama you can go [here](https://ollama.com/). \n\ntl;dr: Ollama hosts its own curated list of models that you have access to. You can download these models to your local machine and then interact with those models through a command line prompt. Alternatively, when you run the model, Ollama also runs an inference server hosted at port 11434 (by default) that you can interact with by way of APIs and other libraries like Langchain. \n\nAs of this post, Ollama has 74 models, which also include categories like embedding models. \n\n\n## How to use Ollama\n\n[Download](https://ollama.com/download) Ollama for the OS of your choice. Once you do that, you run the command ollama to confirm its working. It should show you the help menu - \n\n```sh\nUsage:\n  ollama [flags]\n  ollama [command]\n\nAvailable Commands:\n  serve       Start ollama\n  create      Create a model from a Modelfile\n  show        Show information for a model\n  run         Run a model\n  pull        Pull a model from a registry\n  push        Push a model to a registry\n  list        List models\n  cp          Copy a model\n  rm          Remove a model\n  help        Help about any command\n\nFlags:\n  -h, --help      help for ollama\n  -v, --version   Show version information\n\nUse \"ollama [command] --help\" for more information about a command.\n```\n\nTo use any model you first need to \"pull\" them from Ollama, much like you would pull down an image from Dockerhub (if you have used that in the past) or something like Elastic Container Registry (ECR). Ollama ships with some default models (like `llama2` which is Facebook's open source LLM) which you can see by running - \n\n```sh\nollama list \n```\n\nSelect the model (let's say phi) that you would like to interact with from the [Ollama library page](https://ollama.com/library). You can now pull down this model by running the command - \n\n```sh\nollama pull phi \n```\n![](/static/images/ollama-pull.png)\n\nOnce the download is complete, you can check to see whether the model is available locally by running - \n\n```sh\nollama list\n```\n![](/static/images/ollama-list.png)\n\nNow that the model is available, it is ready to be run with. You can run a model using the command - \n\n```sh\nollama run phi\n```\n\n![](/static/images/ollama-run.gif)\n\nThe accuracy of the answers isn't always top notch, but you can address that by selecting different models or perhaps doing some fine tuning or implementing a RAG-like solution on your own to improve accuracy. \n\nWhat I have demonstrated above is how you can use Ollama models using the command line prompt. However, if you check the inference server that Llama has running you can see that there are programmatic ways of accessing this by hitting port 11434. \n\n![](/static/images/ollama-server.png)\n\nIf you wanted to use Langchain to access your Ollama model, you can use something like - \n\n```py\nfrom langchain_community.llms import Ollama\nfrom langchain.chains import RetrievalQA\n\nprompt = \"What is the difference between an adverb and an adjective?\"\nllm = Ollama(model=\"mistral\")\nqa = RetrievalQA.from_chain_type(\n    llm=llm,\n    chain_type=\"stuff\",\n    retriever=retriever,\n    return_source_documents=True,\n)\nresponse = qa(prompt)\n```\n\n## How to create your own model in Ollama\n\nYou can also create your own model variant using the concept of `Modelfile` in Ollama. For more parameters to configure in your Modelfile you can look at these docs. \n\nExample Modelfile - \n\n```python\n# Downloaded from Hugging Face https://huggingface.co/TheBloke/finance-LLM-GGUF/tree/main\nFROM \"./finance-llm-13b.Q4_K_M.gguf\"\n\nPARAMETER temperature 0.001\nPARAMETER top_k 20\nTEMPLATE \"\"\"\n{{.Prompt}}\n\"\"\"\n# set the system message\nSYSTEM \"\"\"\nYou are Warren Buffet. Answer as Buffet only, and do so in short sentences.\n\"\"\"\n```\n\nOnce you have the Modelfile, you can create your model using -\n\n```sh\nollama create arjunrao87/financellm -f Modelfile\n```\nwhere `financellm` is the name of your LLM model and `arjunrao87` would be replaced by your ollama.com username (which also acts as the namespace of your online ollama registry). At this point, you can use your created model like any other model on ollama. \n\nYou can also choose to push your model to the remote ollama registry. To make this happen, you need to \n- Create your account on ollama.com\n- Add a new model\n- Have the public keys set up to allow you to push models from your remote machine. \n\nOnce you have created your local llm, you can push it to the ollama registry using - \n\n```sh\nollama push arjunrao87/financellm\n```\n\n🦄 Now lets get to the good part.\n\n## Using Ollama to build a chatbot \n\nDuring my quest to use Ollama, one of the more pleasant discoveries was this ecosystem of python based web application builders that I came across. [Chainlit](https://docs.chainlit.io/get-started/overview) can be used to build a full fledged chat bot like ChatGPT. As their page says, \n\n> Chainlit is an open-source Python package to build production ready Conversational AI\n\nI walked through a few of the Chainlit tutorials to get a handle on what you can do with chainlit, which includes things like creating sequences of tasks (called \"steps\"), enabling buttons and actions, sending images, and all kinds of things. You can follow this part of my journey [here](https://github.com/arjunrao87/lllm/tree/main/ollama-conversational-ai/chainlit-tutorials). \n\nOnce I got the hang of Chainlit, I wanted to put together a straightforward chatbot that basically used Ollama so that I could use a local LLM to chat with (instead of say ChatGPT or Claude). \n\nWith less than 50 lines of code, you can do that using Chainlit + Ollama. Isn't that crazy? \n\nChainlit as a library is super straightforward to use. I also used Langchain for using and interacting with Ollama. \n\n```python\nfrom langchain_community.llms import Ollama\nfrom langchain.prompts import ChatPromptTemplate\nimport chainlit as cl\n```\n\nThe next step is to define how you want the loading screen of the chat bot to look like, by using the \n\n```python\n@cl.on_chat_start decorator of chainlit - \n@cl.on_chat_start\nasync def on_chat_start():\n    elements = [cl.Image(name=\"image1\", display=\"inline\", path=\"assets/gemma.jpeg\")]\n    await cl.Message(\n        content=\"Hello there, I am Gemma. How can I help you?\", elements=elements\n    ).send()\n    ...\n    ...\n```\n\nThe `Message` interface is what Chainlit uses to send responses back to the UI. You can construct messages with the simple content key and then you can embellish it with things like elements which in my case I have added an Image to, to show an image when the user first logs in. \n\n![](/static/images/ollama-chat.png)\n\nThe next step is to invoke Langchain to instantiate Ollama (with the model of your choice) and construct the prompt template. The usage of the cl.user_session is to mostly maintain separation of user contexts and histories, which just for the purposes of running a quick demo is not strictly required. Chain  is a Langchain interface called `Runnable` that is used to create custom chains. You can read more about that [here](https://python.langchain.com/docs/expression_language/interface). \n\n```python\n@cl.on_chat_start\nasync def on_chat_start():\n   ...\n   ...\n    model = Ollama(model=\"mistral\")\n    prompt = ChatPromptTemplate.from_messages(\n        [\n            (\n                \"system\",\n                \"You are a knowledgeable historian who answers super concisely\",\n            ),\n            (\"human\", \"{question}\"),\n        ]\n    )\n    chain = prompt | model\n    cl.user_session.set(\"chain\", chain)\n```\n\nNow you have all the pieces to have a chatbot UI and accept user inputs. What do you do with the prompts the user provides? You will use the `@cl.on_message` handler from Chainlit to do something with the message the user provided.\n\n```python\n@cl.on_message\nasync def on_message(message: cl.Message):\n    chain = cl.user_session.get(\"chain\")\n    msg = cl.Message(content=\"\")\n    async for chunk in chain.astream(\n        {\"question\": message.content},\n    ):\n        await msg.stream_token(chunk)\n    await msg.send()\n```\n\n`chain.astream` as the docs suggest \"stream back chunks of the response async\" which is what we want for our bot. \n\nThat is really it. A few imports, couple of functions, a little bit of sugar and you have a functional chatbot. \n\n![](/static/images/ollama-chat-1.png)\n>> ⬆️ a good historian response. \n\n![](/static/images/ollama-chat-2.png)\n>> ⬆️ a sassy historian who is (understandably) not good at math ;) \n\nFor the full code, you can see my [github](https://github.com/arjunrao87/lllm/blob/main/ollama-conversational-ai/main.py).\n\n---\n\nIf this content is interesting to you, hit that 👏 button or subscribe to my newsletter here → https://a1engineering.beehiiv.com/subscribe. It gives me the feedback that I need to do more or less of something! Thanks ❤️",
    "_id": "ollama.mdx",
    "_raw": {
      "flattenedPath": "ollama"
    },
    "body": {
      "raw": "This is the first part of a deeper dive into Ollama and things that I have learned about local LLMs and how you can use them for inference-based applications. In this post, you will learn about - \n\n- [How to use Ollama](#how-to-use-ollama)\n- [How to create your own model in Ollama](#how-to-create-your-own-model-in-ollama)\n- [Using Ollama to build a chatbot](#using-ollama-to-build-a-chatbot)\n\n> To understand the basics of LLMs (including Local LLMs) you can refer to my previous post on this topic [here](https://arjunrao.co/posts/llm-rag). \n\n## First, some background\n\nIn the space of local LLMs, I first ran into LMStudio. While the app itself is easy to use, I liked the simplicity and maneuverability that Ollama provides. To learn more about Ollama you can go [here](https://ollama.com/). \n\ntl;dr: Ollama hosts its own curated list of models that you have access to. You can download these models to your local machine and then interact with those models through a command line prompt. Alternatively, when you run the model, Ollama also runs an inference server hosted at port 11434 (by default) that you can interact with by way of APIs and other libraries like Langchain. \n\nAs of this post, Ollama has 74 models, which also include categories like embedding models. \n\n\n## How to use Ollama\n\n[Download](https://ollama.com/download) Ollama for the OS of your choice. Once you do that, you run the command ollama to confirm its working. It should show you the help menu - \n\n```sh\nUsage:\n  ollama [flags]\n  ollama [command]\n\nAvailable Commands:\n  serve       Start ollama\n  create      Create a model from a Modelfile\n  show        Show information for a model\n  run         Run a model\n  pull        Pull a model from a registry\n  push        Push a model to a registry\n  list        List models\n  cp          Copy a model\n  rm          Remove a model\n  help        Help about any command\n\nFlags:\n  -h, --help      help for ollama\n  -v, --version   Show version information\n\nUse \"ollama [command] --help\" for more information about a command.\n```\n\nTo use any model you first need to \"pull\" them from Ollama, much like you would pull down an image from Dockerhub (if you have used that in the past) or something like Elastic Container Registry (ECR). Ollama ships with some default models (like `llama2` which is Facebook's open source LLM) which you can see by running - \n\n```sh\nollama list \n```\n\nSelect the model (let's say phi) that you would like to interact with from the [Ollama library page](https://ollama.com/library). You can now pull down this model by running the command - \n\n```sh\nollama pull phi \n```\n![](/static/images/ollama-pull.png)\n\nOnce the download is complete, you can check to see whether the model is available locally by running - \n\n```sh\nollama list\n```\n![](/static/images/ollama-list.png)\n\nNow that the model is available, it is ready to be run with. You can run a model using the command - \n\n```sh\nollama run phi\n```\n\n![](/static/images/ollama-run.gif)\n\nThe accuracy of the answers isn't always top notch, but you can address that by selecting different models or perhaps doing some fine tuning or implementing a RAG-like solution on your own to improve accuracy. \n\nWhat I have demonstrated above is how you can use Ollama models using the command line prompt. However, if you check the inference server that Llama has running you can see that there are programmatic ways of accessing this by hitting port 11434. \n\n![](/static/images/ollama-server.png)\n\nIf you wanted to use Langchain to access your Ollama model, you can use something like - \n\n```py\nfrom langchain_community.llms import Ollama\nfrom langchain.chains import RetrievalQA\n\nprompt = \"What is the difference between an adverb and an adjective?\"\nllm = Ollama(model=\"mistral\")\nqa = RetrievalQA.from_chain_type(\n    llm=llm,\n    chain_type=\"stuff\",\n    retriever=retriever,\n    return_source_documents=True,\n)\nresponse = qa(prompt)\n```\n\n## How to create your own model in Ollama\n\nYou can also create your own model variant using the concept of `Modelfile` in Ollama. For more parameters to configure in your Modelfile you can look at these docs. \n\nExample Modelfile - \n\n```python\n# Downloaded from Hugging Face https://huggingface.co/TheBloke/finance-LLM-GGUF/tree/main\nFROM \"./finance-llm-13b.Q4_K_M.gguf\"\n\nPARAMETER temperature 0.001\nPARAMETER top_k 20\nTEMPLATE \"\"\"\n{{.Prompt}}\n\"\"\"\n# set the system message\nSYSTEM \"\"\"\nYou are Warren Buffet. Answer as Buffet only, and do so in short sentences.\n\"\"\"\n```\n\nOnce you have the Modelfile, you can create your model using -\n\n```sh\nollama create arjunrao87/financellm -f Modelfile\n```\nwhere `financellm` is the name of your LLM model and `arjunrao87` would be replaced by your ollama.com username (which also acts as the namespace of your online ollama registry). At this point, you can use your created model like any other model on ollama. \n\nYou can also choose to push your model to the remote ollama registry. To make this happen, you need to \n- Create your account on ollama.com\n- Add a new model\n- Have the public keys set up to allow you to push models from your remote machine. \n\nOnce you have created your local llm, you can push it to the ollama registry using - \n\n```sh\nollama push arjunrao87/financellm\n```\n\n🦄 Now lets get to the good part.\n\n## Using Ollama to build a chatbot \n\nDuring my quest to use Ollama, one of the more pleasant discoveries was this ecosystem of python based web application builders that I came across. [Chainlit](https://docs.chainlit.io/get-started/overview) can be used to build a full fledged chat bot like ChatGPT. As their page says, \n\n> Chainlit is an open-source Python package to build production ready Conversational AI\n\nI walked through a few of the Chainlit tutorials to get a handle on what you can do with chainlit, which includes things like creating sequences of tasks (called \"steps\"), enabling buttons and actions, sending images, and all kinds of things. You can follow this part of my journey [here](https://github.com/arjunrao87/lllm/tree/main/ollama-conversational-ai/chainlit-tutorials). \n\nOnce I got the hang of Chainlit, I wanted to put together a straightforward chatbot that basically used Ollama so that I could use a local LLM to chat with (instead of say ChatGPT or Claude). \n\nWith less than 50 lines of code, you can do that using Chainlit + Ollama. Isn't that crazy? \n\nChainlit as a library is super straightforward to use. I also used Langchain for using and interacting with Ollama. \n\n```python\nfrom langchain_community.llms import Ollama\nfrom langchain.prompts import ChatPromptTemplate\nimport chainlit as cl\n```\n\nThe next step is to define how you want the loading screen of the chat bot to look like, by using the \n\n```python\n@cl.on_chat_start decorator of chainlit - \n@cl.on_chat_start\nasync def on_chat_start():\n    elements = [cl.Image(name=\"image1\", display=\"inline\", path=\"assets/gemma.jpeg\")]\n    await cl.Message(\n        content=\"Hello there, I am Gemma. How can I help you?\", elements=elements\n    ).send()\n    ...\n    ...\n```\n\nThe `Message` interface is what Chainlit uses to send responses back to the UI. You can construct messages with the simple content key and then you can embellish it with things like elements which in my case I have added an Image to, to show an image when the user first logs in. \n\n![](/static/images/ollama-chat.png)\n\nThe next step is to invoke Langchain to instantiate Ollama (with the model of your choice) and construct the prompt template. The usage of the cl.user_session is to mostly maintain separation of user contexts and histories, which just for the purposes of running a quick demo is not strictly required. Chain  is a Langchain interface called `Runnable` that is used to create custom chains. You can read more about that [here](https://python.langchain.com/docs/expression_language/interface). \n\n```python\n@cl.on_chat_start\nasync def on_chat_start():\n   ...\n   ...\n    model = Ollama(model=\"mistral\")\n    prompt = ChatPromptTemplate.from_messages(\n        [\n            (\n                \"system\",\n                \"You are a knowledgeable historian who answers super concisely\",\n            ),\n            (\"human\", \"{question}\"),\n        ]\n    )\n    chain = prompt | model\n    cl.user_session.set(\"chain\", chain)\n```\n\nNow you have all the pieces to have a chatbot UI and accept user inputs. What do you do with the prompts the user provides? You will use the `@cl.on_message` handler from Chainlit to do something with the message the user provided.\n\n```python\n@cl.on_message\nasync def on_message(message: cl.Message):\n    chain = cl.user_session.get(\"chain\")\n    msg = cl.Message(content=\"\")\n    async for chunk in chain.astream(\n        {\"question\": message.content},\n    ):\n        await msg.stream_token(chunk)\n    await msg.send()\n```\n\n`chain.astream` as the docs suggest \"stream back chunks of the response async\" which is what we want for our bot. \n\nThat is really it. A few imports, couple of functions, a little bit of sugar and you have a functional chatbot. \n\n![](/static/images/ollama-chat-1.png)\n>> ⬆️ a good historian response. \n\n![](/static/images/ollama-chat-2.png)\n>> ⬆️ a sassy historian who is (understandably) not good at math ;) \n\nFor the full code, you can see my [github](https://github.com/arjunrao87/lllm/blob/main/ollama-conversational-ai/main.py).\n\n---\n\nIf this content is interesting to you, hit that 👏 button or subscribe to my newsletter here → https://a1engineering.beehiiv.com/subscribe. It gives me the feedback that I need to do more or less of something! Thanks ❤️",
      "code": "This is the first part of a deeper dive into Ollama and things that I have learned about local LLMs and how you can use them for inference-based applications. In this post, you will learn about - \n\n- [How to use Ollama](#how-to-use-ollama)\n- [How to create your own model in Ollama](#how-to-create-your-own-model-in-ollama)\n- [Using Ollama to build a chatbot](#using-ollama-to-build-a-chatbot)\n\n> To understand the basics of LLMs (including Local LLMs) you can refer to my previous post on this topic [here](https://arjunrao.co/posts/llm-rag). \n\n## First, some background\n\nIn the space of local LLMs, I first ran into LMStudio. While the app itself is easy to use, I liked the simplicity and maneuverability that Ollama provides. To learn more about Ollama you can go [here](https://ollama.com/). \n\ntl;dr: Ollama hosts its own curated list of models that you have access to. You can download these models to your local machine and then interact with those models through a command line prompt. Alternatively, when you run the model, Ollama also runs an inference server hosted at port 11434 (by default) that you can interact with by way of APIs and other libraries like Langchain. \n\nAs of this post, Ollama has 74 models, which also include categories like embedding models. \n\n\n## How to use Ollama\n\n[Download](https://ollama.com/download) Ollama for the OS of your choice. Once you do that, you run the command ollama to confirm its working. It should show you the help menu - \n\n```sh\nUsage:\n  ollama [flags]\n  ollama [command]\n\nAvailable Commands:\n  serve       Start ollama\n  create      Create a model from a Modelfile\n  show        Show information for a model\n  run         Run a model\n  pull        Pull a model from a registry\n  push        Push a model to a registry\n  list        List models\n  cp          Copy a model\n  rm          Remove a model\n  help        Help about any command\n\nFlags:\n  -h, --help      help for ollama\n  -v, --version   Show version information\n\nUse \"ollama [command] --help\" for more information about a command.\n```\n\nTo use any model you first need to \"pull\" them from Ollama, much like you would pull down an image from Dockerhub (if you have used that in the past) or something like Elastic Container Registry (ECR). Ollama ships with some default models (like `llama2` which is Facebook's open source LLM) which you can see by running - \n\n```sh\nollama list \n```\n\nSelect the model (let's say phi) that you would like to interact with from the [Ollama library page](https://ollama.com/library). You can now pull down this model by running the command - \n\n```sh\nollama pull phi \n```\n![](/static/images/ollama-pull.png)\n\nOnce the download is complete, you can check to see whether the model is available locally by running - \n\n```sh\nollama list\n```\n![](/static/images/ollama-list.png)\n\nNow that the model is available, it is ready to be run with. You can run a model using the command - \n\n```sh\nollama run phi\n```\n\n![](/static/images/ollama-run.gif)\n\nThe accuracy of the answers isn't always top notch, but you can address that by selecting different models or perhaps doing some fine tuning or implementing a RAG-like solution on your own to improve accuracy. \n\nWhat I have demonstrated above is how you can use Ollama models using the command line prompt. However, if you check the inference server that Llama has running you can see that there are programmatic ways of accessing this by hitting port 11434. \n\n![](/static/images/ollama-server.png)\n\nIf you wanted to use Langchain to access your Ollama model, you can use something like - \n\n```py\nfrom langchain_community.llms import Ollama\nfrom langchain.chains import RetrievalQA\n\nprompt = \"What is the difference between an adverb and an adjective?\"\nllm = Ollama(model=\"mistral\")\nqa = RetrievalQA.from_chain_type(\n    llm=llm,\n    chain_type=\"stuff\",\n    retriever=retriever,\n    return_source_documents=True,\n)\nresponse = qa(prompt)\n```\n\n## How to create your own model in Ollama\n\nYou can also create your own model variant using the concept of `Modelfile` in Ollama. For more parameters to configure in your Modelfile you can look at these docs. \n\nExample Modelfile - \n\n```python\n# Downloaded from Hugging Face https://huggingface.co/TheBloke/finance-LLM-GGUF/tree/main\nFROM \"./finance-llm-13b.Q4_K_M.gguf\"\n\nPARAMETER temperature 0.001\nPARAMETER top_k 20\nTEMPLATE \"\"\"\n{{.Prompt}}\n\"\"\"\n# set the system message\nSYSTEM \"\"\"\nYou are Warren Buffet. Answer as Buffet only, and do so in short sentences.\n\"\"\"\n```\n\nOnce you have the Modelfile, you can create your model using -\n\n```sh\nollama create arjunrao87/financellm -f Modelfile\n```\nwhere `financellm` is the name of your LLM model and `arjunrao87` would be replaced by your ollama.com username (which also acts as the namespace of your online ollama registry). At this point, you can use your created model like any other model on ollama. \n\nYou can also choose to push your model to the remote ollama registry. To make this happen, you need to \n- Create your account on ollama.com\n- Add a new model\n- Have the public keys set up to allow you to push models from your remote machine. \n\nOnce you have created your local llm, you can push it to the ollama registry using - \n\n```sh\nollama push arjunrao87/financellm\n```\n\n🦄 Now lets get to the good part.\n\n## Using Ollama to build a chatbot \n\nDuring my quest to use Ollama, one of the more pleasant discoveries was this ecosystem of python based web application builders that I came across. [Chainlit](https://docs.chainlit.io/get-started/overview) can be used to build a full fledged chat bot like ChatGPT. As their page says, \n\n> Chainlit is an open-source Python package to build production ready Conversational AI\n\nI walked through a few of the Chainlit tutorials to get a handle on what you can do with chainlit, which includes things like creating sequences of tasks (called \"steps\"), enabling buttons and actions, sending images, and all kinds of things. You can follow this part of my journey [here](https://github.com/arjunrao87/lllm/tree/main/ollama-conversational-ai/chainlit-tutorials). \n\nOnce I got the hang of Chainlit, I wanted to put together a straightforward chatbot that basically used Ollama so that I could use a local LLM to chat with (instead of say ChatGPT or Claude). \n\nWith less than 50 lines of code, you can do that using Chainlit + Ollama. Isn't that crazy? \n\nChainlit as a library is super straightforward to use. I also used Langchain for using and interacting with Ollama. \n\n```python\nfrom langchain_community.llms import Ollama\nfrom langchain.prompts import ChatPromptTemplate\nimport chainlit as cl\n```\n\nThe next step is to define how you want the loading screen of the chat bot to look like, by using the \n\n```python\n@cl.on_chat_start decorator of chainlit - \n@cl.on_chat_start\nasync def on_chat_start():\n    elements = [cl.Image(name=\"image1\", display=\"inline\", path=\"assets/gemma.jpeg\")]\n    await cl.Message(\n        content=\"Hello there, I am Gemma. How can I help you?\", elements=elements\n    ).send()\n    ...\n    ...\n```\n\nThe `Message` interface is what Chainlit uses to send responses back to the UI. You can construct messages with the simple content key and then you can embellish it with things like elements which in my case I have added an Image to, to show an image when the user first logs in. \n\n![](/static/images/ollama-chat.png)\n\nThe next step is to invoke Langchain to instantiate Ollama (with the model of your choice) and construct the prompt template. The usage of the cl.user_session is to mostly maintain separation of user contexts and histories, which just for the purposes of running a quick demo is not strictly required. Chain  is a Langchain interface called `Runnable` that is used to create custom chains. You can read more about that [here](https://python.langchain.com/docs/expression_language/interface). \n\n```python\n@cl.on_chat_start\nasync def on_chat_start():\n   ...\n   ...\n    model = Ollama(model=\"mistral\")\n    prompt = ChatPromptTemplate.from_messages(\n        [\n            (\n                \"system\",\n                \"You are a knowledgeable historian who answers super concisely\",\n            ),\n            (\"human\", \"{question}\"),\n        ]\n    )\n    chain = prompt | model\n    cl.user_session.set(\"chain\", chain)\n```\n\nNow you have all the pieces to have a chatbot UI and accept user inputs. What do you do with the prompts the user provides? You will use the `@cl.on_message` handler from Chainlit to do something with the message the user provided.\n\n```python\n@cl.on_message\nasync def on_message(message: cl.Message):\n    chain = cl.user_session.get(\"chain\")\n    msg = cl.Message(content=\"\")\n    async for chunk in chain.astream(\n        {\"question\": message.content},\n    ):\n        await msg.stream_token(chunk)\n    await msg.send()\n```\n\n`chain.astream` as the docs suggest \"stream back chunks of the response async\" which is what we want for our bot. \n\nThat is really it. A few imports, couple of functions, a little bit of sugar and you have a functional chatbot. \n\n![](/static/images/ollama-chat-1.png)\n>> ⬆️ a good historian response. \n\n![](/static/images/ollama-chat-2.png)\n>> ⬆️ a sassy historian who is (understandably) not good at math ;) \n\nFor the full code, you can see my [github](https://github.com/arjunrao87/lllm/blob/main/ollama-conversational-ai/main.py).\n\n---\n\nIf this content is interesting to you, hit that 👏 button or subscribe to my newsletter here → https://a1engineering.beehiiv.com/subscribe. It gives me the feedback that I need to do more or less of something! Thanks ❤️"
    },
    "slug": "ollama",
    "path": "posts/ollama",
    "filePath": "ollama.mdx",
    "toc": [],
    "readingTime": {
      "text": "7 min read",
      "minutes": 6.985,
      "time": 419100,
      "words": 1397
    },
    "structuredData": {
      "@context": "https://schema.org",
      "@type": "BlogPosting",
      "headline": "Using Ollama: Getting hands-on with local LLMs and building a chatbot",
      "datePublished": "2024-03-13T00:00:00.000Z",
      "dateModified": "2024-03-13T00:00:00.000Z",
      "description": "Build a ChatGPT clone in less than 50 lines of code",
      "image": "/static/images/ollama-models.png",
      "url": "https://arjunrao.co/posts/ollama"
    }
  },
  {
    "title": "Why having opinions matters",
    "date": "2024-06-29T00:00:00.000Z",
    "tags": [
      "growth"
    ],
    "lastmod": undefined,
    "draft": false,
    "summary": "Don't be shy to speak your truth",
    "images": [
      "/static/images/opinions.jpeg"
    ],
    "authors": undefined,
    "layout": undefined,
    "bibliography": undefined,
    "canonicalUrl": undefined,
    "content": "Maybe this is a controversial topic that will make people uncomfortable - I want to talk about not being opinionated _enough_.\n\nLet’s start off with an analogy; discussing how many people select scores on a rating scale - whether it’s a survey, NPS ratings or something whose results range from 1 to 10.\n\n![](/static/images/opinions1.gif)\n\nWhen someone is uncomfortable to vote a certain way, they vote 7. If they think something is bad, instead of giving a 5 or 6 they will round up to a 7. If they are afraid that giving an 8 or 9 might be too strong of an endorsement, they will round down to a 7. 7 is the safe bet. It’s the i-am-not-seeking-confrontation number. It’s the please-let’s-get-along number. I personally dismiss 7 from the rating scale, because it gives an easy way out.\n\nUnfortunately, this happens more often than you’d like in daily life. Say when someone proposes 2 options for solving a problem - you don’t want to be the person who defaults to “Oh yeah, either way works for me”. While it comes from a place of kindness that is an unhelpful contribution. The only thing worse is saying nothing at all. And don’t get me wrong, I have been that guy who says I’m fine with anything. However, I learned that to be an effective contributor to a discussion, it’s something I need to try to avoid or stop doing altogether.\n\nI am going to try and underscore the importance of having strong opinions. They can certainly be strong opinions loosely held. You don’t have to be dogmatic in a way that you don’t leave room for discussion or negotiation.\n\n## Why is it important to have strong opinions?\n\n>> You can build a great system that is founded on strong beliefs, but you will not build a great system that is founded on weak beliefs.\n\nI call this the “Beliefs Antithesis”. This applies to systems that are technical, social or economical. Systems that are durable and stand the test of time, are built on rock hard foundations. These foundations come from a first-principles form of thinking. First principles thinking is a method of problem-solving that involves breaking down complex issues into their most basic and fundamental parts.\n\n![](/static/images/opinions2.jpg)\n\nEveryone who wants to commit to being a strong leader, needs to be able to reason through a problem and present their opinion on it. To be a voice that people respect, you need to have strong convictions. Those convictions need to be grounded in strong reasoning, so you can defend your thoughts or actions. Don’t be disappointed or dismayed if you are unable to convince others about your idea. Learn from it and figure out how to best communicate the message. The problem in most cases would not be that you had a “wrong” opinion but that you had either incorrect messaging or missing inputs. Take that positively and learn from the experience.\n\nThis is a skill that is often lacking in people who are junior. No one wants to antagonize the person or group putting an idea or solution on the table. Unfortunately the only way you will grow in your career is to formulate your own opinions and be able to reason through them. Blindly following someone else’s voting or reasoning might work in the near term, but it will not catapult you ahead in life. I understand, it’s a hard skill to learn if this does not come to you intuitively. To overcome it, you need to observe and absorb from the best around you while giving it your own unique twist. As Neale Donald Walsch said “**Growth begins at the end of your comfort zone**”.\n\n![](/static/images/opinions3.jpg)\n\n## In closing…\n\nBeing apathetic when you are being asked to opine on something can be demotivating and unproductive to the people seeking your input. It’s easy to not care. Caring takes effort. Be empathetic and craft your opinions to fit what your audience is looking for to move the conversation forward. Your inputs matter and make sure to formulate strong opinions drawing on your experience and surroundings.",
    "_id": "opinions.mdx",
    "_raw": {
      "flattenedPath": "opinions"
    },
    "body": {
      "raw": "Maybe this is a controversial topic that will make people uncomfortable - I want to talk about not being opinionated _enough_.\n\nLet’s start off with an analogy; discussing how many people select scores on a rating scale - whether it’s a survey, NPS ratings or something whose results range from 1 to 10.\n\n![](/static/images/opinions1.gif)\n\nWhen someone is uncomfortable to vote a certain way, they vote 7. If they think something is bad, instead of giving a 5 or 6 they will round up to a 7. If they are afraid that giving an 8 or 9 might be too strong of an endorsement, they will round down to a 7. 7 is the safe bet. It’s the i-am-not-seeking-confrontation number. It’s the please-let’s-get-along number. I personally dismiss 7 from the rating scale, because it gives an easy way out.\n\nUnfortunately, this happens more often than you’d like in daily life. Say when someone proposes 2 options for solving a problem - you don’t want to be the person who defaults to “Oh yeah, either way works for me”. While it comes from a place of kindness that is an unhelpful contribution. The only thing worse is saying nothing at all. And don’t get me wrong, I have been that guy who says I’m fine with anything. However, I learned that to be an effective contributor to a discussion, it’s something I need to try to avoid or stop doing altogether.\n\nI am going to try and underscore the importance of having strong opinions. They can certainly be strong opinions loosely held. You don’t have to be dogmatic in a way that you don’t leave room for discussion or negotiation.\n\n## Why is it important to have strong opinions?\n\n>> You can build a great system that is founded on strong beliefs, but you will not build a great system that is founded on weak beliefs.\n\nI call this the “Beliefs Antithesis”. This applies to systems that are technical, social or economical. Systems that are durable and stand the test of time, are built on rock hard foundations. These foundations come from a first-principles form of thinking. First principles thinking is a method of problem-solving that involves breaking down complex issues into their most basic and fundamental parts.\n\n![](/static/images/opinions2.jpg)\n\nEveryone who wants to commit to being a strong leader, needs to be able to reason through a problem and present their opinion on it. To be a voice that people respect, you need to have strong convictions. Those convictions need to be grounded in strong reasoning, so you can defend your thoughts or actions. Don’t be disappointed or dismayed if you are unable to convince others about your idea. Learn from it and figure out how to best communicate the message. The problem in most cases would not be that you had a “wrong” opinion but that you had either incorrect messaging or missing inputs. Take that positively and learn from the experience.\n\nThis is a skill that is often lacking in people who are junior. No one wants to antagonize the person or group putting an idea or solution on the table. Unfortunately the only way you will grow in your career is to formulate your own opinions and be able to reason through them. Blindly following someone else’s voting or reasoning might work in the near term, but it will not catapult you ahead in life. I understand, it’s a hard skill to learn if this does not come to you intuitively. To overcome it, you need to observe and absorb from the best around you while giving it your own unique twist. As Neale Donald Walsch said “**Growth begins at the end of your comfort zone**”.\n\n![](/static/images/opinions3.jpg)\n\n## In closing…\n\nBeing apathetic when you are being asked to opine on something can be demotivating and unproductive to the people seeking your input. It’s easy to not care. Caring takes effort. Be empathetic and craft your opinions to fit what your audience is looking for to move the conversation forward. Your inputs matter and make sure to formulate strong opinions drawing on your experience and surroundings.",
      "code": "Maybe this is a controversial topic that will make people uncomfortable - I want to talk about not being opinionated _enough_.\n\nLet’s start off with an analogy; discussing how many people select scores on a rating scale - whether it’s a survey, NPS ratings or something whose results range from 1 to 10.\n\n![](/static/images/opinions1.gif)\n\nWhen someone is uncomfortable to vote a certain way, they vote 7. If they think something is bad, instead of giving a 5 or 6 they will round up to a 7. If they are afraid that giving an 8 or 9 might be too strong of an endorsement, they will round down to a 7. 7 is the safe bet. It’s the i-am-not-seeking-confrontation number. It’s the please-let’s-get-along number. I personally dismiss 7 from the rating scale, because it gives an easy way out.\n\nUnfortunately, this happens more often than you’d like in daily life. Say when someone proposes 2 options for solving a problem - you don’t want to be the person who defaults to “Oh yeah, either way works for me”. While it comes from a place of kindness that is an unhelpful contribution. The only thing worse is saying nothing at all. And don’t get me wrong, I have been that guy who says I’m fine with anything. However, I learned that to be an effective contributor to a discussion, it’s something I need to try to avoid or stop doing altogether.\n\nI am going to try and underscore the importance of having strong opinions. They can certainly be strong opinions loosely held. You don’t have to be dogmatic in a way that you don’t leave room for discussion or negotiation.\n\n## Why is it important to have strong opinions?\n\n>> You can build a great system that is founded on strong beliefs, but you will not build a great system that is founded on weak beliefs.\n\nI call this the “Beliefs Antithesis”. This applies to systems that are technical, social or economical. Systems that are durable and stand the test of time, are built on rock hard foundations. These foundations come from a first-principles form of thinking. First principles thinking is a method of problem-solving that involves breaking down complex issues into their most basic and fundamental parts.\n\n![](/static/images/opinions2.jpg)\n\nEveryone who wants to commit to being a strong leader, needs to be able to reason through a problem and present their opinion on it. To be a voice that people respect, you need to have strong convictions. Those convictions need to be grounded in strong reasoning, so you can defend your thoughts or actions. Don’t be disappointed or dismayed if you are unable to convince others about your idea. Learn from it and figure out how to best communicate the message. The problem in most cases would not be that you had a “wrong” opinion but that you had either incorrect messaging or missing inputs. Take that positively and learn from the experience.\n\nThis is a skill that is often lacking in people who are junior. No one wants to antagonize the person or group putting an idea or solution on the table. Unfortunately the only way you will grow in your career is to formulate your own opinions and be able to reason through them. Blindly following someone else’s voting or reasoning might work in the near term, but it will not catapult you ahead in life. I understand, it’s a hard skill to learn if this does not come to you intuitively. To overcome it, you need to observe and absorb from the best around you while giving it your own unique twist. As Neale Donald Walsch said “**Growth begins at the end of your comfort zone**”.\n\n![](/static/images/opinions3.jpg)\n\n## In closing…\n\nBeing apathetic when you are being asked to opine on something can be demotivating and unproductive to the people seeking your input. It’s easy to not care. Caring takes effort. Be empathetic and craft your opinions to fit what your audience is looking for to move the conversation forward. Your inputs matter and make sure to formulate strong opinions drawing on your experience and surroundings."
    },
    "slug": "opinions",
    "path": "posts/opinions",
    "filePath": "opinions.mdx",
    "toc": [],
    "readingTime": {
      "text": "4 min read",
      "minutes": 3.43,
      "time": 205800,
      "words": 686
    },
    "structuredData": {
      "@context": "https://schema.org",
      "@type": "BlogPosting",
      "headline": "Why having opinions matters",
      "datePublished": "2024-06-29T00:00:00.000Z",
      "dateModified": "2024-06-29T00:00:00.000Z",
      "description": "Don't be shy to speak your truth",
      "image": "/static/images/opinions.jpeg",
      "url": "https://arjunrao.co/posts/opinions"
    }
  },
  {
    "title": "Effective Pair Programming",
    "date": "2024-02-20T00:00:00.000Z",
    "tags": [
      "growth",
      "programming",
      "engineering"
    ],
    "lastmod": undefined,
    "draft": false,
    "summary": "Learning while doing",
    "images": [
      "/static/images/pair.jpeg"
    ],
    "authors": undefined,
    "layout": undefined,
    "bibliography": undefined,
    "canonicalUrl": undefined,
    "content": "Pair programming is the act of multiple (generally two) people working in real-time to solve a coding problem. Pair programming is often used amongst teams to be able to solve problems their teams are asked to address. Some teams apply it as a blanket pattern, whereas others will use it more surgically based on the type of the problem.\n\nOne question that comes up is \"How often should you pair program?\" I think this varies quite a bit. It varies on the nature of the people on the team, the kind of work, the experience level, the comfort of the team etc etc.\n\nThe best type of pair programming in a high performing team is a bit of a paradox. My sample set of senior staff or high performing individuals on a team, prefer to be uninterrupted during their day and go heads-down when they want to accomplish a task. On the other hand, the ideal form of pair programming is where you don't have an imbalance of power i.e. it is not a teacher/student type of relationship, but instead you have a beehive sort of dynamic. Where everyone is individually responsible for something in a way that is nearly equal, and is nearly just as taxing.\n\nThat balance of power or knowledge, the dynamic I am alluding to, is fairly crucial for everyone to have a good experience while pair programming. In my experience, it tends to work best with peers or near-peers programming together, but tends to break down once there is a bigger difference in experience or talent. This isn't casting any judgement on experienced engineers, but is just a reflection on the kinds of things that make people productive in their domain.\n\nThere is a feeling that a team that pair programs more feels more cohesive. I think there is truth to that. The fact that a team talks together more often likely increases their level of comfort with each other, makes them know each other better and provides a lot of opportunities to understand each other socially too. There are other more obvious benefits of pair programming too - observing someone else closely and following their nuanced thinking approach, or seeing the tips or tricks they use while addressing a problem in real time, can be hugely beneficial to your own growth.\n\nHowever, the question boils down to \"How often should you pair program?\" I think each team should have this conversation with each other honestly, to find the best balance of ensuring they feel supported, to improve feelings of team cohesion and to ultimately ensure that the unit as a whole feels productive towards the problems they are being asked to solve.",
    "_id": "pair-programming.mdx",
    "_raw": {
      "flattenedPath": "pair-programming"
    },
    "body": {
      "raw": "Pair programming is the act of multiple (generally two) people working in real-time to solve a coding problem. Pair programming is often used amongst teams to be able to solve problems their teams are asked to address. Some teams apply it as a blanket pattern, whereas others will use it more surgically based on the type of the problem.\n\nOne question that comes up is \"How often should you pair program?\" I think this varies quite a bit. It varies on the nature of the people on the team, the kind of work, the experience level, the comfort of the team etc etc.\n\nThe best type of pair programming in a high performing team is a bit of a paradox. My sample set of senior staff or high performing individuals on a team, prefer to be uninterrupted during their day and go heads-down when they want to accomplish a task. On the other hand, the ideal form of pair programming is where you don't have an imbalance of power i.e. it is not a teacher/student type of relationship, but instead you have a beehive sort of dynamic. Where everyone is individually responsible for something in a way that is nearly equal, and is nearly just as taxing.\n\nThat balance of power or knowledge, the dynamic I am alluding to, is fairly crucial for everyone to have a good experience while pair programming. In my experience, it tends to work best with peers or near-peers programming together, but tends to break down once there is a bigger difference in experience or talent. This isn't casting any judgement on experienced engineers, but is just a reflection on the kinds of things that make people productive in their domain.\n\nThere is a feeling that a team that pair programs more feels more cohesive. I think there is truth to that. The fact that a team talks together more often likely increases their level of comfort with each other, makes them know each other better and provides a lot of opportunities to understand each other socially too. There are other more obvious benefits of pair programming too - observing someone else closely and following their nuanced thinking approach, or seeing the tips or tricks they use while addressing a problem in real time, can be hugely beneficial to your own growth.\n\nHowever, the question boils down to \"How often should you pair program?\" I think each team should have this conversation with each other honestly, to find the best balance of ensuring they feel supported, to improve feelings of team cohesion and to ultimately ensure that the unit as a whole feels productive towards the problems they are being asked to solve.",
      "code": "Pair programming is the act of multiple (generally two) people working in real-time to solve a coding problem. Pair programming is often used amongst teams to be able to solve problems their teams are asked to address. Some teams apply it as a blanket pattern, whereas others will use it more surgically based on the type of the problem.\n\nOne question that comes up is \"How often should you pair program?\" I think this varies quite a bit. It varies on the nature of the people on the team, the kind of work, the experience level, the comfort of the team etc etc.\n\nThe best type of pair programming in a high performing team is a bit of a paradox. My sample set of senior staff or high performing individuals on a team, prefer to be uninterrupted during their day and go heads-down when they want to accomplish a task. On the other hand, the ideal form of pair programming is where you don't have an imbalance of power i.e. it is not a teacher/student type of relationship, but instead you have a beehive sort of dynamic. Where everyone is individually responsible for something in a way that is nearly equal, and is nearly just as taxing.\n\nThat balance of power or knowledge, the dynamic I am alluding to, is fairly crucial for everyone to have a good experience while pair programming. In my experience, it tends to work best with peers or near-peers programming together, but tends to break down once there is a bigger difference in experience or talent. This isn't casting any judgement on experienced engineers, but is just a reflection on the kinds of things that make people productive in their domain.\n\nThere is a feeling that a team that pair programs more feels more cohesive. I think there is truth to that. The fact that a team talks together more often likely increases their level of comfort with each other, makes them know each other better and provides a lot of opportunities to understand each other socially too. There are other more obvious benefits of pair programming too - observing someone else closely and following their nuanced thinking approach, or seeing the tips or tricks they use while addressing a problem in real time, can be hugely beneficial to your own growth.\n\nHowever, the question boils down to \"How often should you pair program?\" I think each team should have this conversation with each other honestly, to find the best balance of ensuring they feel supported, to improve feelings of team cohesion and to ultimately ensure that the unit as a whole feels productive towards the problems they are being asked to solve."
    },
    "slug": "pair-programming",
    "path": "posts/pair-programming",
    "filePath": "pair-programming.mdx",
    "toc": [],
    "readingTime": {
      "text": "3 min read",
      "minutes": 2.23,
      "time": 133800,
      "words": 446
    },
    "structuredData": {
      "@context": "https://schema.org",
      "@type": "BlogPosting",
      "headline": "Effective Pair Programming",
      "datePublished": "2024-02-20T00:00:00.000Z",
      "dateModified": "2024-02-20T00:00:00.000Z",
      "description": "Learning while doing",
      "image": "/static/images/pair.jpeg",
      "url": "https://arjunrao.co/posts/pair-programming"
    }
  },
  {
    "title": "The Power of Unexpected Positivity: Amplify Your Feedback",
    "date": "2024-02-26T00:00:00.000Z",
    "tags": [
      "feedback",
      "optimism"
    ],
    "lastmod": undefined,
    "draft": false,
    "summary": "Inspiring people through unexpected positive feedback",
    "images": [
      "/static/images/sunshine.jpeg"
    ],
    "authors": undefined,
    "layout": undefined,
    "bibliography": undefined,
    "canonicalUrl": undefined,
    "content": "Be generous with your words and actions. As the saying goes, it doesn’t cost you anything. But, it might make a world of a difference for someone else who receives it.\n\nSmall acts you notice that you immediately want to give someone thanks for. Or appreciating the quality or success of a particular task or job someone else does. Passing on someone else’s gratitude to its intended recipient. These are all great examples of being kind with your words. Whether you are their manager, peer, or direct report, don’t be stingy with your praise. If it is genuine and well-intended, make sure you give the person your positive feedback.\n\nEveryone has some degree of imposter syndrome and self-doubt about themselves. A kind word or a pat on the back, when they least expect it, can turbocharge them and boost their self-confidence. Its all about the small wins. If one builds enough momentum with their small wins, there is no stopping that person.",
    "_id": "positivity.mdx",
    "_raw": {
      "flattenedPath": "positivity"
    },
    "body": {
      "raw": "Be generous with your words and actions. As the saying goes, it doesn’t cost you anything. But, it might make a world of a difference for someone else who receives it.\n\nSmall acts you notice that you immediately want to give someone thanks for. Or appreciating the quality or success of a particular task or job someone else does. Passing on someone else’s gratitude to its intended recipient. These are all great examples of being kind with your words. Whether you are their manager, peer, or direct report, don’t be stingy with your praise. If it is genuine and well-intended, make sure you give the person your positive feedback.\n\nEveryone has some degree of imposter syndrome and self-doubt about themselves. A kind word or a pat on the back, when they least expect it, can turbocharge them and boost their self-confidence. Its all about the small wins. If one builds enough momentum with their small wins, there is no stopping that person.",
      "code": "Be generous with your words and actions. As the saying goes, it doesn’t cost you anything. But, it might make a world of a difference for someone else who receives it.\n\nSmall acts you notice that you immediately want to give someone thanks for. Or appreciating the quality or success of a particular task or job someone else does. Passing on someone else’s gratitude to its intended recipient. These are all great examples of being kind with your words. Whether you are their manager, peer, or direct report, don’t be stingy with your praise. If it is genuine and well-intended, make sure you give the person your positive feedback.\n\nEveryone has some degree of imposter syndrome and self-doubt about themselves. A kind word or a pat on the back, when they least expect it, can turbocharge them and boost their self-confidence. Its all about the small wins. If one builds enough momentum with their small wins, there is no stopping that person."
    },
    "slug": "positivity",
    "path": "posts/positivity",
    "filePath": "positivity.mdx",
    "toc": [],
    "readingTime": {
      "text": "1 min read",
      "minutes": 0.81,
      "time": 48600,
      "words": 162
    },
    "structuredData": {
      "@context": "https://schema.org",
      "@type": "BlogPosting",
      "headline": "The Power of Unexpected Positivity: Amplify Your Feedback",
      "datePublished": "2024-02-26T00:00:00.000Z",
      "dateModified": "2024-02-26T00:00:00.000Z",
      "description": "Inspiring people through unexpected positive feedback",
      "image": "/static/images/sunshine.jpeg",
      "url": "https://arjunrao.co/posts/positivity"
    }
  },
  {
    "title": "50 principles of navigating work and life",
    "date": "2024-07-07T00:00:00.000Z",
    "tags": [
      "growth"
    ],
    "lastmod": undefined,
    "draft": false,
    "summary": "Learnings that have helped me in my own life and career",
    "images": [
      "/static/images/principles.jpeg"
    ],
    "authors": undefined,
    "layout": undefined,
    "bibliography": undefined,
    "canonicalUrl": undefined,
    "content": "These are principles I adhere to for my own life so I realized I should write it down to codify it for posterity. They are intentionally short to be memorable and are in no particular order. Over time I imagine I will add on to them, as these are the learnings of my interactions with time.\n\n- Never underestimate the **importance of the people** around you, and the impact you have on them.\n\n- If you **fight the good fight** and you fight it for the right reasons, people will appreciate you for who you are.\n\n- **Don't burn any bridges**, because you never know when your paths will cross again and in what capacity.\n\n- **No (wo)man is an island**. Decisions that you make, have a far broader impact than just yourself.\n\n- **Listen to the other voices** in the room and build out the decision tree to formulate/translate your own thoughts. If you have a differing opinion, voice it, because you won't always be asked for it.\n\n- It is easy to criticize and not that easy to empathize. Before criticizing decisions other people made, first **think of what assumptions have been made** to come to that conclusion, and that might help with empathizing.\n\n- **Don't be a yes (wo)man** and don't be a no (wo)man either. Others like minds that poke holes in theories, with rational arguments, but do not like someone who is always a contrarian, for the sake of it.\n\n- When you present a problem, **make sure you have a possible solution** to go with it, even if it is nascent/half-baked. If you always bring only problems, and no solutions, it isn't helpful to anyone.\n\n- **Always be positive** and energetic around your team. Positivity is contagious but negativity even more so.\n\n- **Have conviction in what you believe**, based on gut instinct or facts. Have confidence in your own decisions and stick by it.\n\n- **Don't fall for the buzzwords** and the shiny toys. As per Occam's razor, the simplest solutions are often the right ones.\n\n- **When in doubt or confusion, seek help**. Spinning wheels, twiddling thumbs or presenting face-time, in an effort to look productive, while headed nowhere, is a waste of time and effort.\n\n- As much as it is a cliche, **no question is a dumb question**.\n\n- Always try to **build something of \"true\" value**. People you work with along the way, as well as end users, will always know and appreciate the significance of a maker who cares.\n\n- **Multiple choices have diminishing returns**. Marie Kondo the options, so that you can make a decision faster and more efficiently. Follow the principle of Essentialism. Instead of dispersing your energy in a 100 directions, focus all that energy in 1 direction.\n\n- **Know when the juice is not worth the squeeze**. This is with respect to holding positions in a discussion/argument, effort being put into building something out, etc.\n\n- **Don't make money the sole measure of success**. Money makes certain things simpler, but makes other things more complicated. Invest in good projects and healthy relationships as a priority, and money will find its way.\n\n- **Perfect is the enemy of good**. Don't procrastinate to deliver on a result. If you aren't embarrassed of what you shipped, then you are probably too late. Avoid paralysis by analysis.\n\n- **Don't compete in a rat race**. Even if you win, you are still a rat.\n\n- **Don't wing your career**. It isn't something that you can just do on the fly. Be deliberate about the skills you lack and the direction you need to take, while making the important decisions.\n\n- **Inspire and inform people around you**. Inspiration comes in all shapes and forms. It isn't always an a-ha moment.\n\n- If you have achieved a modicum of success, **give back to the community**. The social fabric binds the sanity of the collective.\n\n- **Don't silo and hide information** from other people. Being transparent will help you and others achieve their tasks and objectives much more efficiently.\n\n- If your subordinate outshines you, **don't be petty or vengeful**. Them achieving that success is a measure of your mentorship/leadership abilities.\n\n- As a general rule, **don't discuss politics**, religion or race at a workplace.\n\n- **Always be open to new ideas** and differing points of view. You may or may not agree with them today, but they might help shape an opinion on a completely different topic, some other time.\n\n- **Take ownership and accountability** of things you are responsible for. If someone trusts you to do something, you need to be accountable for that.\n\n- Task determination and execution should be as **decentralized** as possible. The more the concentration of decision-making capabilities, the more the bottlenecks and points of failure.\n\n- **Different people have different strengths and weaknesses**. If you find out what these are for individual people, your value-add increases drastically.\n\n- **Increase diversity of thought** in your decision making process. You agreeing, all the time, with a bunch of other people, who have no differing opinions, serves no purpose.\n\n- If you truly believe in something, **give it your all**.\n\n- **Always be hungry** and curious for learning. If you do not have the knowledge, be a sponge.\n\n- You are unique and, by extension, your perspectives that you bring to the table are unique. **Dismiss any feelings of \"imposter syndrome\"** you have and seize the opportunity. Carpe diem.\n\n- If you are stuck with a problem, trying to jackhammer it, for extended periods of time, might be completely unhelpful. Letting it sit overnight, and seeing it with a **fresh set of eyes** and neuron connections, might help facilitate the solution.\n\n- As General Patton said - \"**Do everything you ask of those you command**\". Don't try to pass off some grunt work to someone else, just to shirk responsibility, if you yourself would never want to do it.\n\n- Professional life is a fine balance between being a **one-trick-pony and a jack-of-all-trades-master-of-none**.\n\n- **Be greedy with your ideas and frugal with your implementations**. Ideas can be cheap, your time isn't.\n\n- If you are building a product or designing something, **be your own first customer**. Try to understand and predict what kind of pains a first user will encounter.\n\n- Before jumping into any assignment given to you, **ask all the right questions** prior to starting it. Taking a step back and applying some critical thinking to the problem at hand will only move towards a positive outcome.\n\n- **Don't be too attached to an idea**. An idea held too long without rationale is just an ideology.\n\n- If someone isn't agreeing to your point of view, it could be that **you are not conveying your idea clearly enough**, rather than the other person being intransigent.\n\n- While making your argument, **don't be polemic or pedantic**. People don't like being attacked or talked down to.\n\n- **Less is more**. Some people like to pad their words with jargon and fancy sounding terms for no apparent reason, but it just reduces the potency of their point and you will tend to lose interest in what they have to say.\n\n- If you notice problems/issues, **see what you can do to solve** it rather than resorting to complaining.\n\n- If a lot of people are complaining about something, rather than joining them, think about how it can be solved. **Opportunities abound where inaction lays**.\n\n- When executing a plan, **always have a plan B**. No plan survives the first contact intact.\n\n- **If you do not know something, admit it** rather than making an elaborate excuse to cover up your lack of expertise. You will be respected for your honesty.\n\n- **Don't lose touch with reality**. Always make an attempt to feel the pulse of the community around you, below and above you.\n\n- **A job is about 3 things** - security/peace of mind, money/financially rewarding and learning/being challenged. Many times, you can find at most, 2 out of 3 at a place. If you find all 3, consider yourself lucky.\n\n- **Don't be afraid of failure** - not every project or endeavor can be successful. If you haven't failed at anything, you haven't tried to get out of your comfort zone and tried anything worthwhile yet.",
    "_id": "principles.mdx",
    "_raw": {
      "flattenedPath": "principles"
    },
    "body": {
      "raw": "These are principles I adhere to for my own life so I realized I should write it down to codify it for posterity. They are intentionally short to be memorable and are in no particular order. Over time I imagine I will add on to them, as these are the learnings of my interactions with time.\n\n- Never underestimate the **importance of the people** around you, and the impact you have on them.\n\n- If you **fight the good fight** and you fight it for the right reasons, people will appreciate you for who you are.\n\n- **Don't burn any bridges**, because you never know when your paths will cross again and in what capacity.\n\n- **No (wo)man is an island**. Decisions that you make, have a far broader impact than just yourself.\n\n- **Listen to the other voices** in the room and build out the decision tree to formulate/translate your own thoughts. If you have a differing opinion, voice it, because you won't always be asked for it.\n\n- It is easy to criticize and not that easy to empathize. Before criticizing decisions other people made, first **think of what assumptions have been made** to come to that conclusion, and that might help with empathizing.\n\n- **Don't be a yes (wo)man** and don't be a no (wo)man either. Others like minds that poke holes in theories, with rational arguments, but do not like someone who is always a contrarian, for the sake of it.\n\n- When you present a problem, **make sure you have a possible solution** to go with it, even if it is nascent/half-baked. If you always bring only problems, and no solutions, it isn't helpful to anyone.\n\n- **Always be positive** and energetic around your team. Positivity is contagious but negativity even more so.\n\n- **Have conviction in what you believe**, based on gut instinct or facts. Have confidence in your own decisions and stick by it.\n\n- **Don't fall for the buzzwords** and the shiny toys. As per Occam's razor, the simplest solutions are often the right ones.\n\n- **When in doubt or confusion, seek help**. Spinning wheels, twiddling thumbs or presenting face-time, in an effort to look productive, while headed nowhere, is a waste of time and effort.\n\n- As much as it is a cliche, **no question is a dumb question**.\n\n- Always try to **build something of \"true\" value**. People you work with along the way, as well as end users, will always know and appreciate the significance of a maker who cares.\n\n- **Multiple choices have diminishing returns**. Marie Kondo the options, so that you can make a decision faster and more efficiently. Follow the principle of Essentialism. Instead of dispersing your energy in a 100 directions, focus all that energy in 1 direction.\n\n- **Know when the juice is not worth the squeeze**. This is with respect to holding positions in a discussion/argument, effort being put into building something out, etc.\n\n- **Don't make money the sole measure of success**. Money makes certain things simpler, but makes other things more complicated. Invest in good projects and healthy relationships as a priority, and money will find its way.\n\n- **Perfect is the enemy of good**. Don't procrastinate to deliver on a result. If you aren't embarrassed of what you shipped, then you are probably too late. Avoid paralysis by analysis.\n\n- **Don't compete in a rat race**. Even if you win, you are still a rat.\n\n- **Don't wing your career**. It isn't something that you can just do on the fly. Be deliberate about the skills you lack and the direction you need to take, while making the important decisions.\n\n- **Inspire and inform people around you**. Inspiration comes in all shapes and forms. It isn't always an a-ha moment.\n\n- If you have achieved a modicum of success, **give back to the community**. The social fabric binds the sanity of the collective.\n\n- **Don't silo and hide information** from other people. Being transparent will help you and others achieve their tasks and objectives much more efficiently.\n\n- If your subordinate outshines you, **don't be petty or vengeful**. Them achieving that success is a measure of your mentorship/leadership abilities.\n\n- As a general rule, **don't discuss politics**, religion or race at a workplace.\n\n- **Always be open to new ideas** and differing points of view. You may or may not agree with them today, but they might help shape an opinion on a completely different topic, some other time.\n\n- **Take ownership and accountability** of things you are responsible for. If someone trusts you to do something, you need to be accountable for that.\n\n- Task determination and execution should be as **decentralized** as possible. The more the concentration of decision-making capabilities, the more the bottlenecks and points of failure.\n\n- **Different people have different strengths and weaknesses**. If you find out what these are for individual people, your value-add increases drastically.\n\n- **Increase diversity of thought** in your decision making process. You agreeing, all the time, with a bunch of other people, who have no differing opinions, serves no purpose.\n\n- If you truly believe in something, **give it your all**.\n\n- **Always be hungry** and curious for learning. If you do not have the knowledge, be a sponge.\n\n- You are unique and, by extension, your perspectives that you bring to the table are unique. **Dismiss any feelings of \"imposter syndrome\"** you have and seize the opportunity. Carpe diem.\n\n- If you are stuck with a problem, trying to jackhammer it, for extended periods of time, might be completely unhelpful. Letting it sit overnight, and seeing it with a **fresh set of eyes** and neuron connections, might help facilitate the solution.\n\n- As General Patton said - \"**Do everything you ask of those you command**\". Don't try to pass off some grunt work to someone else, just to shirk responsibility, if you yourself would never want to do it.\n\n- Professional life is a fine balance between being a **one-trick-pony and a jack-of-all-trades-master-of-none**.\n\n- **Be greedy with your ideas and frugal with your implementations**. Ideas can be cheap, your time isn't.\n\n- If you are building a product or designing something, **be your own first customer**. Try to understand and predict what kind of pains a first user will encounter.\n\n- Before jumping into any assignment given to you, **ask all the right questions** prior to starting it. Taking a step back and applying some critical thinking to the problem at hand will only move towards a positive outcome.\n\n- **Don't be too attached to an idea**. An idea held too long without rationale is just an ideology.\n\n- If someone isn't agreeing to your point of view, it could be that **you are not conveying your idea clearly enough**, rather than the other person being intransigent.\n\n- While making your argument, **don't be polemic or pedantic**. People don't like being attacked or talked down to.\n\n- **Less is more**. Some people like to pad their words with jargon and fancy sounding terms for no apparent reason, but it just reduces the potency of their point and you will tend to lose interest in what they have to say.\n\n- If you notice problems/issues, **see what you can do to solve** it rather than resorting to complaining.\n\n- If a lot of people are complaining about something, rather than joining them, think about how it can be solved. **Opportunities abound where inaction lays**.\n\n- When executing a plan, **always have a plan B**. No plan survives the first contact intact.\n\n- **If you do not know something, admit it** rather than making an elaborate excuse to cover up your lack of expertise. You will be respected for your honesty.\n\n- **Don't lose touch with reality**. Always make an attempt to feel the pulse of the community around you, below and above you.\n\n- **A job is about 3 things** - security/peace of mind, money/financially rewarding and learning/being challenged. Many times, you can find at most, 2 out of 3 at a place. If you find all 3, consider yourself lucky.\n\n- **Don't be afraid of failure** - not every project or endeavor can be successful. If you haven't failed at anything, you haven't tried to get out of your comfort zone and tried anything worthwhile yet.",
      "code": "These are principles I adhere to for my own life so I realized I should write it down to codify it for posterity. They are intentionally short to be memorable and are in no particular order. Over time I imagine I will add on to them, as these are the learnings of my interactions with time.\n\n- Never underestimate the **importance of the people** around you, and the impact you have on them.\n\n- If you **fight the good fight** and you fight it for the right reasons, people will appreciate you for who you are.\n\n- **Don't burn any bridges**, because you never know when your paths will cross again and in what capacity.\n\n- **No (wo)man is an island**. Decisions that you make, have a far broader impact than just yourself.\n\n- **Listen to the other voices** in the room and build out the decision tree to formulate/translate your own thoughts. If you have a differing opinion, voice it, because you won't always be asked for it.\n\n- It is easy to criticize and not that easy to empathize. Before criticizing decisions other people made, first **think of what assumptions have been made** to come to that conclusion, and that might help with empathizing.\n\n- **Don't be a yes (wo)man** and don't be a no (wo)man either. Others like minds that poke holes in theories, with rational arguments, but do not like someone who is always a contrarian, for the sake of it.\n\n- When you present a problem, **make sure you have a possible solution** to go with it, even if it is nascent/half-baked. If you always bring only problems, and no solutions, it isn't helpful to anyone.\n\n- **Always be positive** and energetic around your team. Positivity is contagious but negativity even more so.\n\n- **Have conviction in what you believe**, based on gut instinct or facts. Have confidence in your own decisions and stick by it.\n\n- **Don't fall for the buzzwords** and the shiny toys. As per Occam's razor, the simplest solutions are often the right ones.\n\n- **When in doubt or confusion, seek help**. Spinning wheels, twiddling thumbs or presenting face-time, in an effort to look productive, while headed nowhere, is a waste of time and effort.\n\n- As much as it is a cliche, **no question is a dumb question**.\n\n- Always try to **build something of \"true\" value**. People you work with along the way, as well as end users, will always know and appreciate the significance of a maker who cares.\n\n- **Multiple choices have diminishing returns**. Marie Kondo the options, so that you can make a decision faster and more efficiently. Follow the principle of Essentialism. Instead of dispersing your energy in a 100 directions, focus all that energy in 1 direction.\n\n- **Know when the juice is not worth the squeeze**. This is with respect to holding positions in a discussion/argument, effort being put into building something out, etc.\n\n- **Don't make money the sole measure of success**. Money makes certain things simpler, but makes other things more complicated. Invest in good projects and healthy relationships as a priority, and money will find its way.\n\n- **Perfect is the enemy of good**. Don't procrastinate to deliver on a result. If you aren't embarrassed of what you shipped, then you are probably too late. Avoid paralysis by analysis.\n\n- **Don't compete in a rat race**. Even if you win, you are still a rat.\n\n- **Don't wing your career**. It isn't something that you can just do on the fly. Be deliberate about the skills you lack and the direction you need to take, while making the important decisions.\n\n- **Inspire and inform people around you**. Inspiration comes in all shapes and forms. It isn't always an a-ha moment.\n\n- If you have achieved a modicum of success, **give back to the community**. The social fabric binds the sanity of the collective.\n\n- **Don't silo and hide information** from other people. Being transparent will help you and others achieve their tasks and objectives much more efficiently.\n\n- If your subordinate outshines you, **don't be petty or vengeful**. Them achieving that success is a measure of your mentorship/leadership abilities.\n\n- As a general rule, **don't discuss politics**, religion or race at a workplace.\n\n- **Always be open to new ideas** and differing points of view. You may or may not agree with them today, but they might help shape an opinion on a completely different topic, some other time.\n\n- **Take ownership and accountability** of things you are responsible for. If someone trusts you to do something, you need to be accountable for that.\n\n- Task determination and execution should be as **decentralized** as possible. The more the concentration of decision-making capabilities, the more the bottlenecks and points of failure.\n\n- **Different people have different strengths and weaknesses**. If you find out what these are for individual people, your value-add increases drastically.\n\n- **Increase diversity of thought** in your decision making process. You agreeing, all the time, with a bunch of other people, who have no differing opinions, serves no purpose.\n\n- If you truly believe in something, **give it your all**.\n\n- **Always be hungry** and curious for learning. If you do not have the knowledge, be a sponge.\n\n- You are unique and, by extension, your perspectives that you bring to the table are unique. **Dismiss any feelings of \"imposter syndrome\"** you have and seize the opportunity. Carpe diem.\n\n- If you are stuck with a problem, trying to jackhammer it, for extended periods of time, might be completely unhelpful. Letting it sit overnight, and seeing it with a **fresh set of eyes** and neuron connections, might help facilitate the solution.\n\n- As General Patton said - \"**Do everything you ask of those you command**\". Don't try to pass off some grunt work to someone else, just to shirk responsibility, if you yourself would never want to do it.\n\n- Professional life is a fine balance between being a **one-trick-pony and a jack-of-all-trades-master-of-none**.\n\n- **Be greedy with your ideas and frugal with your implementations**. Ideas can be cheap, your time isn't.\n\n- If you are building a product or designing something, **be your own first customer**. Try to understand and predict what kind of pains a first user will encounter.\n\n- Before jumping into any assignment given to you, **ask all the right questions** prior to starting it. Taking a step back and applying some critical thinking to the problem at hand will only move towards a positive outcome.\n\n- **Don't be too attached to an idea**. An idea held too long without rationale is just an ideology.\n\n- If someone isn't agreeing to your point of view, it could be that **you are not conveying your idea clearly enough**, rather than the other person being intransigent.\n\n- While making your argument, **don't be polemic or pedantic**. People don't like being attacked or talked down to.\n\n- **Less is more**. Some people like to pad their words with jargon and fancy sounding terms for no apparent reason, but it just reduces the potency of their point and you will tend to lose interest in what they have to say.\n\n- If you notice problems/issues, **see what you can do to solve** it rather than resorting to complaining.\n\n- If a lot of people are complaining about something, rather than joining them, think about how it can be solved. **Opportunities abound where inaction lays**.\n\n- When executing a plan, **always have a plan B**. No plan survives the first contact intact.\n\n- **If you do not know something, admit it** rather than making an elaborate excuse to cover up your lack of expertise. You will be respected for your honesty.\n\n- **Don't lose touch with reality**. Always make an attempt to feel the pulse of the community around you, below and above you.\n\n- **A job is about 3 things** - security/peace of mind, money/financially rewarding and learning/being challenged. Many times, you can find at most, 2 out of 3 at a place. If you find all 3, consider yourself lucky.\n\n- **Don't be afraid of failure** - not every project or endeavor can be successful. If you haven't failed at anything, you haven't tried to get out of your comfort zone and tried anything worthwhile yet."
    },
    "slug": "principles",
    "path": "posts/principles",
    "filePath": "principles.mdx",
    "toc": [],
    "readingTime": {
      "text": "7 min read",
      "minutes": 6.94,
      "time": 416400,
      "words": 1388
    },
    "structuredData": {
      "@context": "https://schema.org",
      "@type": "BlogPosting",
      "headline": "50 principles of navigating work and life",
      "datePublished": "2024-07-07T00:00:00.000Z",
      "dateModified": "2024-07-07T00:00:00.000Z",
      "description": "Learnings that have helped me in my own life and career",
      "image": "/static/images/principles.jpeg",
      "url": "https://arjunrao.co/posts/principles"
    }
  },
  {
    "title": "How to combat your psyche",
    "date": "2017-05-06T00:00:00.000Z",
    "tags": [
      "growth"
    ],
    "lastmod": undefined,
    "draft": false,
    "summary": "Forging a strong mind and overcoming adversity",
    "images": undefined,
    "authors": undefined,
    "layout": undefined,
    "bibliography": undefined,
    "canonicalUrl": undefined,
    "content": "Something most people don’t talk about are the low points they feel in life. It’s a taboo topic to voice those thoughts out aloud. Why let yourself be shown to be vulnerable, emotional or physical, in a Darwinian world? It was just never meant to be that way, emotionally or physically. Juxtapose this with today’s world, where everything is made to look fine and dandy and it is getting increasingly difficult to express how unhappy or discontent someone is feeling. Applications like Facebook and Instagram, which have fast become the way of life, only seem to propagate this myth of a Utopia where the person posting content seems to be having the time of their life. Unfortunately, the way most people seem to interpret such content is by extrapolating that time slice into a lifetime of events. Just because someone has taken a trip to, say the beautiful Australian outback, does not mean that that is their general way of life. I sure as hope it is, but 9/10 times it is not, and that is just the truth. We humans, can sometimes go beyond our way to self-deprecate or glance at the negatives far more than the positives.\n\nI am certainly not immune to negative thoughts. At a very primitive level, paranoia and fear forms the premise of our human psyche and survival. Perhaps people at higher intellectual orbits operate fundamentally differently but for me the acceptance of my own reality is like that of a sinusoidal wave. There are troughs and crests and they are not necessarily isochronal.\n\nWhile I am in the troughs, there are a broad range of negative thoughts; the thoughts are mostly centered around how little I have achieved thus far, either professionally or personally. The counter argument to this is that I have, not actually, achieved that little and I have achieved a fair bit of success. The mind, of course, can be rational but more often than not in such situations, it tends to plummet into the irrational. Facts like the ones stated above don’t really mean much. It is far easier to delve into the depths of uncertainty, than it is to find meaning to things. Once you slip into this labyrinth, you literally have one of two options; you either snap out of it, or you go and face your Minotaur.\n\nThis is when, the power of conviction and belief kicks in. I have put together a list of things that have helped me get out of this morass in the past, in no particular order —\n\n1. You need a genuine sense of purpose. Whatever it is you are doing in life, you need to either rethink what you are doing or follow what you are doing with a renewed sense of vigor.\n\n2. You need realistic direction. Either you figure this out by asking someone about it or dig deep into what you are doing and figure out why you are doing it. It is immensely important to know what it is your goal really is and what it is you are really after.\n\n3. You need remarkable focus to shut out the noise. This is very similar to the story of the boy with the oil, quite literally the story of the Secret of Happiness.\n\n4. You need a friend(s) who is ready to reel you out of this situation unselfishly. You need someone to do the straight talk without making you feel like you haven’t accomplished anything. You need someone who is not in the same frame of reference as you to look at things differently and set the record straight. Don’t be afraid to reach out for help. Helping each other out is a way of paying the system forward.\n\n5. You need to piggyback off someone else’s positivity. This is literally not the time ( if ever there is one ) to be jealous of someone else’s good fortune or purpose. Latch onto that positivity like a surfer catches a wave and your future self will thank you for it.\n\n6. Do not weigh yourself against unreal expectations. You will come up short and that will only make you feel worse about yourself. Don’t aggravate the situation unnecessarily.\n\n7. What you do NOT need is more negativity. Shut out the voices in your head. Say no to the detractors and things that distract you. At this very point in time, there are far too many things trying to stop you from getting to where you need to be than are. Knock down the endless list of things bogging you down leading you to your destination and forge on.\n\nEveryone goes through doubt and uncertainty. If you think people like Elon Musk, Jeff Bezos and the likes are not going through it I can unequivocally say, you are gravely mistaken. It is literally the feeling of inadequate accomplishments, with a sense of goals, that has lead to human greatness. What separates the good from the mediocre, is the ability to get past these thoughts and focus singularly on what they think is meaningful, whatever the scope of that maybe. Will you appear unscathed at the end of this process? Most likely not, but you sure will have learned several things about yourself that will make you stronger for the future.\n\n_“You have power over your mind — not outside events. Realize this, and you will find strength.” — Marcus Aurelius_",
    "_id": "psyche.mdx",
    "_raw": {
      "flattenedPath": "psyche"
    },
    "body": {
      "raw": "Something most people don’t talk about are the low points they feel in life. It’s a taboo topic to voice those thoughts out aloud. Why let yourself be shown to be vulnerable, emotional or physical, in a Darwinian world? It was just never meant to be that way, emotionally or physically. Juxtapose this with today’s world, where everything is made to look fine and dandy and it is getting increasingly difficult to express how unhappy or discontent someone is feeling. Applications like Facebook and Instagram, which have fast become the way of life, only seem to propagate this myth of a Utopia where the person posting content seems to be having the time of their life. Unfortunately, the way most people seem to interpret such content is by extrapolating that time slice into a lifetime of events. Just because someone has taken a trip to, say the beautiful Australian outback, does not mean that that is their general way of life. I sure as hope it is, but 9/10 times it is not, and that is just the truth. We humans, can sometimes go beyond our way to self-deprecate or glance at the negatives far more than the positives.\n\nI am certainly not immune to negative thoughts. At a very primitive level, paranoia and fear forms the premise of our human psyche and survival. Perhaps people at higher intellectual orbits operate fundamentally differently but for me the acceptance of my own reality is like that of a sinusoidal wave. There are troughs and crests and they are not necessarily isochronal.\n\nWhile I am in the troughs, there are a broad range of negative thoughts; the thoughts are mostly centered around how little I have achieved thus far, either professionally or personally. The counter argument to this is that I have, not actually, achieved that little and I have achieved a fair bit of success. The mind, of course, can be rational but more often than not in such situations, it tends to plummet into the irrational. Facts like the ones stated above don’t really mean much. It is far easier to delve into the depths of uncertainty, than it is to find meaning to things. Once you slip into this labyrinth, you literally have one of two options; you either snap out of it, or you go and face your Minotaur.\n\nThis is when, the power of conviction and belief kicks in. I have put together a list of things that have helped me get out of this morass in the past, in no particular order —\n\n1. You need a genuine sense of purpose. Whatever it is you are doing in life, you need to either rethink what you are doing or follow what you are doing with a renewed sense of vigor.\n\n2. You need realistic direction. Either you figure this out by asking someone about it or dig deep into what you are doing and figure out why you are doing it. It is immensely important to know what it is your goal really is and what it is you are really after.\n\n3. You need remarkable focus to shut out the noise. This is very similar to the story of the boy with the oil, quite literally the story of the Secret of Happiness.\n\n4. You need a friend(s) who is ready to reel you out of this situation unselfishly. You need someone to do the straight talk without making you feel like you haven’t accomplished anything. You need someone who is not in the same frame of reference as you to look at things differently and set the record straight. Don’t be afraid to reach out for help. Helping each other out is a way of paying the system forward.\n\n5. You need to piggyback off someone else’s positivity. This is literally not the time ( if ever there is one ) to be jealous of someone else’s good fortune or purpose. Latch onto that positivity like a surfer catches a wave and your future self will thank you for it.\n\n6. Do not weigh yourself against unreal expectations. You will come up short and that will only make you feel worse about yourself. Don’t aggravate the situation unnecessarily.\n\n7. What you do NOT need is more negativity. Shut out the voices in your head. Say no to the detractors and things that distract you. At this very point in time, there are far too many things trying to stop you from getting to where you need to be than are. Knock down the endless list of things bogging you down leading you to your destination and forge on.\n\nEveryone goes through doubt and uncertainty. If you think people like Elon Musk, Jeff Bezos and the likes are not going through it I can unequivocally say, you are gravely mistaken. It is literally the feeling of inadequate accomplishments, with a sense of goals, that has lead to human greatness. What separates the good from the mediocre, is the ability to get past these thoughts and focus singularly on what they think is meaningful, whatever the scope of that maybe. Will you appear unscathed at the end of this process? Most likely not, but you sure will have learned several things about yourself that will make you stronger for the future.\n\n_“You have power over your mind — not outside events. Realize this, and you will find strength.” — Marcus Aurelius_",
      "code": "Something most people don’t talk about are the low points they feel in life. It’s a taboo topic to voice those thoughts out aloud. Why let yourself be shown to be vulnerable, emotional or physical, in a Darwinian world? It was just never meant to be that way, emotionally or physically. Juxtapose this with today’s world, where everything is made to look fine and dandy and it is getting increasingly difficult to express how unhappy or discontent someone is feeling. Applications like Facebook and Instagram, which have fast become the way of life, only seem to propagate this myth of a Utopia where the person posting content seems to be having the time of their life. Unfortunately, the way most people seem to interpret such content is by extrapolating that time slice into a lifetime of events. Just because someone has taken a trip to, say the beautiful Australian outback, does not mean that that is their general way of life. I sure as hope it is, but 9/10 times it is not, and that is just the truth. We humans, can sometimes go beyond our way to self-deprecate or glance at the negatives far more than the positives.\n\nI am certainly not immune to negative thoughts. At a very primitive level, paranoia and fear forms the premise of our human psyche and survival. Perhaps people at higher intellectual orbits operate fundamentally differently but for me the acceptance of my own reality is like that of a sinusoidal wave. There are troughs and crests and they are not necessarily isochronal.\n\nWhile I am in the troughs, there are a broad range of negative thoughts; the thoughts are mostly centered around how little I have achieved thus far, either professionally or personally. The counter argument to this is that I have, not actually, achieved that little and I have achieved a fair bit of success. The mind, of course, can be rational but more often than not in such situations, it tends to plummet into the irrational. Facts like the ones stated above don’t really mean much. It is far easier to delve into the depths of uncertainty, than it is to find meaning to things. Once you slip into this labyrinth, you literally have one of two options; you either snap out of it, or you go and face your Minotaur.\n\nThis is when, the power of conviction and belief kicks in. I have put together a list of things that have helped me get out of this morass in the past, in no particular order —\n\n1. You need a genuine sense of purpose. Whatever it is you are doing in life, you need to either rethink what you are doing or follow what you are doing with a renewed sense of vigor.\n\n2. You need realistic direction. Either you figure this out by asking someone about it or dig deep into what you are doing and figure out why you are doing it. It is immensely important to know what it is your goal really is and what it is you are really after.\n\n3. You need remarkable focus to shut out the noise. This is very similar to the story of the boy with the oil, quite literally the story of the Secret of Happiness.\n\n4. You need a friend(s) who is ready to reel you out of this situation unselfishly. You need someone to do the straight talk without making you feel like you haven’t accomplished anything. You need someone who is not in the same frame of reference as you to look at things differently and set the record straight. Don’t be afraid to reach out for help. Helping each other out is a way of paying the system forward.\n\n5. You need to piggyback off someone else’s positivity. This is literally not the time ( if ever there is one ) to be jealous of someone else’s good fortune or purpose. Latch onto that positivity like a surfer catches a wave and your future self will thank you for it.\n\n6. Do not weigh yourself against unreal expectations. You will come up short and that will only make you feel worse about yourself. Don’t aggravate the situation unnecessarily.\n\n7. What you do NOT need is more negativity. Shut out the voices in your head. Say no to the detractors and things that distract you. At this very point in time, there are far too many things trying to stop you from getting to where you need to be than are. Knock down the endless list of things bogging you down leading you to your destination and forge on.\n\nEveryone goes through doubt and uncertainty. If you think people like Elon Musk, Jeff Bezos and the likes are not going through it I can unequivocally say, you are gravely mistaken. It is literally the feeling of inadequate accomplishments, with a sense of goals, that has lead to human greatness. What separates the good from the mediocre, is the ability to get past these thoughts and focus singularly on what they think is meaningful, whatever the scope of that maybe. Will you appear unscathed at the end of this process? Most likely not, but you sure will have learned several things about yourself that will make you stronger for the future.\n\n_“You have power over your mind — not outside events. Realize this, and you will find strength.” — Marcus Aurelius_"
    },
    "slug": "psyche",
    "path": "posts/psyche",
    "filePath": "psyche.mdx",
    "toc": [],
    "readingTime": {
      "text": "5 min read",
      "minutes": 4.5,
      "time": 270000,
      "words": 900
    },
    "structuredData": {
      "@context": "https://schema.org",
      "@type": "BlogPosting",
      "headline": "How to combat your psyche",
      "datePublished": "2017-05-06T00:00:00.000Z",
      "dateModified": "2017-05-06T00:00:00.000Z",
      "description": "Forging a strong mind and overcoming adversity",
      "image": "/static/images/twitter-card.png",
      "url": "https://arjunrao.co/posts/psyche"
    }
  },
  {
    "title": "Simple wonders of RAG using Ollama, Langchain and ChromaDB",
    "date": "2024-05-01T00:00:00.000Z",
    "tags": [
      "machinelearning",
      "ai",
      "llm"
    ],
    "lastmod": undefined,
    "draft": false,
    "summary": "Harness the powers of RAG to turbocharge your LLM experience",
    "images": [
      "/static/images/rag-cover.jpeg"
    ],
    "authors": undefined,
    "layout": undefined,
    "bibliography": undefined,
    "canonicalUrl": undefined,
    "content": "Dive with me into the details of how you can use RAG to produce interesting results to questions related to a specific domain without needing to fine tune your own model.\n\n## What is RAG?\n\nRAG or Retrieval Augmented Generation is a really complicated way of saying “Knowledge base + LLM”. It describes a system that adds extra data, in addition to what the user provided, before querying the LLM. Where did that additional data come from? It could be from a number of different sources like vector databases, search engines, other pre-trained LLMs etc. \n\nYou can read my article for some more context around RAG. \n\n## How does it work in practice?\n\n### 1. No RAG aka Base Case \n\nBefore we get to RAG, we need to discuss “Chains” — the raison d’être for Langchain’s existence. From Langchain [documentation](https://python.langchain.com/docs/modules/chains/), Chains refer to sequences of calls — whether to an LLM, a tool, or a data preprocessing step. You can see more details in the experiments section. \n\nA simple chain you can set up would look something like — \n\n```sh\nchain = prompt | llm | output\n```\n\n![Simple chain](/static/images/simple_chain.png)\n\nAs you can see, this is very straightforward. You are passing a prompt to an LLM of choice, and then using a parser to produce the output. You are using langchain’s concept of “chains” to help sequence these elements, much like you would use pipes in Unix to chain together several system commands like ls | grep file.txt. \n\n### 2. With RAG\n\nThe majority of use cases that use RAG today do so by using some form of vector databases to store the information that the LLM uses to enhance the answer to the prompt. You can read how vector stores (or vector databases) store information and why its a better alternative than something like a traditional SQL or NoSQL store [here](https://www.cloudflare.com/learning/ai/what-is-vector-database/)\n\nThere are several flavors of vector databases ranging from commercial paid products like Pinecone to open source alternatives like ChromaDB and FAISS. I typically use ChromaDB because its easy to use and has a lot of support in the community. \n\nAt a high level, this is how RAG works with vector stores — \n\n- Take the data you want to provide as contextual information for your prompt and store them as vector embeddings in your vector store of choice. \n\n- Preload this information so that its available to any prompt that needs to use it. \n\n- At the time of prompt processing, retrieve the relevant context from the vector store — this time by embedding your query and then running a vector search against your store.\n\n- Pass that along with your prompt to the LLM so that the LLM can provide an appropriate response. \n\n- 💲 Profit 💲\n\n![ragchain](/static/images/rag.png)\n\nIn practice, a RAG chain would look something like this — \n```py\ndocs_chain = create_stuff_documents_chain(llm, prompt)\nretriever = vector_store.as_retriever()\nretrieval_chain = create_retrieval_chain(retriever, docs_chain)\n```\n\nIf you were to simplify the details of all these langchain functions like `create_stuff_documents_chain` and `create_retrieval_chain` (you can read up on these in Langchain’s official documentation), really what it boils down to is something like — \n```py\ncontext_data = vector_store\nchain = context_data | llm | prompt\n```\n\nwhich at a high level isn’t all that different from the base case shown above. The main difference is the inclusion of the contextual data that is provided with your prompt. And that my friends, is RAG. \n\nHowever, like all modern software, things can’t be THAT simple. So there is a lot of syntactic sugar to make all of these things work which looks like — \n```py\ndocs_chain = create_stuff_documents_chain(llm, prompt)\nretriever = vector_store.as_retriever()\nretrieval_chain = create_retrieval_chain(retriever, docs_chain)\n```\n\n![ragchain](/static/images/rag_chain.png)\n\nAs you can see in the diagram above there are many things happening to build an actual RAG-based system. However, if you focus on the “Retrieval chain”, you will see that it is composed of 2 main components —\n\n- the simple chain on the bottom and \n- the construction of the vector data on the top \n\nBob’s your uncle.\n\n## Running Experiments\n\nTo demonstrate the effectiveness of RAG, I would like to know the answer to the question — \n\n> How can langsmith help with testing?\n\nFor those who are unaware, [Langsmith](https://www.langchain.com/langsmith) is Langchain’s product offering which provides tooling to help with developing, testing, deploying, and monitoring LLM applications.\n\nSince unpaid versions of LLMs (as of 4/24) still have the limitation of not being connected to the internet and are trained on data from before 2021, Langsmith is not a concept known to LLMs. The usage of RAG here would be to see if providing context about Langsmith helps the LLM provide a better version of the answer to the question above. \n\n### 1. Without RAG\n```py\nfrom langchain_community.llms import Ollama\nfrom langchain_core.prompts import ChatPromptTemplate\nfrom langchain_core.output_parsers import StrOutputParser\n\n# Simple chain invocation\n## LLM + Prompt\nllm = Ollama(model=\"mistral\")\noutput = StrOutputParser()\nprompt = ChatPromptTemplate.from_messages(\n    [\n        (\n            \"system\",\n            \"You are a skilled technical writer.\",\n        ),\n        (\"human\", \"{user_input}\"),\n    ]\n)\nchain = prompt | llm | output\n\n## Winner winner chicken dinner\nresponse = chain.invoke({\"user_input\": \"how can langsmith help with testing?\"})\nprint(\":::ROUND 1:::\")\nprint(response)\n```\n\n#### Output \n```\n# :::ROUND 1::: SIMPLE RETRIEVAL\n\nLangsmith, being a text-based AI model, doesn't directly interact with software or perform tests in the traditional sense. However, it can assist with various aspects of testing through its strong language processing abilities. Here are some ways Langsmith can contribute to testing:\n\n1. Writing test cases and test plans: Langsmith can help write clear, concise, and comprehensive test cases and test plans based on user stories or functional specifications. It can also suggest possible edge cases and boundary conditions for testing.\n\n2. Generating test data: Langsmith can create realistic test data for different types of applications. This can be especially useful for large datasets or complex scenarios where generating data manually would be time-consuming and error-prone.\n\n3. Creating test scripts: Langsmith can write test scripts in popular automation frameworks such as Selenium, TestNG, JMeter, etc., based on the test cases and expected outcomes.\n\n4. Providing test reports: Langsmith can help draft clear and concise test reports that summarize the results of different testing activities. It can also generate statistics and metrics from test data to help identify trends and patterns in software performance.\n\n5. Supporting bug tracking systems: Langsmith can write instructions for how to reproduce bugs and suggest potential fixes based on symptom analysis and past issue resolutions.\n\n6. Automating regression tests: While it doesn't directly execute automated tests, Langsmith can write test scripts or provide instructions on how to automate existing manual tests using tools like Selenium, TestComplete, etc.\n\n7. Improving testing documentation: Langsmith can help maintain and update testing documentation, ensuring that all relevant information is kept up-to-date and easily accessible to team members.\n```\n\n- ❌ As you can see there are no references to any testing benefits of Langsmith (“Langsmith, being a text-based AI model, doesn’t directly interact with software or perform tests in the traditional sense.”). \n- All the verbiage is super vague, and the LLM is hallucinating to come up with insipid cases in an effort to try to answer the question. (“Langsmith can write test scripts in popular automation frameworks such as Selenium, TestNG, JMeter, etc., based on the test cases and expected outcomes”).\n\n### 2. With RAG\n\nThe extra context is coming from a webpage that we will be loading into our vector store.\n\n```py\nfrom langchain_community.llms import Ollama\nfrom langchain_community.document_loaders import WebBaseLoader\nfrom langchain_community.embeddings import OllamaEmbeddings\nfrom langchain_community.vectorstores import FAISS\nfrom langchain_core.prompts import ChatPromptTemplate\nfrom langchain_text_splitters import RecursiveCharacterTextSplitter\nfrom langchain.chains.combine_documents import create_stuff_documents_chain\nfrom langchain.chains import create_retrieval_chain\n\n# Invoke chain with RAG context\nllm = Ollama(model=\"mistral\")\n## Load page content\nloader = WebBaseLoader(\"https://docs.smith.langchain.com/user_guide\")\ndocs = loader.load()\n\n## Vector store things\nembeddings = OllamaEmbeddings(model=\"nomic-embed-text\")\ntext_splitter = RecursiveCharacterTextSplitter()\nsplit_documents = text_splitter.split_documents(docs)\nvector_store = FAISS.from_documents(split_documents, embeddings)\n\n## Prompt construction\nprompt = ChatPromptTemplate.from_template(\n    \"\"\"\n            Answer the following question only based on the given context\n                                                    \n            <context>\n            {context}\n            </context>\n                                                    \n            Question: {input}\n\"\"\"\n)\n\n## Retrieve context from vector store\ndocs_chain = create_stuff_documents_chain(llm, prompt)\nretriever = vector_store.as_retriever()\nretrieval_chain = create_retrieval_chain(retriever, docs_chain)\n\n## Winner winner chicken dinner\nresponse = retrieval_chain.invoke({\"input\": \"how can langsmith help with testing?\"})\nprint(\":::ROUND 2:::\")\nprint(response[\"answer\"])\n```\n\n#### Output\n\n```\n# :::ROUND 2::: RAG RETRIEVAL\n\nLangsmith is a platform that helps developers test and monitor their Large Language Model (LLM) applications in various stages of development, including prototyping, beta testing, and production. It provides several workflows to support effective testing:\n\n1. Tracing: Langsmith logs application traces, allowing users to debug issues by examining the data step-by-step. This can help identify unexpected end results, infinite agent loops, slower than expected execution, or higher token usage. Traces in Langsmith are rendered with clear visibility and debugging information at each step of an LLM sequence, making it easier to diagnose and root-cause issues.\n\n2. Initial Test Set: Langsmith supports creating datasets (collections of inputs and reference outputs) and running tests on LLM applications using these test cases. Users can easily upload, create on the fly, or export test cases from application traces. This allows developers to adopt a more test-driven approach and compare test results across different model configurations.\n\n3. Comparison View: Langsmith's comparison view enables users to track and diagnose regressions in test scores across multiple revisions of their applications. Changes in the prompt, retrieval strategy, or model choice can have significant implications on the responses produced by the application, so being able to compare results for different configurations side-by-side is essential.\n\n4. Monitoring and A/B Testing: Langsmith provides monitoring charts to track key metrics over time and drill down into specific data points to get trace tables for that time period. This is helpful for debugging production issues and A/B testing changes in prompt, model, or retrieval strategy.\n\n5. Production: Once the application hits production, Langsmith's high-level overview of application performance with respect to latency, cost, and feedback scores ensures it continues delivering desirable results at scale.\n```\n\n- ✅ As you can see, there are very specific references to the testing capabilities of Langsmith, which we were able to extract due to the supplemental knowledge provided using the PDF. \n- We were able to augment the capabilities of the standard LLM with the specific domain knowledge required to answer this question.\n\n## So what now?\n\nThis is just the tip of the iceberg with RAG. There are a world of optimizations and enhancements you can make to see full power of RAG applied in practice. Hopefully this is a good launchpad for you to go try out the bigger and better things yourself! \n\nTo get access to the complete code, you can go [here](https://github.com/arjunrao87/langchain-basics/blob/main/langchain/2-rag.py). Thanks for reading!\n\n---\n\n⭐ If you like this type of content, be sure to follow me or subscribe to https://a1engineering.substack.com/subscribe! ⭐",
    "_id": "rag-experiments.mdx",
    "_raw": {
      "flattenedPath": "rag-experiments"
    },
    "body": {
      "raw": "Dive with me into the details of how you can use RAG to produce interesting results to questions related to a specific domain without needing to fine tune your own model.\n\n## What is RAG?\n\nRAG or Retrieval Augmented Generation is a really complicated way of saying “Knowledge base + LLM”. It describes a system that adds extra data, in addition to what the user provided, before querying the LLM. Where did that additional data come from? It could be from a number of different sources like vector databases, search engines, other pre-trained LLMs etc. \n\nYou can read my article for some more context around RAG. \n\n## How does it work in practice?\n\n### 1. No RAG aka Base Case \n\nBefore we get to RAG, we need to discuss “Chains” — the raison d’être for Langchain’s existence. From Langchain [documentation](https://python.langchain.com/docs/modules/chains/), Chains refer to sequences of calls — whether to an LLM, a tool, or a data preprocessing step. You can see more details in the experiments section. \n\nA simple chain you can set up would look something like — \n\n```sh\nchain = prompt | llm | output\n```\n\n![Simple chain](/static/images/simple_chain.png)\n\nAs you can see, this is very straightforward. You are passing a prompt to an LLM of choice, and then using a parser to produce the output. You are using langchain’s concept of “chains” to help sequence these elements, much like you would use pipes in Unix to chain together several system commands like ls | grep file.txt. \n\n### 2. With RAG\n\nThe majority of use cases that use RAG today do so by using some form of vector databases to store the information that the LLM uses to enhance the answer to the prompt. You can read how vector stores (or vector databases) store information and why its a better alternative than something like a traditional SQL or NoSQL store [here](https://www.cloudflare.com/learning/ai/what-is-vector-database/)\n\nThere are several flavors of vector databases ranging from commercial paid products like Pinecone to open source alternatives like ChromaDB and FAISS. I typically use ChromaDB because its easy to use and has a lot of support in the community. \n\nAt a high level, this is how RAG works with vector stores — \n\n- Take the data you want to provide as contextual information for your prompt and store them as vector embeddings in your vector store of choice. \n\n- Preload this information so that its available to any prompt that needs to use it. \n\n- At the time of prompt processing, retrieve the relevant context from the vector store — this time by embedding your query and then running a vector search against your store.\n\n- Pass that along with your prompt to the LLM so that the LLM can provide an appropriate response. \n\n- 💲 Profit 💲\n\n![ragchain](/static/images/rag.png)\n\nIn practice, a RAG chain would look something like this — \n```py\ndocs_chain = create_stuff_documents_chain(llm, prompt)\nretriever = vector_store.as_retriever()\nretrieval_chain = create_retrieval_chain(retriever, docs_chain)\n```\n\nIf you were to simplify the details of all these langchain functions like `create_stuff_documents_chain` and `create_retrieval_chain` (you can read up on these in Langchain’s official documentation), really what it boils down to is something like — \n```py\ncontext_data = vector_store\nchain = context_data | llm | prompt\n```\n\nwhich at a high level isn’t all that different from the base case shown above. The main difference is the inclusion of the contextual data that is provided with your prompt. And that my friends, is RAG. \n\nHowever, like all modern software, things can’t be THAT simple. So there is a lot of syntactic sugar to make all of these things work which looks like — \n```py\ndocs_chain = create_stuff_documents_chain(llm, prompt)\nretriever = vector_store.as_retriever()\nretrieval_chain = create_retrieval_chain(retriever, docs_chain)\n```\n\n![ragchain](/static/images/rag_chain.png)\n\nAs you can see in the diagram above there are many things happening to build an actual RAG-based system. However, if you focus on the “Retrieval chain”, you will see that it is composed of 2 main components —\n\n- the simple chain on the bottom and \n- the construction of the vector data on the top \n\nBob’s your uncle.\n\n## Running Experiments\n\nTo demonstrate the effectiveness of RAG, I would like to know the answer to the question — \n\n> How can langsmith help with testing?\n\nFor those who are unaware, [Langsmith](https://www.langchain.com/langsmith) is Langchain’s product offering which provides tooling to help with developing, testing, deploying, and monitoring LLM applications.\n\nSince unpaid versions of LLMs (as of 4/24) still have the limitation of not being connected to the internet and are trained on data from before 2021, Langsmith is not a concept known to LLMs. The usage of RAG here would be to see if providing context about Langsmith helps the LLM provide a better version of the answer to the question above. \n\n### 1. Without RAG\n```py\nfrom langchain_community.llms import Ollama\nfrom langchain_core.prompts import ChatPromptTemplate\nfrom langchain_core.output_parsers import StrOutputParser\n\n# Simple chain invocation\n## LLM + Prompt\nllm = Ollama(model=\"mistral\")\noutput = StrOutputParser()\nprompt = ChatPromptTemplate.from_messages(\n    [\n        (\n            \"system\",\n            \"You are a skilled technical writer.\",\n        ),\n        (\"human\", \"{user_input}\"),\n    ]\n)\nchain = prompt | llm | output\n\n## Winner winner chicken dinner\nresponse = chain.invoke({\"user_input\": \"how can langsmith help with testing?\"})\nprint(\":::ROUND 1:::\")\nprint(response)\n```\n\n#### Output \n```\n# :::ROUND 1::: SIMPLE RETRIEVAL\n\nLangsmith, being a text-based AI model, doesn't directly interact with software or perform tests in the traditional sense. However, it can assist with various aspects of testing through its strong language processing abilities. Here are some ways Langsmith can contribute to testing:\n\n1. Writing test cases and test plans: Langsmith can help write clear, concise, and comprehensive test cases and test plans based on user stories or functional specifications. It can also suggest possible edge cases and boundary conditions for testing.\n\n2. Generating test data: Langsmith can create realistic test data for different types of applications. This can be especially useful for large datasets or complex scenarios where generating data manually would be time-consuming and error-prone.\n\n3. Creating test scripts: Langsmith can write test scripts in popular automation frameworks such as Selenium, TestNG, JMeter, etc., based on the test cases and expected outcomes.\n\n4. Providing test reports: Langsmith can help draft clear and concise test reports that summarize the results of different testing activities. It can also generate statistics and metrics from test data to help identify trends and patterns in software performance.\n\n5. Supporting bug tracking systems: Langsmith can write instructions for how to reproduce bugs and suggest potential fixes based on symptom analysis and past issue resolutions.\n\n6. Automating regression tests: While it doesn't directly execute automated tests, Langsmith can write test scripts or provide instructions on how to automate existing manual tests using tools like Selenium, TestComplete, etc.\n\n7. Improving testing documentation: Langsmith can help maintain and update testing documentation, ensuring that all relevant information is kept up-to-date and easily accessible to team members.\n```\n\n- ❌ As you can see there are no references to any testing benefits of Langsmith (“Langsmith, being a text-based AI model, doesn’t directly interact with software or perform tests in the traditional sense.”). \n- All the verbiage is super vague, and the LLM is hallucinating to come up with insipid cases in an effort to try to answer the question. (“Langsmith can write test scripts in popular automation frameworks such as Selenium, TestNG, JMeter, etc., based on the test cases and expected outcomes”).\n\n### 2. With RAG\n\nThe extra context is coming from a webpage that we will be loading into our vector store.\n\n```py\nfrom langchain_community.llms import Ollama\nfrom langchain_community.document_loaders import WebBaseLoader\nfrom langchain_community.embeddings import OllamaEmbeddings\nfrom langchain_community.vectorstores import FAISS\nfrom langchain_core.prompts import ChatPromptTemplate\nfrom langchain_text_splitters import RecursiveCharacterTextSplitter\nfrom langchain.chains.combine_documents import create_stuff_documents_chain\nfrom langchain.chains import create_retrieval_chain\n\n# Invoke chain with RAG context\nllm = Ollama(model=\"mistral\")\n## Load page content\nloader = WebBaseLoader(\"https://docs.smith.langchain.com/user_guide\")\ndocs = loader.load()\n\n## Vector store things\nembeddings = OllamaEmbeddings(model=\"nomic-embed-text\")\ntext_splitter = RecursiveCharacterTextSplitter()\nsplit_documents = text_splitter.split_documents(docs)\nvector_store = FAISS.from_documents(split_documents, embeddings)\n\n## Prompt construction\nprompt = ChatPromptTemplate.from_template(\n    \"\"\"\n            Answer the following question only based on the given context\n                                                    \n            <context>\n            {context}\n            </context>\n                                                    \n            Question: {input}\n\"\"\"\n)\n\n## Retrieve context from vector store\ndocs_chain = create_stuff_documents_chain(llm, prompt)\nretriever = vector_store.as_retriever()\nretrieval_chain = create_retrieval_chain(retriever, docs_chain)\n\n## Winner winner chicken dinner\nresponse = retrieval_chain.invoke({\"input\": \"how can langsmith help with testing?\"})\nprint(\":::ROUND 2:::\")\nprint(response[\"answer\"])\n```\n\n#### Output\n\n```\n# :::ROUND 2::: RAG RETRIEVAL\n\nLangsmith is a platform that helps developers test and monitor their Large Language Model (LLM) applications in various stages of development, including prototyping, beta testing, and production. It provides several workflows to support effective testing:\n\n1. Tracing: Langsmith logs application traces, allowing users to debug issues by examining the data step-by-step. This can help identify unexpected end results, infinite agent loops, slower than expected execution, or higher token usage. Traces in Langsmith are rendered with clear visibility and debugging information at each step of an LLM sequence, making it easier to diagnose and root-cause issues.\n\n2. Initial Test Set: Langsmith supports creating datasets (collections of inputs and reference outputs) and running tests on LLM applications using these test cases. Users can easily upload, create on the fly, or export test cases from application traces. This allows developers to adopt a more test-driven approach and compare test results across different model configurations.\n\n3. Comparison View: Langsmith's comparison view enables users to track and diagnose regressions in test scores across multiple revisions of their applications. Changes in the prompt, retrieval strategy, or model choice can have significant implications on the responses produced by the application, so being able to compare results for different configurations side-by-side is essential.\n\n4. Monitoring and A/B Testing: Langsmith provides monitoring charts to track key metrics over time and drill down into specific data points to get trace tables for that time period. This is helpful for debugging production issues and A/B testing changes in prompt, model, or retrieval strategy.\n\n5. Production: Once the application hits production, Langsmith's high-level overview of application performance with respect to latency, cost, and feedback scores ensures it continues delivering desirable results at scale.\n```\n\n- ✅ As you can see, there are very specific references to the testing capabilities of Langsmith, which we were able to extract due to the supplemental knowledge provided using the PDF. \n- We were able to augment the capabilities of the standard LLM with the specific domain knowledge required to answer this question.\n\n## So what now?\n\nThis is just the tip of the iceberg with RAG. There are a world of optimizations and enhancements you can make to see full power of RAG applied in practice. Hopefully this is a good launchpad for you to go try out the bigger and better things yourself! \n\nTo get access to the complete code, you can go [here](https://github.com/arjunrao87/langchain-basics/blob/main/langchain/2-rag.py). Thanks for reading!\n\n---\n\n⭐ If you like this type of content, be sure to follow me or subscribe to https://a1engineering.substack.com/subscribe! ⭐",
      "code": "Dive with me into the details of how you can use RAG to produce interesting results to questions related to a specific domain without needing to fine tune your own model.\n\n## What is RAG?\n\nRAG or Retrieval Augmented Generation is a really complicated way of saying “Knowledge base + LLM”. It describes a system that adds extra data, in addition to what the user provided, before querying the LLM. Where did that additional data come from? It could be from a number of different sources like vector databases, search engines, other pre-trained LLMs etc. \n\nYou can read my article for some more context around RAG. \n\n## How does it work in practice?\n\n### 1. No RAG aka Base Case \n\nBefore we get to RAG, we need to discuss “Chains” — the raison d’être for Langchain’s existence. From Langchain [documentation](https://python.langchain.com/docs/modules/chains/), Chains refer to sequences of calls — whether to an LLM, a tool, or a data preprocessing step. You can see more details in the experiments section. \n\nA simple chain you can set up would look something like — \n\n```sh\nchain = prompt | llm | output\n```\n\n![Simple chain](/static/images/simple_chain.png)\n\nAs you can see, this is very straightforward. You are passing a prompt to an LLM of choice, and then using a parser to produce the output. You are using langchain’s concept of “chains” to help sequence these elements, much like you would use pipes in Unix to chain together several system commands like ls | grep file.txt. \n\n### 2. With RAG\n\nThe majority of use cases that use RAG today do so by using some form of vector databases to store the information that the LLM uses to enhance the answer to the prompt. You can read how vector stores (or vector databases) store information and why its a better alternative than something like a traditional SQL or NoSQL store [here](https://www.cloudflare.com/learning/ai/what-is-vector-database/)\n\nThere are several flavors of vector databases ranging from commercial paid products like Pinecone to open source alternatives like ChromaDB and FAISS. I typically use ChromaDB because its easy to use and has a lot of support in the community. \n\nAt a high level, this is how RAG works with vector stores — \n\n- Take the data you want to provide as contextual information for your prompt and store them as vector embeddings in your vector store of choice. \n\n- Preload this information so that its available to any prompt that needs to use it. \n\n- At the time of prompt processing, retrieve the relevant context from the vector store — this time by embedding your query and then running a vector search against your store.\n\n- Pass that along with your prompt to the LLM so that the LLM can provide an appropriate response. \n\n- 💲 Profit 💲\n\n![ragchain](/static/images/rag.png)\n\nIn practice, a RAG chain would look something like this — \n```py\ndocs_chain = create_stuff_documents_chain(llm, prompt)\nretriever = vector_store.as_retriever()\nretrieval_chain = create_retrieval_chain(retriever, docs_chain)\n```\n\nIf you were to simplify the details of all these langchain functions like `create_stuff_documents_chain` and `create_retrieval_chain` (you can read up on these in Langchain’s official documentation), really what it boils down to is something like — \n```py\ncontext_data = vector_store\nchain = context_data | llm | prompt\n```\n\nwhich at a high level isn’t all that different from the base case shown above. The main difference is the inclusion of the contextual data that is provided with your prompt. And that my friends, is RAG. \n\nHowever, like all modern software, things can’t be THAT simple. So there is a lot of syntactic sugar to make all of these things work which looks like — \n```py\ndocs_chain = create_stuff_documents_chain(llm, prompt)\nretriever = vector_store.as_retriever()\nretrieval_chain = create_retrieval_chain(retriever, docs_chain)\n```\n\n![ragchain](/static/images/rag_chain.png)\n\nAs you can see in the diagram above there are many things happening to build an actual RAG-based system. However, if you focus on the “Retrieval chain”, you will see that it is composed of 2 main components —\n\n- the simple chain on the bottom and \n- the construction of the vector data on the top \n\nBob’s your uncle.\n\n## Running Experiments\n\nTo demonstrate the effectiveness of RAG, I would like to know the answer to the question — \n\n> How can langsmith help with testing?\n\nFor those who are unaware, [Langsmith](https://www.langchain.com/langsmith) is Langchain’s product offering which provides tooling to help with developing, testing, deploying, and monitoring LLM applications.\n\nSince unpaid versions of LLMs (as of 4/24) still have the limitation of not being connected to the internet and are trained on data from before 2021, Langsmith is not a concept known to LLMs. The usage of RAG here would be to see if providing context about Langsmith helps the LLM provide a better version of the answer to the question above. \n\n### 1. Without RAG\n```py\nfrom langchain_community.llms import Ollama\nfrom langchain_core.prompts import ChatPromptTemplate\nfrom langchain_core.output_parsers import StrOutputParser\n\n# Simple chain invocation\n## LLM + Prompt\nllm = Ollama(model=\"mistral\")\noutput = StrOutputParser()\nprompt = ChatPromptTemplate.from_messages(\n    [\n        (\n            \"system\",\n            \"You are a skilled technical writer.\",\n        ),\n        (\"human\", \"{user_input}\"),\n    ]\n)\nchain = prompt | llm | output\n\n## Winner winner chicken dinner\nresponse = chain.invoke({\"user_input\": \"how can langsmith help with testing?\"})\nprint(\":::ROUND 1:::\")\nprint(response)\n```\n\n#### Output \n```\n# :::ROUND 1::: SIMPLE RETRIEVAL\n\nLangsmith, being a text-based AI model, doesn't directly interact with software or perform tests in the traditional sense. However, it can assist with various aspects of testing through its strong language processing abilities. Here are some ways Langsmith can contribute to testing:\n\n1. Writing test cases and test plans: Langsmith can help write clear, concise, and comprehensive test cases and test plans based on user stories or functional specifications. It can also suggest possible edge cases and boundary conditions for testing.\n\n2. Generating test data: Langsmith can create realistic test data for different types of applications. This can be especially useful for large datasets or complex scenarios where generating data manually would be time-consuming and error-prone.\n\n3. Creating test scripts: Langsmith can write test scripts in popular automation frameworks such as Selenium, TestNG, JMeter, etc., based on the test cases and expected outcomes.\n\n4. Providing test reports: Langsmith can help draft clear and concise test reports that summarize the results of different testing activities. It can also generate statistics and metrics from test data to help identify trends and patterns in software performance.\n\n5. Supporting bug tracking systems: Langsmith can write instructions for how to reproduce bugs and suggest potential fixes based on symptom analysis and past issue resolutions.\n\n6. Automating regression tests: While it doesn't directly execute automated tests, Langsmith can write test scripts or provide instructions on how to automate existing manual tests using tools like Selenium, TestComplete, etc.\n\n7. Improving testing documentation: Langsmith can help maintain and update testing documentation, ensuring that all relevant information is kept up-to-date and easily accessible to team members.\n```\n\n- ❌ As you can see there are no references to any testing benefits of Langsmith (“Langsmith, being a text-based AI model, doesn’t directly interact with software or perform tests in the traditional sense.”). \n- All the verbiage is super vague, and the LLM is hallucinating to come up with insipid cases in an effort to try to answer the question. (“Langsmith can write test scripts in popular automation frameworks such as Selenium, TestNG, JMeter, etc., based on the test cases and expected outcomes”).\n\n### 2. With RAG\n\nThe extra context is coming from a webpage that we will be loading into our vector store.\n\n```py\nfrom langchain_community.llms import Ollama\nfrom langchain_community.document_loaders import WebBaseLoader\nfrom langchain_community.embeddings import OllamaEmbeddings\nfrom langchain_community.vectorstores import FAISS\nfrom langchain_core.prompts import ChatPromptTemplate\nfrom langchain_text_splitters import RecursiveCharacterTextSplitter\nfrom langchain.chains.combine_documents import create_stuff_documents_chain\nfrom langchain.chains import create_retrieval_chain\n\n# Invoke chain with RAG context\nllm = Ollama(model=\"mistral\")\n## Load page content\nloader = WebBaseLoader(\"https://docs.smith.langchain.com/user_guide\")\ndocs = loader.load()\n\n## Vector store things\nembeddings = OllamaEmbeddings(model=\"nomic-embed-text\")\ntext_splitter = RecursiveCharacterTextSplitter()\nsplit_documents = text_splitter.split_documents(docs)\nvector_store = FAISS.from_documents(split_documents, embeddings)\n\n## Prompt construction\nprompt = ChatPromptTemplate.from_template(\n    \"\"\"\n            Answer the following question only based on the given context\n                                                    \n            <context>\n            {context}\n            </context>\n                                                    \n            Question: {input}\n\"\"\"\n)\n\n## Retrieve context from vector store\ndocs_chain = create_stuff_documents_chain(llm, prompt)\nretriever = vector_store.as_retriever()\nretrieval_chain = create_retrieval_chain(retriever, docs_chain)\n\n## Winner winner chicken dinner\nresponse = retrieval_chain.invoke({\"input\": \"how can langsmith help with testing?\"})\nprint(\":::ROUND 2:::\")\nprint(response[\"answer\"])\n```\n\n#### Output\n\n```\n# :::ROUND 2::: RAG RETRIEVAL\n\nLangsmith is a platform that helps developers test and monitor their Large Language Model (LLM) applications in various stages of development, including prototyping, beta testing, and production. It provides several workflows to support effective testing:\n\n1. Tracing: Langsmith logs application traces, allowing users to debug issues by examining the data step-by-step. This can help identify unexpected end results, infinite agent loops, slower than expected execution, or higher token usage. Traces in Langsmith are rendered with clear visibility and debugging information at each step of an LLM sequence, making it easier to diagnose and root-cause issues.\n\n2. Initial Test Set: Langsmith supports creating datasets (collections of inputs and reference outputs) and running tests on LLM applications using these test cases. Users can easily upload, create on the fly, or export test cases from application traces. This allows developers to adopt a more test-driven approach and compare test results across different model configurations.\n\n3. Comparison View: Langsmith's comparison view enables users to track and diagnose regressions in test scores across multiple revisions of their applications. Changes in the prompt, retrieval strategy, or model choice can have significant implications on the responses produced by the application, so being able to compare results for different configurations side-by-side is essential.\n\n4. Monitoring and A/B Testing: Langsmith provides monitoring charts to track key metrics over time and drill down into specific data points to get trace tables for that time period. This is helpful for debugging production issues and A/B testing changes in prompt, model, or retrieval strategy.\n\n5. Production: Once the application hits production, Langsmith's high-level overview of application performance with respect to latency, cost, and feedback scores ensures it continues delivering desirable results at scale.\n```\n\n- ✅ As you can see, there are very specific references to the testing capabilities of Langsmith, which we were able to extract due to the supplemental knowledge provided using the PDF. \n- We were able to augment the capabilities of the standard LLM with the specific domain knowledge required to answer this question.\n\n## So what now?\n\nThis is just the tip of the iceberg with RAG. There are a world of optimizations and enhancements you can make to see full power of RAG applied in practice. Hopefully this is a good launchpad for you to go try out the bigger and better things yourself! \n\nTo get access to the complete code, you can go [here](https://github.com/arjunrao87/langchain-basics/blob/main/langchain/2-rag.py). Thanks for reading!\n\n---\n\n⭐ If you like this type of content, be sure to follow me or subscribe to https://a1engineering.substack.com/subscribe! ⭐"
    },
    "slug": "rag-experiments",
    "path": "posts/rag-experiments",
    "filePath": "rag-experiments.mdx",
    "toc": [],
    "readingTime": {
      "text": "9 min read",
      "minutes": 8.89,
      "time": 533400,
      "words": 1778
    },
    "structuredData": {
      "@context": "https://schema.org",
      "@type": "BlogPosting",
      "headline": "Simple wonders of RAG using Ollama, Langchain and ChromaDB",
      "datePublished": "2024-05-01T00:00:00.000Z",
      "dateModified": "2024-05-01T00:00:00.000Z",
      "description": "Harness the powers of RAG to turbocharge your LLM experience",
      "image": "/static/images/rag-cover.jpeg",
      "url": "https://arjunrao.co/posts/rag-experiments"
    }
  },
  {
    "title": "arjunrao.co-v4 - Yet another website rebuild",
    "date": "2021-01-10T00:00:00.000Z",
    "tags": [
      "technology"
    ],
    "lastmod": undefined,
    "draft": false,
    "summary": "Strategizing another website redesign",
    "images": [
      "/static/images/boromir.jpg"
    ],
    "authors": undefined,
    "layout": undefined,
    "bibliography": undefined,
    "canonicalUrl": undefined,
    "content": "Towards the end of December, I tried to push a change to my website (built with Gatsby) and realized that the recent Catalina upgrade on my Mac left one of the Gatsby plugins completely broken. This post is about the learning I got from the next iteration of my personal website, so I will begin by saying that I decided to not use a heavy Javascript framework to publish my personal content. 💥\n\nAfter this little epiphany, I figured why not go all the way down to the bones and try to resurrect the next version of arjunrao.co, using just HTML, CSS and maybe some JS (how original!). Ordinarily, this would be a non-story, but a few things made this more challenging than I initially foresaw -\n\n1. I haven't had the chance to write something in this vanilla stack for several years now, so I wanted to see what things I could learn/talk about with a new lens.\n2. I did not want to use any frameworks of any kind, for the construction of the site itself. The intent was to not rely on 3rd party plugins and update cycles to host a simple personal blog. I slipped on this a little bit, but more to come on this in a while.\n3. I wanted to continue writing my blog posts in raw markdown and have them available on my static site - especially so because I had markdown posts dating back 5 years, that I didn't want to have to rewrite in something else.\n\nHere are some of my learnings from this experience.\n\n# 📚 What \"stack\" should I use?\n\nTo reiterate, right out of the gate, I knew that despite there being some really cool frameworks & libraries like Vue, React, Nuxt, Next - I didn't want any of those advanced features (PWA, SSR etc) for my site. I didn't want to have to deal with `package.json` files and `yarn install` commands that resulted in intransigient errors like this -\n\n![](/static/images/error.png)\n\nHowever, I knew that I wanted to use markdown to write my posts, since its 2021 and I didn't want to have to go write formatted HTML 🤮.\n\nThat train of thought led me to the 2nd tier of \"frameworks\" - those geared towards markdown publishing, namely Jekyll, Hugo, Eleventy and the like. However, in terms of first principles, I didn't want anything where too much of the magic was happening behind the scenes, for similar concerns of backwards compatibility.\n\nAfter several hours of scouring the internet(shocking!), and nearly giving up, I stumbled upon [zero-md](https://zerodevx.github.io/zero-md/). Based on their definition -\n\n> A native markdown-to-html web component based on Custom Elements V1 specs to load and display an external MD file\n\nit turned out to be _exactly_ what I needed.\n\n# 🚧 Development with the vanilla stack\n\n## Local development\n\nBefore I could get started with zero-md, I wanted to figure out what I wanted my local dev environment to look like. Starting off with a simple folder which had an index.html, containing some baseline html tag content was the easy part. I could technically just open that file in a browser and call it a day. However, as I started adding other pages, like \"About me\", that started to get annoying.\n\nI came across [http-server](https://www.npmjs.com/package/http-server), which promised to be\n\n> powerful enough for production usage, but it's simple and hackable enough to be used for testing, local development, and learning.\n\nI knew my eventual deployment of the app would be as a static site, but if I could use it for local development, that might save me the hassle of bouncing through different chrome tabs for testing my buildout.\n\n![](/static/images/httpserver.png)\n\nI realized that I was slipping from my original draconian \"I DO NOT WANT TO USE FRAMEWORKS\", as I describe what amounts to a yarn installation. However, my mental gymnastics to justify this included not _needing_ http-server as part of development or deployment, but it merely being a convenience. If this were to break or not work in the future, I could easily toss it away without needing to rewrite the website.\n\nFWIW, this is what it looks like to bring up the http server locally, nice and easy -\n\n![](/static/images/local.png)\n\n## Hosting\n\nIn terms of deciding where to host the site, it was really a no-brainer for me. [Netlify](https://www.netlify.com/) has made the DevEx of shipping apps (static sites or otherwise), so ridiculously enjoyable, that I don't even bother checking out other deployment mechanisms anymore. They go an awful long way on the \"Free\" tier and hopefully that continues to be the case for a while.\n\nThere are an awful lot of nifty things I found and debugged along the way, with respect to SEO hacks, handling redirects, or using [water.css](https://watercss.kognise.dev/) for some basic styling (and dark mode!🌚) but all of that I'd consider tangential to what I spent the bulk of my time on this project for - i.e. Enabling markdown posts to be published to my static site. So lets get after it.\n\n# 📝 Publishing markdown posts to a static site\n\nAs I mentioned before, I tried multiple options to give me the freedom to write my post as markdown and have it rendered as HTML after I deployed my site. Some categories of options that I looked at were -\n\n- Markdown -> HTML at build/deploy time : This to me was least preferable, since it would involve some work around importing NPM packages, and doing some webpack magic. Some options in this category were libraries like [remark](https://github.com/remarkjs/remark).\n- Markdown -> HTML at render time : This would be pretty ideal, since I wouldn't need to do a whole lot of pre-processing and could just have the conversion occur automagically. This is where zero-md came in.\n\nTo give you a sense of how I used zero-md though, might need a little bit of background. This is how my markdown posts are structured -\n\n![](/static/images/postsfolder.png)\n\nThe idea I started off with was to have a \"Posts\" page, where I could show a list of all these posts that I have written, and have that be dynamically generated from the folder structure above. Alas, that is not possible using client-side Javascript, atleast not to the extent that I found possible. So I abandoned that endeavor, and decided that instead of [shaving the yak](https://seths.blog/2005/03/dont_shave_that/), I would just _manually_ list out all the posts I have in a posts.html and figure out how to render the markdown as HTML, in a redirect to that post-specific page (sigh, yes I feel your pain too - but in the words of my mother-in-law, you need to know which battles to pick...).\n\nOnce I settled on that approach, I went ahead to create post.html which would be the representation and rendering of a single `Post` object. This would mean that this is where zero-md would shine most brightly. This is how I imported zero-md in that file\n\n```html\n<script\n  type=\"module\"\n  src=\"https://cdn.jsdelivr.net/gh/zerodevx/zero-md@2/dist/zero-md.min.js\"\n></script>\n<script>\n  window.ZeroMdConfig = { cssUrls: ['css/style.css'] }\n</script>\n```\n\n[zero-md documentation](https://zerodevx.github.io/zero-md/basic-usage/) is very clear and straightforward, but just for clarity the 2nd script import isn't strictly needed, its just syntatic sugar to ensure styles are applied globally.\n\nThe 2 challenges of incorporating zero-md with my approach were\n\n1. Dynamically passing which post to render on the redirect to post.html\n2. Handling Frontmatter that I have used quite liberally in all of my markdown posts\n\nThe solution to the first one, while not elegant, is not as interesting to talk through. Understanding how to get into the guts of zero-md to figure out the answer to the 2nd question, however, was a heck of a lot more interesting.\n\n# Frontmatter 💔 zero-md, atleast to begin with\n\nFrontmatter, as defined in the [context of YAML](https://assemble.io/docs/YAML-front-matter.html),\n\n> YFM is an optional section of valid YAML that is placed at the top of a page and is used for maintaining metadata for the page and its contents.\n\nFrontmatter wasn't strictly necessary for my posts, but at this point it has become quasi-markdown standard for defining key metadata fields to qualify the .md document and I didn't want to reinvent the wheel. Sample YFM for me looked something like\n\n```yml\n---\ndate: '2019-04-09'\nyear: '2019'\ntitle: 'Observations and opinions on navigating work and life'\ncategory: 'Philosophy'\n---\n```\n\nHowever, zero-md definitely didn't know what to do with this and I was subject to a resounding SPLAT and this is how it looked without doing anything, which looks objectively weird -\n\n![](/static/images/frontmatter.png)\n\nBasically, what this meant was that sometime _after_ zero-md rendered markdown file but _before_ it got displayed, I needed to intercept the DOM and do some data munging. Luckily, zero-md provides some lifecycle-type hooks to be able to do just that. Documentation for that is available [here](https://zerodevx.github.io/zero-md/attributes-and-helpers/).\n\n![](/static/images/events.png)\n\nIt was clear to me that I had to latch onto the `zero-md-rendered` event and use that to manipulate the frontmatter content in the DOM. However, I was not able to do that very easily and looking at the DOM elements it might become a bit more clear\n\n![](/static/images/dom-shadowroot.png)\n\nTypically I would have expected the `<zero-md>` tag to have the `markdown-styles` and `markdown-body` tags directly under it, which would make trying to access those nodes super trivial. My initial pass at this was to use the `querySelector` API and basically do something like `document.querySelector('markdown-body')` to give me access to the child nodes. However, that just didn't work! I noticed in this case there is that sneaky `shadow-root` right inside of the `zero-md` tag. My first reaction was _WHAT THE HECK IS SHADOW-ROOT?_, and turns out that was the right question to ask, because understanding Shadow root, and consequently Shadow DOM, was key to solving my frontmatter issues.\n\n# 🎭 Shadow DOM and Shadow root\n\nZero-md is a web component, and paraphrasing [Mozilla's documentation](https://developer.mozilla.org/en-US/docs/Web/Web_Components) a bit, web components are reusable custom elements whose functionality is encapsulated away from the rest of your code which you can then utilize in your web apps. This concept of encapsulation is materialized through the usage of Shadow DOM, which is a set of JavaScript APIs for attaching an encapsulated \"shadow\" DOM tree to an element — which is rendered separately from the main document DOM — and controlling associated functionality. In this way, you can keep an element's features private, so they can be scripted and styled without the fear of collision with other parts of the document.\n\nWhen you see it through this lens, that makes perfect sense! The relation of the \"regular\" DOM and the Shadow DOM (in this case for the zero-md structure), is best described by the image below (courtesy [MDN](https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_shadow_DOM))\n\n![](/static/images/shadowdom.png)\n\nIn my case, the shadow root was the root node of the shadow tree created by zero-md to render my individual post. Now the DOM structure observed in the console makes a lot more sense. In order to manipulate the Frontmatter, I had to get hold of the appropriate node,\n\n![](/static/images/fmnodes.png)\n\nBasically you need to do the equivalent of\n\n```html\ndocument.querySelector('my-component').shadowRoot.querySelector('what-i-really-want-to-access')\n```\n\nto be able to get access to shadow root elements. Once I understood that, things seemed to flow much easier and I basically got access to the frontmatter like so -\n\n```js\napp.addEventListener('zero-md-rendered', ev => {\n        const md = app.shadowRoot.querySelector(\".markdown-body\");\n        const frontmatter = md[\"children\"][1];\n        ...\n```\n\nwhich then allowed me to render my markdown post much more cleanly -\n\n![](/static/images/post-fm.png)\n\nThere are plenty of things I can do better even in this very limited setup - the JS is janky, my URL paths are kind of awkward, having to handcode a summary posts page is pretty late 90's. Buuut, thats all for now.\n\n# 👋🏽 In closing\n\nOne of the trends I have noticed is that each iteration of my website has opted towards a \"simpler\" look. This to me is about as simple as you can get, but I want to see if future-me has more diabolical ideas. Until then...\n\nIf you have any thoughts on this post, hit me up on Twitter [@raoarjun](https://twitter.com/raoarjun)",
    "_id": "rebuild.mdx",
    "_raw": {
      "flattenedPath": "rebuild"
    },
    "body": {
      "raw": "Towards the end of December, I tried to push a change to my website (built with Gatsby) and realized that the recent Catalina upgrade on my Mac left one of the Gatsby plugins completely broken. This post is about the learning I got from the next iteration of my personal website, so I will begin by saying that I decided to not use a heavy Javascript framework to publish my personal content. 💥\n\nAfter this little epiphany, I figured why not go all the way down to the bones and try to resurrect the next version of arjunrao.co, using just HTML, CSS and maybe some JS (how original!). Ordinarily, this would be a non-story, but a few things made this more challenging than I initially foresaw -\n\n1. I haven't had the chance to write something in this vanilla stack for several years now, so I wanted to see what things I could learn/talk about with a new lens.\n2. I did not want to use any frameworks of any kind, for the construction of the site itself. The intent was to not rely on 3rd party plugins and update cycles to host a simple personal blog. I slipped on this a little bit, but more to come on this in a while.\n3. I wanted to continue writing my blog posts in raw markdown and have them available on my static site - especially so because I had markdown posts dating back 5 years, that I didn't want to have to rewrite in something else.\n\nHere are some of my learnings from this experience.\n\n# 📚 What \"stack\" should I use?\n\nTo reiterate, right out of the gate, I knew that despite there being some really cool frameworks & libraries like Vue, React, Nuxt, Next - I didn't want any of those advanced features (PWA, SSR etc) for my site. I didn't want to have to deal with `package.json` files and `yarn install` commands that resulted in intransigient errors like this -\n\n![](/static/images/error.png)\n\nHowever, I knew that I wanted to use markdown to write my posts, since its 2021 and I didn't want to have to go write formatted HTML 🤮.\n\nThat train of thought led me to the 2nd tier of \"frameworks\" - those geared towards markdown publishing, namely Jekyll, Hugo, Eleventy and the like. However, in terms of first principles, I didn't want anything where too much of the magic was happening behind the scenes, for similar concerns of backwards compatibility.\n\nAfter several hours of scouring the internet(shocking!), and nearly giving up, I stumbled upon [zero-md](https://zerodevx.github.io/zero-md/). Based on their definition -\n\n> A native markdown-to-html web component based on Custom Elements V1 specs to load and display an external MD file\n\nit turned out to be _exactly_ what I needed.\n\n# 🚧 Development with the vanilla stack\n\n## Local development\n\nBefore I could get started with zero-md, I wanted to figure out what I wanted my local dev environment to look like. Starting off with a simple folder which had an index.html, containing some baseline html tag content was the easy part. I could technically just open that file in a browser and call it a day. However, as I started adding other pages, like \"About me\", that started to get annoying.\n\nI came across [http-server](https://www.npmjs.com/package/http-server), which promised to be\n\n> powerful enough for production usage, but it's simple and hackable enough to be used for testing, local development, and learning.\n\nI knew my eventual deployment of the app would be as a static site, but if I could use it for local development, that might save me the hassle of bouncing through different chrome tabs for testing my buildout.\n\n![](/static/images/httpserver.png)\n\nI realized that I was slipping from my original draconian \"I DO NOT WANT TO USE FRAMEWORKS\", as I describe what amounts to a yarn installation. However, my mental gymnastics to justify this included not _needing_ http-server as part of development or deployment, but it merely being a convenience. If this were to break or not work in the future, I could easily toss it away without needing to rewrite the website.\n\nFWIW, this is what it looks like to bring up the http server locally, nice and easy -\n\n![](/static/images/local.png)\n\n## Hosting\n\nIn terms of deciding where to host the site, it was really a no-brainer for me. [Netlify](https://www.netlify.com/) has made the DevEx of shipping apps (static sites or otherwise), so ridiculously enjoyable, that I don't even bother checking out other deployment mechanisms anymore. They go an awful long way on the \"Free\" tier and hopefully that continues to be the case for a while.\n\nThere are an awful lot of nifty things I found and debugged along the way, with respect to SEO hacks, handling redirects, or using [water.css](https://watercss.kognise.dev/) for some basic styling (and dark mode!🌚) but all of that I'd consider tangential to what I spent the bulk of my time on this project for - i.e. Enabling markdown posts to be published to my static site. So lets get after it.\n\n# 📝 Publishing markdown posts to a static site\n\nAs I mentioned before, I tried multiple options to give me the freedom to write my post as markdown and have it rendered as HTML after I deployed my site. Some categories of options that I looked at were -\n\n- Markdown -> HTML at build/deploy time : This to me was least preferable, since it would involve some work around importing NPM packages, and doing some webpack magic. Some options in this category were libraries like [remark](https://github.com/remarkjs/remark).\n- Markdown -> HTML at render time : This would be pretty ideal, since I wouldn't need to do a whole lot of pre-processing and could just have the conversion occur automagically. This is where zero-md came in.\n\nTo give you a sense of how I used zero-md though, might need a little bit of background. This is how my markdown posts are structured -\n\n![](/static/images/postsfolder.png)\n\nThe idea I started off with was to have a \"Posts\" page, where I could show a list of all these posts that I have written, and have that be dynamically generated from the folder structure above. Alas, that is not possible using client-side Javascript, atleast not to the extent that I found possible. So I abandoned that endeavor, and decided that instead of [shaving the yak](https://seths.blog/2005/03/dont_shave_that/), I would just _manually_ list out all the posts I have in a posts.html and figure out how to render the markdown as HTML, in a redirect to that post-specific page (sigh, yes I feel your pain too - but in the words of my mother-in-law, you need to know which battles to pick...).\n\nOnce I settled on that approach, I went ahead to create post.html which would be the representation and rendering of a single `Post` object. This would mean that this is where zero-md would shine most brightly. This is how I imported zero-md in that file\n\n```html\n<script\n  type=\"module\"\n  src=\"https://cdn.jsdelivr.net/gh/zerodevx/zero-md@2/dist/zero-md.min.js\"\n></script>\n<script>\n  window.ZeroMdConfig = { cssUrls: ['css/style.css'] }\n</script>\n```\n\n[zero-md documentation](https://zerodevx.github.io/zero-md/basic-usage/) is very clear and straightforward, but just for clarity the 2nd script import isn't strictly needed, its just syntatic sugar to ensure styles are applied globally.\n\nThe 2 challenges of incorporating zero-md with my approach were\n\n1. Dynamically passing which post to render on the redirect to post.html\n2. Handling Frontmatter that I have used quite liberally in all of my markdown posts\n\nThe solution to the first one, while not elegant, is not as interesting to talk through. Understanding how to get into the guts of zero-md to figure out the answer to the 2nd question, however, was a heck of a lot more interesting.\n\n# Frontmatter 💔 zero-md, atleast to begin with\n\nFrontmatter, as defined in the [context of YAML](https://assemble.io/docs/YAML-front-matter.html),\n\n> YFM is an optional section of valid YAML that is placed at the top of a page and is used for maintaining metadata for the page and its contents.\n\nFrontmatter wasn't strictly necessary for my posts, but at this point it has become quasi-markdown standard for defining key metadata fields to qualify the .md document and I didn't want to reinvent the wheel. Sample YFM for me looked something like\n\n```yml\n---\ndate: '2019-04-09'\nyear: '2019'\ntitle: 'Observations and opinions on navigating work and life'\ncategory: 'Philosophy'\n---\n```\n\nHowever, zero-md definitely didn't know what to do with this and I was subject to a resounding SPLAT and this is how it looked without doing anything, which looks objectively weird -\n\n![](/static/images/frontmatter.png)\n\nBasically, what this meant was that sometime _after_ zero-md rendered markdown file but _before_ it got displayed, I needed to intercept the DOM and do some data munging. Luckily, zero-md provides some lifecycle-type hooks to be able to do just that. Documentation for that is available [here](https://zerodevx.github.io/zero-md/attributes-and-helpers/).\n\n![](/static/images/events.png)\n\nIt was clear to me that I had to latch onto the `zero-md-rendered` event and use that to manipulate the frontmatter content in the DOM. However, I was not able to do that very easily and looking at the DOM elements it might become a bit more clear\n\n![](/static/images/dom-shadowroot.png)\n\nTypically I would have expected the `<zero-md>` tag to have the `markdown-styles` and `markdown-body` tags directly under it, which would make trying to access those nodes super trivial. My initial pass at this was to use the `querySelector` API and basically do something like `document.querySelector('markdown-body')` to give me access to the child nodes. However, that just didn't work! I noticed in this case there is that sneaky `shadow-root` right inside of the `zero-md` tag. My first reaction was _WHAT THE HECK IS SHADOW-ROOT?_, and turns out that was the right question to ask, because understanding Shadow root, and consequently Shadow DOM, was key to solving my frontmatter issues.\n\n# 🎭 Shadow DOM and Shadow root\n\nZero-md is a web component, and paraphrasing [Mozilla's documentation](https://developer.mozilla.org/en-US/docs/Web/Web_Components) a bit, web components are reusable custom elements whose functionality is encapsulated away from the rest of your code which you can then utilize in your web apps. This concept of encapsulation is materialized through the usage of Shadow DOM, which is a set of JavaScript APIs for attaching an encapsulated \"shadow\" DOM tree to an element — which is rendered separately from the main document DOM — and controlling associated functionality. In this way, you can keep an element's features private, so they can be scripted and styled without the fear of collision with other parts of the document.\n\nWhen you see it through this lens, that makes perfect sense! The relation of the \"regular\" DOM and the Shadow DOM (in this case for the zero-md structure), is best described by the image below (courtesy [MDN](https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_shadow_DOM))\n\n![](/static/images/shadowdom.png)\n\nIn my case, the shadow root was the root node of the shadow tree created by zero-md to render my individual post. Now the DOM structure observed in the console makes a lot more sense. In order to manipulate the Frontmatter, I had to get hold of the appropriate node,\n\n![](/static/images/fmnodes.png)\n\nBasically you need to do the equivalent of\n\n```html\ndocument.querySelector('my-component').shadowRoot.querySelector('what-i-really-want-to-access')\n```\n\nto be able to get access to shadow root elements. Once I understood that, things seemed to flow much easier and I basically got access to the frontmatter like so -\n\n```js\napp.addEventListener('zero-md-rendered', ev => {\n        const md = app.shadowRoot.querySelector(\".markdown-body\");\n        const frontmatter = md[\"children\"][1];\n        ...\n```\n\nwhich then allowed me to render my markdown post much more cleanly -\n\n![](/static/images/post-fm.png)\n\nThere are plenty of things I can do better even in this very limited setup - the JS is janky, my URL paths are kind of awkward, having to handcode a summary posts page is pretty late 90's. Buuut, thats all for now.\n\n# 👋🏽 In closing\n\nOne of the trends I have noticed is that each iteration of my website has opted towards a \"simpler\" look. This to me is about as simple as you can get, but I want to see if future-me has more diabolical ideas. Until then...\n\nIf you have any thoughts on this post, hit me up on Twitter [@raoarjun](https://twitter.com/raoarjun)",
      "code": "Towards the end of December, I tried to push a change to my website (built with Gatsby) and realized that the recent Catalina upgrade on my Mac left one of the Gatsby plugins completely broken. This post is about the learning I got from the next iteration of my personal website, so I will begin by saying that I decided to not use a heavy Javascript framework to publish my personal content. 💥\n\nAfter this little epiphany, I figured why not go all the way down to the bones and try to resurrect the next version of arjunrao.co, using just HTML, CSS and maybe some JS (how original!). Ordinarily, this would be a non-story, but a few things made this more challenging than I initially foresaw -\n\n1. I haven't had the chance to write something in this vanilla stack for several years now, so I wanted to see what things I could learn/talk about with a new lens.\n2. I did not want to use any frameworks of any kind, for the construction of the site itself. The intent was to not rely on 3rd party plugins and update cycles to host a simple personal blog. I slipped on this a little bit, but more to come on this in a while.\n3. I wanted to continue writing my blog posts in raw markdown and have them available on my static site - especially so because I had markdown posts dating back 5 years, that I didn't want to have to rewrite in something else.\n\nHere are some of my learnings from this experience.\n\n# 📚 What \"stack\" should I use?\n\nTo reiterate, right out of the gate, I knew that despite there being some really cool frameworks & libraries like Vue, React, Nuxt, Next - I didn't want any of those advanced features (PWA, SSR etc) for my site. I didn't want to have to deal with `package.json` files and `yarn install` commands that resulted in intransigient errors like this -\n\n![](/static/images/error.png)\n\nHowever, I knew that I wanted to use markdown to write my posts, since its 2021 and I didn't want to have to go write formatted HTML 🤮.\n\nThat train of thought led me to the 2nd tier of \"frameworks\" - those geared towards markdown publishing, namely Jekyll, Hugo, Eleventy and the like. However, in terms of first principles, I didn't want anything where too much of the magic was happening behind the scenes, for similar concerns of backwards compatibility.\n\nAfter several hours of scouring the internet(shocking!), and nearly giving up, I stumbled upon [zero-md](https://zerodevx.github.io/zero-md/). Based on their definition -\n\n> A native markdown-to-html web component based on Custom Elements V1 specs to load and display an external MD file\n\nit turned out to be _exactly_ what I needed.\n\n# 🚧 Development with the vanilla stack\n\n## Local development\n\nBefore I could get started with zero-md, I wanted to figure out what I wanted my local dev environment to look like. Starting off with a simple folder which had an index.html, containing some baseline html tag content was the easy part. I could technically just open that file in a browser and call it a day. However, as I started adding other pages, like \"About me\", that started to get annoying.\n\nI came across [http-server](https://www.npmjs.com/package/http-server), which promised to be\n\n> powerful enough for production usage, but it's simple and hackable enough to be used for testing, local development, and learning.\n\nI knew my eventual deployment of the app would be as a static site, but if I could use it for local development, that might save me the hassle of bouncing through different chrome tabs for testing my buildout.\n\n![](/static/images/httpserver.png)\n\nI realized that I was slipping from my original draconian \"I DO NOT WANT TO USE FRAMEWORKS\", as I describe what amounts to a yarn installation. However, my mental gymnastics to justify this included not _needing_ http-server as part of development or deployment, but it merely being a convenience. If this were to break or not work in the future, I could easily toss it away without needing to rewrite the website.\n\nFWIW, this is what it looks like to bring up the http server locally, nice and easy -\n\n![](/static/images/local.png)\n\n## Hosting\n\nIn terms of deciding where to host the site, it was really a no-brainer for me. [Netlify](https://www.netlify.com/) has made the DevEx of shipping apps (static sites or otherwise), so ridiculously enjoyable, that I don't even bother checking out other deployment mechanisms anymore. They go an awful long way on the \"Free\" tier and hopefully that continues to be the case for a while.\n\nThere are an awful lot of nifty things I found and debugged along the way, with respect to SEO hacks, handling redirects, or using [water.css](https://watercss.kognise.dev/) for some basic styling (and dark mode!🌚) but all of that I'd consider tangential to what I spent the bulk of my time on this project for - i.e. Enabling markdown posts to be published to my static site. So lets get after it.\n\n# 📝 Publishing markdown posts to a static site\n\nAs I mentioned before, I tried multiple options to give me the freedom to write my post as markdown and have it rendered as HTML after I deployed my site. Some categories of options that I looked at were -\n\n- Markdown -> HTML at build/deploy time : This to me was least preferable, since it would involve some work around importing NPM packages, and doing some webpack magic. Some options in this category were libraries like [remark](https://github.com/remarkjs/remark).\n- Markdown -> HTML at render time : This would be pretty ideal, since I wouldn't need to do a whole lot of pre-processing and could just have the conversion occur automagically. This is where zero-md came in.\n\nTo give you a sense of how I used zero-md though, might need a little bit of background. This is how my markdown posts are structured -\n\n![](/static/images/postsfolder.png)\n\nThe idea I started off with was to have a \"Posts\" page, where I could show a list of all these posts that I have written, and have that be dynamically generated from the folder structure above. Alas, that is not possible using client-side Javascript, atleast not to the extent that I found possible. So I abandoned that endeavor, and decided that instead of [shaving the yak](https://seths.blog/2005/03/dont_shave_that/), I would just _manually_ list out all the posts I have in a posts.html and figure out how to render the markdown as HTML, in a redirect to that post-specific page (sigh, yes I feel your pain too - but in the words of my mother-in-law, you need to know which battles to pick...).\n\nOnce I settled on that approach, I went ahead to create post.html which would be the representation and rendering of a single `Post` object. This would mean that this is where zero-md would shine most brightly. This is how I imported zero-md in that file\n\n```html\n<script\n  type=\"module\"\n  src=\"https://cdn.jsdelivr.net/gh/zerodevx/zero-md@2/dist/zero-md.min.js\"\n></script>\n<script>\n  window.ZeroMdConfig = { cssUrls: ['css/style.css'] }\n</script>\n```\n\n[zero-md documentation](https://zerodevx.github.io/zero-md/basic-usage/) is very clear and straightforward, but just for clarity the 2nd script import isn't strictly needed, its just syntatic sugar to ensure styles are applied globally.\n\nThe 2 challenges of incorporating zero-md with my approach were\n\n1. Dynamically passing which post to render on the redirect to post.html\n2. Handling Frontmatter that I have used quite liberally in all of my markdown posts\n\nThe solution to the first one, while not elegant, is not as interesting to talk through. Understanding how to get into the guts of zero-md to figure out the answer to the 2nd question, however, was a heck of a lot more interesting.\n\n# Frontmatter 💔 zero-md, atleast to begin with\n\nFrontmatter, as defined in the [context of YAML](https://assemble.io/docs/YAML-front-matter.html),\n\n> YFM is an optional section of valid YAML that is placed at the top of a page and is used for maintaining metadata for the page and its contents.\n\nFrontmatter wasn't strictly necessary for my posts, but at this point it has become quasi-markdown standard for defining key metadata fields to qualify the .md document and I didn't want to reinvent the wheel. Sample YFM for me looked something like\n\n```yml\n---\ndate: '2019-04-09'\nyear: '2019'\ntitle: 'Observations and opinions on navigating work and life'\ncategory: 'Philosophy'\n---\n```\n\nHowever, zero-md definitely didn't know what to do with this and I was subject to a resounding SPLAT and this is how it looked without doing anything, which looks objectively weird -\n\n![](/static/images/frontmatter.png)\n\nBasically, what this meant was that sometime _after_ zero-md rendered markdown file but _before_ it got displayed, I needed to intercept the DOM and do some data munging. Luckily, zero-md provides some lifecycle-type hooks to be able to do just that. Documentation for that is available [here](https://zerodevx.github.io/zero-md/attributes-and-helpers/).\n\n![](/static/images/events.png)\n\nIt was clear to me that I had to latch onto the `zero-md-rendered` event and use that to manipulate the frontmatter content in the DOM. However, I was not able to do that very easily and looking at the DOM elements it might become a bit more clear\n\n![](/static/images/dom-shadowroot.png)\n\nTypically I would have expected the `<zero-md>` tag to have the `markdown-styles` and `markdown-body` tags directly under it, which would make trying to access those nodes super trivial. My initial pass at this was to use the `querySelector` API and basically do something like `document.querySelector('markdown-body')` to give me access to the child nodes. However, that just didn't work! I noticed in this case there is that sneaky `shadow-root` right inside of the `zero-md` tag. My first reaction was _WHAT THE HECK IS SHADOW-ROOT?_, and turns out that was the right question to ask, because understanding Shadow root, and consequently Shadow DOM, was key to solving my frontmatter issues.\n\n# 🎭 Shadow DOM and Shadow root\n\nZero-md is a web component, and paraphrasing [Mozilla's documentation](https://developer.mozilla.org/en-US/docs/Web/Web_Components) a bit, web components are reusable custom elements whose functionality is encapsulated away from the rest of your code which you can then utilize in your web apps. This concept of encapsulation is materialized through the usage of Shadow DOM, which is a set of JavaScript APIs for attaching an encapsulated \"shadow\" DOM tree to an element — which is rendered separately from the main document DOM — and controlling associated functionality. In this way, you can keep an element's features private, so they can be scripted and styled without the fear of collision with other parts of the document.\n\nWhen you see it through this lens, that makes perfect sense! The relation of the \"regular\" DOM and the Shadow DOM (in this case for the zero-md structure), is best described by the image below (courtesy [MDN](https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_shadow_DOM))\n\n![](/static/images/shadowdom.png)\n\nIn my case, the shadow root was the root node of the shadow tree created by zero-md to render my individual post. Now the DOM structure observed in the console makes a lot more sense. In order to manipulate the Frontmatter, I had to get hold of the appropriate node,\n\n![](/static/images/fmnodes.png)\n\nBasically you need to do the equivalent of\n\n```html\ndocument.querySelector('my-component').shadowRoot.querySelector('what-i-really-want-to-access')\n```\n\nto be able to get access to shadow root elements. Once I understood that, things seemed to flow much easier and I basically got access to the frontmatter like so -\n\n```js\napp.addEventListener('zero-md-rendered', ev => {\n        const md = app.shadowRoot.querySelector(\".markdown-body\");\n        const frontmatter = md[\"children\"][1];\n        ...\n```\n\nwhich then allowed me to render my markdown post much more cleanly -\n\n![](/static/images/post-fm.png)\n\nThere are plenty of things I can do better even in this very limited setup - the JS is janky, my URL paths are kind of awkward, having to handcode a summary posts page is pretty late 90's. Buuut, thats all for now.\n\n# 👋🏽 In closing\n\nOne of the trends I have noticed is that each iteration of my website has opted towards a \"simpler\" look. This to me is about as simple as you can get, but I want to see if future-me has more diabolical ideas. Until then...\n\nIf you have any thoughts on this post, hit me up on Twitter [@raoarjun](https://twitter.com/raoarjun)"
    },
    "slug": "rebuild",
    "path": "posts/rebuild",
    "filePath": "rebuild.mdx",
    "toc": [],
    "readingTime": {
      "text": "11 min read",
      "minutes": 10.02,
      "time": 601200,
      "words": 2004
    },
    "structuredData": {
      "@context": "https://schema.org",
      "@type": "BlogPosting",
      "headline": "arjunrao.co-v4 - Yet another website rebuild",
      "datePublished": "2021-01-10T00:00:00.000Z",
      "dateModified": "2021-01-10T00:00:00.000Z",
      "description": "Strategizing another website redesign",
      "image": "/static/images/boromir.jpg",
      "url": "https://arjunrao.co/posts/rebuild"
    }
  },
  {
    "title": "Cultivating a Relationship Between Collocated and Remote Teams",
    "date": "2020-07-03T00:00:00.000Z",
    "tags": [
      "culture",
      "work",
      "remote"
    ],
    "lastmod": undefined,
    "draft": false,
    "summary": "Building a high performance remote team that works well with your engineering teams",
    "images": undefined,
    "authors": undefined,
    "layout": undefined,
    "bibliography": undefined,
    "canonicalUrl": undefined,
    "content": "_(This article was originally published on [PlatoHQ](https://www.platohq.com/resources/cultivating-a-relationship-between-collocated-and-remote-teams-1236189923))_\n\nArjun Rao, Director of Engineering at Place Exchange, highlights three ways that induce a genial, positive, and flourishing atmosphere between collocated teams and their remote, contracted, or outsourced counterparts.\n\n## Problem\n\nMy company in the US had a partnership with a business services team based in Pune, India. It wasn’t simply a remote site for us, though, it was actually a contract that we outsourced to do the work. We worked with them primarily for development purposes. They were actively developing our platform and due to the nature of the way we built software we needed to ensure that they weren’t a separate unit and that they felt like a part of the same company. As a result, I wanted to facilitate and maintain a lasting working relationship between the two international teams, one that would encourage trust and connectedness.\n\n## Actions taken\n\nI approached the situation from three different angles in hopes that the combination of them all would create a positive, convivial atmosphere.\n\n### Working agreements\n\na. I have always treated the team in India the same as I would treat my teams in the US. I believe the moment you start thinking of remote sites as unequal, especially if they’re working on the same platform as the collocated team, then you start getting into unhelpful decision triage. Instead, normalize the work across the board and make sure you empower all teams to make their own decisions.\n\nb. When working across time zones, especially those with 9+ hours difference, communication is key. Being remote while being asynchronous is very important. Timelines and information flow occur but usually with delay. So we had to be aware of this and know that the remote team wasn’t at our beck and call. Therefore, we maintained a varied version of time alignment to accommodate for the time difference.\n\nc. I wanted to provide decision autonomy to the team in India. We initially had a team of developers but we later transitioned and started having cross-functional teams for design function, site reliability, and other functions that were not necessarily labeled software development. This allowed the team to use the information they had to make informed decisions which in turn helped close the decision-making loop and the time to get an answer and take action.\n\nd. I began starting my day earlier than usual and began having one-on-ones with the team in Pune. This allowed me to get a feel for what they were experiencing and also gave me the chance to fully understand what we were doing correct and what we were doing wrong. There are some limitations with this process though. The people in India were under a different corporate structure than ours and so though I didn’t have control or power over their career growth, I was able to share inputs with their people manager who could then synthesize and convert it into actionable decisions.\n\n### Eliciting technical excellence\n\na. I needed to make sure that we were getting the same level of craftsmanship and technical quality that we would expect from our team in the US. This meant getting the remote team involved in the same things we were asking the US team to do. For example, once a week we had an architectural review session. This session was fairly open and anyone could contribute changes to the system or thoughts they had in the back of their mind. The team in India was asked to participate which gave them the opportunity to not only talk about what they were working on but to also be the faces of that work.\n\nb. I was also constantly encouraging all teams to commit across the code base - cross commit across the stack and empowering anyone to come in at any part of the code base. This is also a measure of how practices get transferred as well as how different perspectives can get baked into things instead of two different styles merging later on. This cross pollination helped move technical traits around organically.\n\n## Company culture\n\na. A lot of culture is about systems and processes, but more importantly about the interaction of people. To facilitate this we of course had video calls, but we also had people from the US go visit the team in India and have people from the team in Pune come to visit our office in the US. The level of conversations that occur once you’ve met someone in person is completely different from chatting with them on Slack. So while we promoted this initiative a couple of times per year, the goal was for everyone to eventually meet each other, face-to-face.\n\nb. We also provide company swag to those who came to visit the US. They were able to be representatives while walking through the office or the city. And even though they were not our employees, they were able to relate to our company and tangibly feel like they were a part of the team.\n\nc. Another thing that we did to promote company culture was to extend the invitation for hackathons and ask the remote team to participate along with us. The time zone difference could be a bit brutal, but some of those who stuck it out last hackathon were part of the team where their segment actually won!\n\n## Lessons learned\n\n- Treat remote teams the same way you would treat collocated teams. Give them the same business context that all employees get instead of throwing them a problem and expecting them to solve it, without any context. I believe this is the main reason why we had such a low turnover rate with the contracted team.\n- With remote teams you don’t have the oversight you would have if you were collocated so you need to have the freedom to not micromanage. Autonomy unlocks doors.\n- Folks on the team were very satisfied with the work they were doing, the confidence we had in their decision abilities, and the autonomy they earned.\n- After implementing these techniques we had a very diverse team with similar sets of practices which drew on from what both teams wanted. Therefore, we established a good mix of different thought processes that boiled into a similar engineering culture.\n- We are constantly in the phase of ramping up hiring so that we could meet our foreseeable goals but anyone in a growth startup knows that that isn’t easy. The team in India hedges our hiring risk because we know that we have a group of people that we could turn to in a pinch. Having them onboard was a very useful resource where we could bootstrap the team quickly, have them come online, and start working right away while also helping to smooth out our employee onboarding process.",
    "_id": "remote-teams.mdx",
    "_raw": {
      "flattenedPath": "remote-teams"
    },
    "body": {
      "raw": "_(This article was originally published on [PlatoHQ](https://www.platohq.com/resources/cultivating-a-relationship-between-collocated-and-remote-teams-1236189923))_\n\nArjun Rao, Director of Engineering at Place Exchange, highlights three ways that induce a genial, positive, and flourishing atmosphere between collocated teams and their remote, contracted, or outsourced counterparts.\n\n## Problem\n\nMy company in the US had a partnership with a business services team based in Pune, India. It wasn’t simply a remote site for us, though, it was actually a contract that we outsourced to do the work. We worked with them primarily for development purposes. They were actively developing our platform and due to the nature of the way we built software we needed to ensure that they weren’t a separate unit and that they felt like a part of the same company. As a result, I wanted to facilitate and maintain a lasting working relationship between the two international teams, one that would encourage trust and connectedness.\n\n## Actions taken\n\nI approached the situation from three different angles in hopes that the combination of them all would create a positive, convivial atmosphere.\n\n### Working agreements\n\na. I have always treated the team in India the same as I would treat my teams in the US. I believe the moment you start thinking of remote sites as unequal, especially if they’re working on the same platform as the collocated team, then you start getting into unhelpful decision triage. Instead, normalize the work across the board and make sure you empower all teams to make their own decisions.\n\nb. When working across time zones, especially those with 9+ hours difference, communication is key. Being remote while being asynchronous is very important. Timelines and information flow occur but usually with delay. So we had to be aware of this and know that the remote team wasn’t at our beck and call. Therefore, we maintained a varied version of time alignment to accommodate for the time difference.\n\nc. I wanted to provide decision autonomy to the team in India. We initially had a team of developers but we later transitioned and started having cross-functional teams for design function, site reliability, and other functions that were not necessarily labeled software development. This allowed the team to use the information they had to make informed decisions which in turn helped close the decision-making loop and the time to get an answer and take action.\n\nd. I began starting my day earlier than usual and began having one-on-ones with the team in Pune. This allowed me to get a feel for what they were experiencing and also gave me the chance to fully understand what we were doing correct and what we were doing wrong. There are some limitations with this process though. The people in India were under a different corporate structure than ours and so though I didn’t have control or power over their career growth, I was able to share inputs with their people manager who could then synthesize and convert it into actionable decisions.\n\n### Eliciting technical excellence\n\na. I needed to make sure that we were getting the same level of craftsmanship and technical quality that we would expect from our team in the US. This meant getting the remote team involved in the same things we were asking the US team to do. For example, once a week we had an architectural review session. This session was fairly open and anyone could contribute changes to the system or thoughts they had in the back of their mind. The team in India was asked to participate which gave them the opportunity to not only talk about what they were working on but to also be the faces of that work.\n\nb. I was also constantly encouraging all teams to commit across the code base - cross commit across the stack and empowering anyone to come in at any part of the code base. This is also a measure of how practices get transferred as well as how different perspectives can get baked into things instead of two different styles merging later on. This cross pollination helped move technical traits around organically.\n\n## Company culture\n\na. A lot of culture is about systems and processes, but more importantly about the interaction of people. To facilitate this we of course had video calls, but we also had people from the US go visit the team in India and have people from the team in Pune come to visit our office in the US. The level of conversations that occur once you’ve met someone in person is completely different from chatting with them on Slack. So while we promoted this initiative a couple of times per year, the goal was for everyone to eventually meet each other, face-to-face.\n\nb. We also provide company swag to those who came to visit the US. They were able to be representatives while walking through the office or the city. And even though they were not our employees, they were able to relate to our company and tangibly feel like they were a part of the team.\n\nc. Another thing that we did to promote company culture was to extend the invitation for hackathons and ask the remote team to participate along with us. The time zone difference could be a bit brutal, but some of those who stuck it out last hackathon were part of the team where their segment actually won!\n\n## Lessons learned\n\n- Treat remote teams the same way you would treat collocated teams. Give them the same business context that all employees get instead of throwing them a problem and expecting them to solve it, without any context. I believe this is the main reason why we had such a low turnover rate with the contracted team.\n- With remote teams you don’t have the oversight you would have if you were collocated so you need to have the freedom to not micromanage. Autonomy unlocks doors.\n- Folks on the team were very satisfied with the work they were doing, the confidence we had in their decision abilities, and the autonomy they earned.\n- After implementing these techniques we had a very diverse team with similar sets of practices which drew on from what both teams wanted. Therefore, we established a good mix of different thought processes that boiled into a similar engineering culture.\n- We are constantly in the phase of ramping up hiring so that we could meet our foreseeable goals but anyone in a growth startup knows that that isn’t easy. The team in India hedges our hiring risk because we know that we have a group of people that we could turn to in a pinch. Having them onboard was a very useful resource where we could bootstrap the team quickly, have them come online, and start working right away while also helping to smooth out our employee onboarding process.",
      "code": "_(This article was originally published on [PlatoHQ](https://www.platohq.com/resources/cultivating-a-relationship-between-collocated-and-remote-teams-1236189923))_\n\nArjun Rao, Director of Engineering at Place Exchange, highlights three ways that induce a genial, positive, and flourishing atmosphere between collocated teams and their remote, contracted, or outsourced counterparts.\n\n## Problem\n\nMy company in the US had a partnership with a business services team based in Pune, India. It wasn’t simply a remote site for us, though, it was actually a contract that we outsourced to do the work. We worked with them primarily for development purposes. They were actively developing our platform and due to the nature of the way we built software we needed to ensure that they weren’t a separate unit and that they felt like a part of the same company. As a result, I wanted to facilitate and maintain a lasting working relationship between the two international teams, one that would encourage trust and connectedness.\n\n## Actions taken\n\nI approached the situation from three different angles in hopes that the combination of them all would create a positive, convivial atmosphere.\n\n### Working agreements\n\na. I have always treated the team in India the same as I would treat my teams in the US. I believe the moment you start thinking of remote sites as unequal, especially if they’re working on the same platform as the collocated team, then you start getting into unhelpful decision triage. Instead, normalize the work across the board and make sure you empower all teams to make their own decisions.\n\nb. When working across time zones, especially those with 9+ hours difference, communication is key. Being remote while being asynchronous is very important. Timelines and information flow occur but usually with delay. So we had to be aware of this and know that the remote team wasn’t at our beck and call. Therefore, we maintained a varied version of time alignment to accommodate for the time difference.\n\nc. I wanted to provide decision autonomy to the team in India. We initially had a team of developers but we later transitioned and started having cross-functional teams for design function, site reliability, and other functions that were not necessarily labeled software development. This allowed the team to use the information they had to make informed decisions which in turn helped close the decision-making loop and the time to get an answer and take action.\n\nd. I began starting my day earlier than usual and began having one-on-ones with the team in Pune. This allowed me to get a feel for what they were experiencing and also gave me the chance to fully understand what we were doing correct and what we were doing wrong. There are some limitations with this process though. The people in India were under a different corporate structure than ours and so though I didn’t have control or power over their career growth, I was able to share inputs with their people manager who could then synthesize and convert it into actionable decisions.\n\n### Eliciting technical excellence\n\na. I needed to make sure that we were getting the same level of craftsmanship and technical quality that we would expect from our team in the US. This meant getting the remote team involved in the same things we were asking the US team to do. For example, once a week we had an architectural review session. This session was fairly open and anyone could contribute changes to the system or thoughts they had in the back of their mind. The team in India was asked to participate which gave them the opportunity to not only talk about what they were working on but to also be the faces of that work.\n\nb. I was also constantly encouraging all teams to commit across the code base - cross commit across the stack and empowering anyone to come in at any part of the code base. This is also a measure of how practices get transferred as well as how different perspectives can get baked into things instead of two different styles merging later on. This cross pollination helped move technical traits around organically.\n\n## Company culture\n\na. A lot of culture is about systems and processes, but more importantly about the interaction of people. To facilitate this we of course had video calls, but we also had people from the US go visit the team in India and have people from the team in Pune come to visit our office in the US. The level of conversations that occur once you’ve met someone in person is completely different from chatting with them on Slack. So while we promoted this initiative a couple of times per year, the goal was for everyone to eventually meet each other, face-to-face.\n\nb. We also provide company swag to those who came to visit the US. They were able to be representatives while walking through the office or the city. And even though they were not our employees, they were able to relate to our company and tangibly feel like they were a part of the team.\n\nc. Another thing that we did to promote company culture was to extend the invitation for hackathons and ask the remote team to participate along with us. The time zone difference could be a bit brutal, but some of those who stuck it out last hackathon were part of the team where their segment actually won!\n\n## Lessons learned\n\n- Treat remote teams the same way you would treat collocated teams. Give them the same business context that all employees get instead of throwing them a problem and expecting them to solve it, without any context. I believe this is the main reason why we had such a low turnover rate with the contracted team.\n- With remote teams you don’t have the oversight you would have if you were collocated so you need to have the freedom to not micromanage. Autonomy unlocks doors.\n- Folks on the team were very satisfied with the work they were doing, the confidence we had in their decision abilities, and the autonomy they earned.\n- After implementing these techniques we had a very diverse team with similar sets of practices which drew on from what both teams wanted. Therefore, we established a good mix of different thought processes that boiled into a similar engineering culture.\n- We are constantly in the phase of ramping up hiring so that we could meet our foreseeable goals but anyone in a growth startup knows that that isn’t easy. The team in India hedges our hiring risk because we know that we have a group of people that we could turn to in a pinch. Having them onboard was a very useful resource where we could bootstrap the team quickly, have them come online, and start working right away while also helping to smooth out our employee onboarding process."
    },
    "slug": "remote-teams",
    "path": "posts/remote-teams",
    "filePath": "remote-teams.mdx",
    "toc": [],
    "readingTime": {
      "text": "6 min read",
      "minutes": 5.7,
      "time": 342000,
      "words": 1140
    },
    "structuredData": {
      "@context": "https://schema.org",
      "@type": "BlogPosting",
      "headline": "Cultivating a Relationship Between Collocated and Remote Teams",
      "datePublished": "2020-07-03T00:00:00.000Z",
      "dateModified": "2020-07-03T00:00:00.000Z",
      "description": "Building a high performance remote team that works well with your engineering teams",
      "image": "/static/images/twitter-card.png",
      "url": "https://arjunrao.co/posts/remote-teams"
    }
  },
  {
    "title": "How to battle the sands of time",
    "date": "2018-07-05T00:00:00.000Z",
    "tags": [
      "philosophy",
      "book",
      "reflection"
    ],
    "lastmod": undefined,
    "draft": false,
    "summary": "Trying to keep track of events as time flies by",
    "images": undefined,
    "authors": undefined,
    "layout": undefined,
    "bibliography": undefined,
    "canonicalUrl": undefined,
    "content": "“Sometime you will never know the value of a moment until it becomes a memory” ~ Dr. Seuss\n\nLet me preface this article by saying that I don’t have a great memory. There are a few things I tend to remember in great, vivid detail; however, most things, in time, end up being hazy blurs.\n\nTo give you a sense of my perceptiveness, I will give you a few instances of perfect memories that I have. I have lived in America for almost 9 years now, and making constant trips back and forth between the homeland and the adopted land gave me peculiar senses of deja vu coupled with actual memories.\n\nThings I never forget are how the Chhatrapati Shivaji Mumbai International airport floors look when you exit the aircraft and walk towards immigration. That black, red, and green plaid carpeting on the floor, with a sea of people walking over it in their hurry to get out into the warm, sticky air of Mumbai paired with the love of family waiting for them outside is an unparalleled feeling.\n\nThe exact instant when I walk out of the doors of the airport and see my family waiting for me expectantly behind the silver railings and waving and calling my attention in glee.\n\nThe drive back home through familiar, yet unfamiliar, roads at which point my mom always asks, “Do you remember this road, son?” and me responding indignantly “Of course, Ma!” while not actually knowing.\n\nWalking into my home is, by far, among the top memories I recall, with the soft white light, always being left on in the living room, accompanied by a faint, musty smell left by mildly uncirculated air (windows are left closed due to mosquitoes in the neighborhood).\n\nTaking a shower, more specifically, the moment the first drops of water from the shower-head always transports me back in time through all the previous visits I have made back home. Not sure what it is, but that first shower is a weirdly transcendental experience — perhaps more so because I ascertain so much weight to that experience.\n\nOpening my bags to give the gifts that I cannot wait to give my family. Neither are these expensive things nor are they things they ever ask for. Instead it will be an assortment of the weirdest tchotchkes anyone else will see. Its a feeble attempt to get my family to experience tiny slivers of my life in the States.\n\nWaking up the first morning to the aromatic smells of South Indian filter coffee wafting through the air along with the slight sour yet indescribable smell of dosas(rice pancakes)and freshly made chutney.\n\nMe sitting at the kitchen counter and gobbling up to 10 of the softest and most delicious dosas you will find anywhere on this planet.\n\nPost afternoon nap tea-times with the sugary milky tea that you can only find in India and the tete-a-tete with my mom and sisters you can find only in my home.\n\nIncredible food at every single meal that my mom provides. I digress but the more I have been going back home the lesser I have been eating out because as time passes by I realize how incredibly lucky I am to have a mom like this. Not only is she the greatest mother in her own right but truly excels at her craft which is cooking, through which she extracts immense pleasure.\n\nThe final hurried seconds of goodbye at the airport where I try to hug and kiss my family, before I depart into the airport terminal machinery, but it just seems way too fleeting and way too insufficient.\n\nThis list of memories is very conspicuous as are a bunch of others. However, across the timescale of my life, most experiences that occurred in the past are just foggy remnants. At the time, they will all be amazing moments from which I derive true happiness, by being with family and friends. However, in retrospect, they will be instances that won’t come to my mind unless I am poked and prodded. I am unsure as to what to do with these memories. These are all tremendously important, but don’t seem to stand the ravages of time. I lament over the memories that I don’t even know I know but I have a theory about this which seems plausible.\n\nI attribute these nameless, faceless moments to the lack of “Anchor events”. Anchor events are what I term to be those moments which, due to whatever reason, are extremely consequential — in hindsight or otherwise. This could be due to, or a combination thereof, an outing or excursion that is different from the norm. It could also be an event — like a marriage, or some form of pain/anguish or some other experience that seems to transcend the mundane and rise over other experiences. In simpler terms, anchor events are moments that stand out from the slew of regular moments that we live. Do not mistake ‘regular’ to be boring or uninteresting. Instead think of regular as the tapestry of events, which when stitched together provide that underlying fabric of our life. Anchor events are more like the beautiful designs and patterns drawn on the fabric that draws your attention first to that piece of cloth.\n\nLet me pose a question to you. For each year in the last 10 years, think of 3 memories or events that you remember distinctly from each of those years. You should end with about 30 memories by the end of this exercise. When I first thought of this question, I must admit that I did terribly. I barely ended up with 15 memories and there were huge swaths of time, sometimes several years at a stretch, where I just couldn’t remember what I did. The purpose of this exercise for me was to find out how I perceive to utilize my time in the short term and how that plays out in the long term.\n\nFor me personally, the biggest anchor events tend to be revolving around travel. If I have been to a new or exotic location, I will typically be able to recollect a large window of time around that travel event. For example, if you take 2014 and were to ask me what I did, I would be able to say that I did a Europe trip with my best friends in the summer. The rest of the year? No idea whatsoever. I mean sure I could go back and look at some form of social media or photos on my computer but off the top of my head, nada. There are other examples of anchor events I can recollect like graduations, weddings, particular birthdays and the like, but not much else.\n\nI am willing to bet that recollection of just sacrosanct memories is some form of evolutionary mechanism to keep the brain’s memory highways free by not clogging it with unimportant information. However, we all know our brains are capable of a lot more that we use it for. As far as I know there is no seeming upper bound on how much I can remember from a particular year. If there are 7 distinct noteworthy events from a year, I will remember all of them. It seems unfortunate that we don’t have a backup disk for all our memories or a way to download them so we could peruse at our leisure. Maybe there will in the future, but at the moment it seems like I have a highlights reel of my memories over the halcyon years.\n\n_Thanks to InYong Chung for giving valuable grammar edits for this piece._",
    "_id": "sands.mdx",
    "_raw": {
      "flattenedPath": "sands"
    },
    "body": {
      "raw": "“Sometime you will never know the value of a moment until it becomes a memory” ~ Dr. Seuss\n\nLet me preface this article by saying that I don’t have a great memory. There are a few things I tend to remember in great, vivid detail; however, most things, in time, end up being hazy blurs.\n\nTo give you a sense of my perceptiveness, I will give you a few instances of perfect memories that I have. I have lived in America for almost 9 years now, and making constant trips back and forth between the homeland and the adopted land gave me peculiar senses of deja vu coupled with actual memories.\n\nThings I never forget are how the Chhatrapati Shivaji Mumbai International airport floors look when you exit the aircraft and walk towards immigration. That black, red, and green plaid carpeting on the floor, with a sea of people walking over it in their hurry to get out into the warm, sticky air of Mumbai paired with the love of family waiting for them outside is an unparalleled feeling.\n\nThe exact instant when I walk out of the doors of the airport and see my family waiting for me expectantly behind the silver railings and waving and calling my attention in glee.\n\nThe drive back home through familiar, yet unfamiliar, roads at which point my mom always asks, “Do you remember this road, son?” and me responding indignantly “Of course, Ma!” while not actually knowing.\n\nWalking into my home is, by far, among the top memories I recall, with the soft white light, always being left on in the living room, accompanied by a faint, musty smell left by mildly uncirculated air (windows are left closed due to mosquitoes in the neighborhood).\n\nTaking a shower, more specifically, the moment the first drops of water from the shower-head always transports me back in time through all the previous visits I have made back home. Not sure what it is, but that first shower is a weirdly transcendental experience — perhaps more so because I ascertain so much weight to that experience.\n\nOpening my bags to give the gifts that I cannot wait to give my family. Neither are these expensive things nor are they things they ever ask for. Instead it will be an assortment of the weirdest tchotchkes anyone else will see. Its a feeble attempt to get my family to experience tiny slivers of my life in the States.\n\nWaking up the first morning to the aromatic smells of South Indian filter coffee wafting through the air along with the slight sour yet indescribable smell of dosas(rice pancakes)and freshly made chutney.\n\nMe sitting at the kitchen counter and gobbling up to 10 of the softest and most delicious dosas you will find anywhere on this planet.\n\nPost afternoon nap tea-times with the sugary milky tea that you can only find in India and the tete-a-tete with my mom and sisters you can find only in my home.\n\nIncredible food at every single meal that my mom provides. I digress but the more I have been going back home the lesser I have been eating out because as time passes by I realize how incredibly lucky I am to have a mom like this. Not only is she the greatest mother in her own right but truly excels at her craft which is cooking, through which she extracts immense pleasure.\n\nThe final hurried seconds of goodbye at the airport where I try to hug and kiss my family, before I depart into the airport terminal machinery, but it just seems way too fleeting and way too insufficient.\n\nThis list of memories is very conspicuous as are a bunch of others. However, across the timescale of my life, most experiences that occurred in the past are just foggy remnants. At the time, they will all be amazing moments from which I derive true happiness, by being with family and friends. However, in retrospect, they will be instances that won’t come to my mind unless I am poked and prodded. I am unsure as to what to do with these memories. These are all tremendously important, but don’t seem to stand the ravages of time. I lament over the memories that I don’t even know I know but I have a theory about this which seems plausible.\n\nI attribute these nameless, faceless moments to the lack of “Anchor events”. Anchor events are what I term to be those moments which, due to whatever reason, are extremely consequential — in hindsight or otherwise. This could be due to, or a combination thereof, an outing or excursion that is different from the norm. It could also be an event — like a marriage, or some form of pain/anguish or some other experience that seems to transcend the mundane and rise over other experiences. In simpler terms, anchor events are moments that stand out from the slew of regular moments that we live. Do not mistake ‘regular’ to be boring or uninteresting. Instead think of regular as the tapestry of events, which when stitched together provide that underlying fabric of our life. Anchor events are more like the beautiful designs and patterns drawn on the fabric that draws your attention first to that piece of cloth.\n\nLet me pose a question to you. For each year in the last 10 years, think of 3 memories or events that you remember distinctly from each of those years. You should end with about 30 memories by the end of this exercise. When I first thought of this question, I must admit that I did terribly. I barely ended up with 15 memories and there were huge swaths of time, sometimes several years at a stretch, where I just couldn’t remember what I did. The purpose of this exercise for me was to find out how I perceive to utilize my time in the short term and how that plays out in the long term.\n\nFor me personally, the biggest anchor events tend to be revolving around travel. If I have been to a new or exotic location, I will typically be able to recollect a large window of time around that travel event. For example, if you take 2014 and were to ask me what I did, I would be able to say that I did a Europe trip with my best friends in the summer. The rest of the year? No idea whatsoever. I mean sure I could go back and look at some form of social media or photos on my computer but off the top of my head, nada. There are other examples of anchor events I can recollect like graduations, weddings, particular birthdays and the like, but not much else.\n\nI am willing to bet that recollection of just sacrosanct memories is some form of evolutionary mechanism to keep the brain’s memory highways free by not clogging it with unimportant information. However, we all know our brains are capable of a lot more that we use it for. As far as I know there is no seeming upper bound on how much I can remember from a particular year. If there are 7 distinct noteworthy events from a year, I will remember all of them. It seems unfortunate that we don’t have a backup disk for all our memories or a way to download them so we could peruse at our leisure. Maybe there will in the future, but at the moment it seems like I have a highlights reel of my memories over the halcyon years.\n\n_Thanks to InYong Chung for giving valuable grammar edits for this piece._",
      "code": "“Sometime you will never know the value of a moment until it becomes a memory” ~ Dr. Seuss\n\nLet me preface this article by saying that I don’t have a great memory. There are a few things I tend to remember in great, vivid detail; however, most things, in time, end up being hazy blurs.\n\nTo give you a sense of my perceptiveness, I will give you a few instances of perfect memories that I have. I have lived in America for almost 9 years now, and making constant trips back and forth between the homeland and the adopted land gave me peculiar senses of deja vu coupled with actual memories.\n\nThings I never forget are how the Chhatrapati Shivaji Mumbai International airport floors look when you exit the aircraft and walk towards immigration. That black, red, and green plaid carpeting on the floor, with a sea of people walking over it in their hurry to get out into the warm, sticky air of Mumbai paired with the love of family waiting for them outside is an unparalleled feeling.\n\nThe exact instant when I walk out of the doors of the airport and see my family waiting for me expectantly behind the silver railings and waving and calling my attention in glee.\n\nThe drive back home through familiar, yet unfamiliar, roads at which point my mom always asks, “Do you remember this road, son?” and me responding indignantly “Of course, Ma!” while not actually knowing.\n\nWalking into my home is, by far, among the top memories I recall, with the soft white light, always being left on in the living room, accompanied by a faint, musty smell left by mildly uncirculated air (windows are left closed due to mosquitoes in the neighborhood).\n\nTaking a shower, more specifically, the moment the first drops of water from the shower-head always transports me back in time through all the previous visits I have made back home. Not sure what it is, but that first shower is a weirdly transcendental experience — perhaps more so because I ascertain so much weight to that experience.\n\nOpening my bags to give the gifts that I cannot wait to give my family. Neither are these expensive things nor are they things they ever ask for. Instead it will be an assortment of the weirdest tchotchkes anyone else will see. Its a feeble attempt to get my family to experience tiny slivers of my life in the States.\n\nWaking up the first morning to the aromatic smells of South Indian filter coffee wafting through the air along with the slight sour yet indescribable smell of dosas(rice pancakes)and freshly made chutney.\n\nMe sitting at the kitchen counter and gobbling up to 10 of the softest and most delicious dosas you will find anywhere on this planet.\n\nPost afternoon nap tea-times with the sugary milky tea that you can only find in India and the tete-a-tete with my mom and sisters you can find only in my home.\n\nIncredible food at every single meal that my mom provides. I digress but the more I have been going back home the lesser I have been eating out because as time passes by I realize how incredibly lucky I am to have a mom like this. Not only is she the greatest mother in her own right but truly excels at her craft which is cooking, through which she extracts immense pleasure.\n\nThe final hurried seconds of goodbye at the airport where I try to hug and kiss my family, before I depart into the airport terminal machinery, but it just seems way too fleeting and way too insufficient.\n\nThis list of memories is very conspicuous as are a bunch of others. However, across the timescale of my life, most experiences that occurred in the past are just foggy remnants. At the time, they will all be amazing moments from which I derive true happiness, by being with family and friends. However, in retrospect, they will be instances that won’t come to my mind unless I am poked and prodded. I am unsure as to what to do with these memories. These are all tremendously important, but don’t seem to stand the ravages of time. I lament over the memories that I don’t even know I know but I have a theory about this which seems plausible.\n\nI attribute these nameless, faceless moments to the lack of “Anchor events”. Anchor events are what I term to be those moments which, due to whatever reason, are extremely consequential — in hindsight or otherwise. This could be due to, or a combination thereof, an outing or excursion that is different from the norm. It could also be an event — like a marriage, or some form of pain/anguish or some other experience that seems to transcend the mundane and rise over other experiences. In simpler terms, anchor events are moments that stand out from the slew of regular moments that we live. Do not mistake ‘regular’ to be boring or uninteresting. Instead think of regular as the tapestry of events, which when stitched together provide that underlying fabric of our life. Anchor events are more like the beautiful designs and patterns drawn on the fabric that draws your attention first to that piece of cloth.\n\nLet me pose a question to you. For each year in the last 10 years, think of 3 memories or events that you remember distinctly from each of those years. You should end with about 30 memories by the end of this exercise. When I first thought of this question, I must admit that I did terribly. I barely ended up with 15 memories and there were huge swaths of time, sometimes several years at a stretch, where I just couldn’t remember what I did. The purpose of this exercise for me was to find out how I perceive to utilize my time in the short term and how that plays out in the long term.\n\nFor me personally, the biggest anchor events tend to be revolving around travel. If I have been to a new or exotic location, I will typically be able to recollect a large window of time around that travel event. For example, if you take 2014 and were to ask me what I did, I would be able to say that I did a Europe trip with my best friends in the summer. The rest of the year? No idea whatsoever. I mean sure I could go back and look at some form of social media or photos on my computer but off the top of my head, nada. There are other examples of anchor events I can recollect like graduations, weddings, particular birthdays and the like, but not much else.\n\nI am willing to bet that recollection of just sacrosanct memories is some form of evolutionary mechanism to keep the brain’s memory highways free by not clogging it with unimportant information. However, we all know our brains are capable of a lot more that we use it for. As far as I know there is no seeming upper bound on how much I can remember from a particular year. If there are 7 distinct noteworthy events from a year, I will remember all of them. It seems unfortunate that we don’t have a backup disk for all our memories or a way to download them so we could peruse at our leisure. Maybe there will in the future, but at the moment it seems like I have a highlights reel of my memories over the halcyon years.\n\n_Thanks to InYong Chung for giving valuable grammar edits for this piece._"
    },
    "slug": "sands",
    "path": "posts/sands",
    "filePath": "sands.mdx",
    "toc": [],
    "readingTime": {
      "text": "7 min read",
      "minutes": 6.35,
      "time": 381000,
      "words": 1270
    },
    "structuredData": {
      "@context": "https://schema.org",
      "@type": "BlogPosting",
      "headline": "How to battle the sands of time",
      "datePublished": "2018-07-05T00:00:00.000Z",
      "dateModified": "2018-07-05T00:00:00.000Z",
      "description": "Trying to keep track of events as time flies by",
      "image": "/static/images/twitter-card.png",
      "url": "https://arjunrao.co/posts/sands"
    }
  },
  {
    "title": "To Sell or To Build, that is the question",
    "date": "2024-02-22T00:00:00.000Z",
    "tags": [
      "engineering",
      "revenue"
    ],
    "lastmod": undefined,
    "draft": false,
    "summary": "Selling before building",
    "images": undefined,
    "authors": undefined,
    "layout": undefined,
    "bibliography": undefined,
    "canonicalUrl": undefined,
    "content": "Engineering loves things that are neat. Neatly asked for , neatly used, neatly sequenced. However unfortunately the real world is not neat. It’s messy as heck. Often the things that our users say they want are not really want they want. If the right kinds of questions aren't asked, fact finding is not done early on or there are not effective feedback loops along the process, this could end up resulting in days or weeks (sometimes even months) of effort going into building solutions that will never be used.\n\nThe other end of this spectrum is observed when you have highly aggressive sales teams going ahead and selling things that don’t exist. If they are successful they are able to monetize an offering that doesn’t even exist. Sometimes they might sell things that are in the process of being built and other times they might be selling the mere idea of a product which hasn’t been brought into existence. If this is done repeatedly with no concern for organizational or product health, this could be a terrible long term approach.\n\n![](/static/images/analogy.jpg)\n\nHowever, that being said, as much as I like building things, I really like to see my work being used by other people. Put another way, **I would much rather prefer that we sell things that don’t exist than build things that don’t sell**. The former might lead to a few harrowing moments followed by the satisfaction of seeing the value of your work. The latter is failed elaborate expedition that brings joy to no one.",
    "_id": "sell-build.mdx",
    "_raw": {
      "flattenedPath": "sell-build"
    },
    "body": {
      "raw": "Engineering loves things that are neat. Neatly asked for , neatly used, neatly sequenced. However unfortunately the real world is not neat. It’s messy as heck. Often the things that our users say they want are not really want they want. If the right kinds of questions aren't asked, fact finding is not done early on or there are not effective feedback loops along the process, this could end up resulting in days or weeks (sometimes even months) of effort going into building solutions that will never be used.\n\nThe other end of this spectrum is observed when you have highly aggressive sales teams going ahead and selling things that don’t exist. If they are successful they are able to monetize an offering that doesn’t even exist. Sometimes they might sell things that are in the process of being built and other times they might be selling the mere idea of a product which hasn’t been brought into existence. If this is done repeatedly with no concern for organizational or product health, this could be a terrible long term approach.\n\n![](/static/images/analogy.jpg)\n\nHowever, that being said, as much as I like building things, I really like to see my work being used by other people. Put another way, **I would much rather prefer that we sell things that don’t exist than build things that don’t sell**. The former might lead to a few harrowing moments followed by the satisfaction of seeing the value of your work. The latter is failed elaborate expedition that brings joy to no one.",
      "code": "Engineering loves things that are neat. Neatly asked for , neatly used, neatly sequenced. However unfortunately the real world is not neat. It’s messy as heck. Often the things that our users say they want are not really want they want. If the right kinds of questions aren't asked, fact finding is not done early on or there are not effective feedback loops along the process, this could end up resulting in days or weeks (sometimes even months) of effort going into building solutions that will never be used.\n\nThe other end of this spectrum is observed when you have highly aggressive sales teams going ahead and selling things that don’t exist. If they are successful they are able to monetize an offering that doesn’t even exist. Sometimes they might sell things that are in the process of being built and other times they might be selling the mere idea of a product which hasn’t been brought into existence. If this is done repeatedly with no concern for organizational or product health, this could be a terrible long term approach.\n\n![](/static/images/analogy.jpg)\n\nHowever, that being said, as much as I like building things, I really like to see my work being used by other people. Put another way, **I would much rather prefer that we sell things that don’t exist than build things that don’t sell**. The former might lead to a few harrowing moments followed by the satisfaction of seeing the value of your work. The latter is failed elaborate expedition that brings joy to no one."
    },
    "slug": "sell-build",
    "path": "posts/sell-build",
    "filePath": "sell-build.mdx",
    "toc": [],
    "readingTime": {
      "text": "2 min read",
      "minutes": 1.285,
      "time": 77100,
      "words": 257
    },
    "structuredData": {
      "@context": "https://schema.org",
      "@type": "BlogPosting",
      "headline": "To Sell or To Build, that is the question",
      "datePublished": "2024-02-22T00:00:00.000Z",
      "dateModified": "2024-02-22T00:00:00.000Z",
      "description": "Selling before building",
      "image": "/static/images/twitter-card.png",
      "url": "https://arjunrao.co/posts/sell-build"
    }
  },
  {
    "title": "Why you need to sell yourself",
    "date": "2017-11-16T00:00:00.000Z",
    "tags": [
      "growth"
    ],
    "lastmod": undefined,
    "draft": false,
    "summary": "The importance of a personal brand and making sure you put yourself out there",
    "images": undefined,
    "authors": undefined,
    "layout": undefined,
    "bibliography": undefined,
    "canonicalUrl": undefined,
    "content": "“Your most important sale in life is to sell yourself to yourself.” — Maxwell Maltz\n\nThere is an unequivocal harsh truth in this world : nobody looks out for yourself other than you. You may say that you have great friends and family and that might most certainly be true, but — BUT — at the end of the day when the dust settles, there is no one else who hears the sound of the tree fall but you.\n\nSomething that I have always had a problem with is how some people have seemingly attained success “without doing any work”. There are times when I would — and I know YOU would — say something to the effect of “ How did THAT person achieve success while I am languishing or stagnating” or “How did THAT person achieve success while I am the ‘smarter’ one?”. Tell me with complete honesty, or better yet, admit to yourself that this thought hasn’t crossed your mind at least once before. I am trying to deconstruct that feeling with reality as an anchor. How did that person seemingly achieve success out of the blue? Why does it seem like that person galloped away while you are left in a trail of dust?\n\nThe true reason behind this meteoric success is that they were able to sell themselves better — Period. They were better at stating why they were better than the rest of the arcade they were competing with. The reality of them being better or inferior to the rest is inconsequential for the purpose of this argument. They were better salesmen/women and marketers, and there are no two ways about that. The fact that they were able to convince the audience that they were better is all that matters.\n\nThe audience could be anyone you can think of. If you work in a company with your other colleagues, the audience could be the higher ups or peers in your company. In the open source technology space , it’s how loud your voice is and how you can build a community around your idea. It is not always necessarily the merits of the actual idea you have worked on that matters but how you present that idea to the world. If you work in a startup, the audience could be the venture capital funds that you are wooing to get your funding from. If you are a board member of a company, it’s the shareholders that you want to placate or attract. The list goes on and on and on….\n\nThe biggest problem most people have when it comes to the notion of being successful is the act of selling yourself. Everyone fantasizes about the glory of success in a romanticized way, imagining how hard work, blood, sweat and tears lead to a hard-earned victory. However, most people shy away from actively selling themselves because they think of it as dirty or being untrue to the art/craft that they have dedicated their lives to. They think that it is tangential to the goal of making the world a better place. More often than not, it is also the self doubt that prevents them from selling themselves because they think that they are just not good enough or that selling themselves is a travesty. They think that if they sell themselves, they are overdoing it, and that there are much more qualified people out there doing what they are doing.\n\nThis is where I disagree. The fact that you doubt yourself is an indication of your superior thinking. Not only have you worked on your idea and achieved a modicum of success ( maybe it’s a LOT more, but I’m being conservative ), but you also have the emotional intelligence and awareness that puts you in a higher quartile. Perhaps you built a great product or a great company or possess a skill that you are really proud of, but unless you make people believe in your idea or creation, why should they be incentivized to have anything to do with it?! Display confidence, not hesitation. Confidence attracts attention. Confidence does not imply brashness. Projecting soft power can be incredibly useful and applied to the same effect as a bombastic display of showmanship.\n\nThe most successful people made it big because they knew what they were good at, and they knew how to make the world know about it. Think of Steve Jobs, Elon Musk, Indra Nooyi, Gordon Ramsay, Oprah Winfrey, and so forth. They were vocal about what they were doing and have perfected the craft of delivering the message of encompassing who they are. Is the playbook for someone else the road to your success? Probably not. Should you follow what everyone else does to the T to sell yourself? Certainly not.\n\nThe world is not a playground of zero-sum games with perfectly scripted mathematical equations; someone else’s success does not mean you have to take a backseat. You should not have to sit back and lurk in the shadows while someone is out there hustling. How can you sell a product, an idea, or a thought, if, as a first step, you are not able to state unequivocally what is special about yourself? There is a common saying: “If you don’t ask, you won’t get”. I would like to add to that: “ If you don’t sell, they won’t buy”\n\nDon’t shy away. Don’t hide in the corner. Don’t be afraid of being in the spotlight. Don’t be doubtful of your achievements. Right before military units are about to undertake an operation, they use a phrase akin to “Breach, breach, breach”. While you embark on your operation to sell yourself, your call to action should be “Hustle, hustle, hustle”. Put in the effort! SELL yourself. Don’t sell yourself short; REALLY sell yourself. Carpe diem — seize the day! Make sure the world knows what you did. Make sure YOU tell the world what you did, because the fact of the matter is, if you don’t, no one else will.",
    "_id": "sell.mdx",
    "_raw": {
      "flattenedPath": "sell"
    },
    "body": {
      "raw": "“Your most important sale in life is to sell yourself to yourself.” — Maxwell Maltz\n\nThere is an unequivocal harsh truth in this world : nobody looks out for yourself other than you. You may say that you have great friends and family and that might most certainly be true, but — BUT — at the end of the day when the dust settles, there is no one else who hears the sound of the tree fall but you.\n\nSomething that I have always had a problem with is how some people have seemingly attained success “without doing any work”. There are times when I would — and I know YOU would — say something to the effect of “ How did THAT person achieve success while I am languishing or stagnating” or “How did THAT person achieve success while I am the ‘smarter’ one?”. Tell me with complete honesty, or better yet, admit to yourself that this thought hasn’t crossed your mind at least once before. I am trying to deconstruct that feeling with reality as an anchor. How did that person seemingly achieve success out of the blue? Why does it seem like that person galloped away while you are left in a trail of dust?\n\nThe true reason behind this meteoric success is that they were able to sell themselves better — Period. They were better at stating why they were better than the rest of the arcade they were competing with. The reality of them being better or inferior to the rest is inconsequential for the purpose of this argument. They were better salesmen/women and marketers, and there are no two ways about that. The fact that they were able to convince the audience that they were better is all that matters.\n\nThe audience could be anyone you can think of. If you work in a company with your other colleagues, the audience could be the higher ups or peers in your company. In the open source technology space , it’s how loud your voice is and how you can build a community around your idea. It is not always necessarily the merits of the actual idea you have worked on that matters but how you present that idea to the world. If you work in a startup, the audience could be the venture capital funds that you are wooing to get your funding from. If you are a board member of a company, it’s the shareholders that you want to placate or attract. The list goes on and on and on….\n\nThe biggest problem most people have when it comes to the notion of being successful is the act of selling yourself. Everyone fantasizes about the glory of success in a romanticized way, imagining how hard work, blood, sweat and tears lead to a hard-earned victory. However, most people shy away from actively selling themselves because they think of it as dirty or being untrue to the art/craft that they have dedicated their lives to. They think that it is tangential to the goal of making the world a better place. More often than not, it is also the self doubt that prevents them from selling themselves because they think that they are just not good enough or that selling themselves is a travesty. They think that if they sell themselves, they are overdoing it, and that there are much more qualified people out there doing what they are doing.\n\nThis is where I disagree. The fact that you doubt yourself is an indication of your superior thinking. Not only have you worked on your idea and achieved a modicum of success ( maybe it’s a LOT more, but I’m being conservative ), but you also have the emotional intelligence and awareness that puts you in a higher quartile. Perhaps you built a great product or a great company or possess a skill that you are really proud of, but unless you make people believe in your idea or creation, why should they be incentivized to have anything to do with it?! Display confidence, not hesitation. Confidence attracts attention. Confidence does not imply brashness. Projecting soft power can be incredibly useful and applied to the same effect as a bombastic display of showmanship.\n\nThe most successful people made it big because they knew what they were good at, and they knew how to make the world know about it. Think of Steve Jobs, Elon Musk, Indra Nooyi, Gordon Ramsay, Oprah Winfrey, and so forth. They were vocal about what they were doing and have perfected the craft of delivering the message of encompassing who they are. Is the playbook for someone else the road to your success? Probably not. Should you follow what everyone else does to the T to sell yourself? Certainly not.\n\nThe world is not a playground of zero-sum games with perfectly scripted mathematical equations; someone else’s success does not mean you have to take a backseat. You should not have to sit back and lurk in the shadows while someone is out there hustling. How can you sell a product, an idea, or a thought, if, as a first step, you are not able to state unequivocally what is special about yourself? There is a common saying: “If you don’t ask, you won’t get”. I would like to add to that: “ If you don’t sell, they won’t buy”\n\nDon’t shy away. Don’t hide in the corner. Don’t be afraid of being in the spotlight. Don’t be doubtful of your achievements. Right before military units are about to undertake an operation, they use a phrase akin to “Breach, breach, breach”. While you embark on your operation to sell yourself, your call to action should be “Hustle, hustle, hustle”. Put in the effort! SELL yourself. Don’t sell yourself short; REALLY sell yourself. Carpe diem — seize the day! Make sure the world knows what you did. Make sure YOU tell the world what you did, because the fact of the matter is, if you don’t, no one else will.",
      "code": "“Your most important sale in life is to sell yourself to yourself.” — Maxwell Maltz\n\nThere is an unequivocal harsh truth in this world : nobody looks out for yourself other than you. You may say that you have great friends and family and that might most certainly be true, but — BUT — at the end of the day when the dust settles, there is no one else who hears the sound of the tree fall but you.\n\nSomething that I have always had a problem with is how some people have seemingly attained success “without doing any work”. There are times when I would — and I know YOU would — say something to the effect of “ How did THAT person achieve success while I am languishing or stagnating” or “How did THAT person achieve success while I am the ‘smarter’ one?”. Tell me with complete honesty, or better yet, admit to yourself that this thought hasn’t crossed your mind at least once before. I am trying to deconstruct that feeling with reality as an anchor. How did that person seemingly achieve success out of the blue? Why does it seem like that person galloped away while you are left in a trail of dust?\n\nThe true reason behind this meteoric success is that they were able to sell themselves better — Period. They were better at stating why they were better than the rest of the arcade they were competing with. The reality of them being better or inferior to the rest is inconsequential for the purpose of this argument. They were better salesmen/women and marketers, and there are no two ways about that. The fact that they were able to convince the audience that they were better is all that matters.\n\nThe audience could be anyone you can think of. If you work in a company with your other colleagues, the audience could be the higher ups or peers in your company. In the open source technology space , it’s how loud your voice is and how you can build a community around your idea. It is not always necessarily the merits of the actual idea you have worked on that matters but how you present that idea to the world. If you work in a startup, the audience could be the venture capital funds that you are wooing to get your funding from. If you are a board member of a company, it’s the shareholders that you want to placate or attract. The list goes on and on and on….\n\nThe biggest problem most people have when it comes to the notion of being successful is the act of selling yourself. Everyone fantasizes about the glory of success in a romanticized way, imagining how hard work, blood, sweat and tears lead to a hard-earned victory. However, most people shy away from actively selling themselves because they think of it as dirty or being untrue to the art/craft that they have dedicated their lives to. They think that it is tangential to the goal of making the world a better place. More often than not, it is also the self doubt that prevents them from selling themselves because they think that they are just not good enough or that selling themselves is a travesty. They think that if they sell themselves, they are overdoing it, and that there are much more qualified people out there doing what they are doing.\n\nThis is where I disagree. The fact that you doubt yourself is an indication of your superior thinking. Not only have you worked on your idea and achieved a modicum of success ( maybe it’s a LOT more, but I’m being conservative ), but you also have the emotional intelligence and awareness that puts you in a higher quartile. Perhaps you built a great product or a great company or possess a skill that you are really proud of, but unless you make people believe in your idea or creation, why should they be incentivized to have anything to do with it?! Display confidence, not hesitation. Confidence attracts attention. Confidence does not imply brashness. Projecting soft power can be incredibly useful and applied to the same effect as a bombastic display of showmanship.\n\nThe most successful people made it big because they knew what they were good at, and they knew how to make the world know about it. Think of Steve Jobs, Elon Musk, Indra Nooyi, Gordon Ramsay, Oprah Winfrey, and so forth. They were vocal about what they were doing and have perfected the craft of delivering the message of encompassing who they are. Is the playbook for someone else the road to your success? Probably not. Should you follow what everyone else does to the T to sell yourself? Certainly not.\n\nThe world is not a playground of zero-sum games with perfectly scripted mathematical equations; someone else’s success does not mean you have to take a backseat. You should not have to sit back and lurk in the shadows while someone is out there hustling. How can you sell a product, an idea, or a thought, if, as a first step, you are not able to state unequivocally what is special about yourself? There is a common saying: “If you don’t ask, you won’t get”. I would like to add to that: “ If you don’t sell, they won’t buy”\n\nDon’t shy away. Don’t hide in the corner. Don’t be afraid of being in the spotlight. Don’t be doubtful of your achievements. Right before military units are about to undertake an operation, they use a phrase akin to “Breach, breach, breach”. While you embark on your operation to sell yourself, your call to action should be “Hustle, hustle, hustle”. Put in the effort! SELL yourself. Don’t sell yourself short; REALLY sell yourself. Carpe diem — seize the day! Make sure the world knows what you did. Make sure YOU tell the world what you did, because the fact of the matter is, if you don’t, no one else will."
    },
    "slug": "sell",
    "path": "posts/sell",
    "filePath": "sell.mdx",
    "toc": [],
    "readingTime": {
      "text": "5 min read",
      "minutes": 4.955,
      "time": 297300,
      "words": 991
    },
    "structuredData": {
      "@context": "https://schema.org",
      "@type": "BlogPosting",
      "headline": "Why you need to sell yourself",
      "datePublished": "2017-11-16T00:00:00.000Z",
      "dateModified": "2017-11-16T00:00:00.000Z",
      "description": "The importance of a personal brand and making sure you put yourself out there",
      "image": "/static/images/twitter-card.png",
      "url": "https://arjunrao.co/posts/sell"
    }
  },
  {
    "title": "Why Action Beats Words: Embracing 'Show, Don't Tell'",
    "date": "2024-03-01T00:00:00.000Z",
    "tags": [
      "growth"
    ],
    "lastmod": undefined,
    "draft": false,
    "summary": "Have a bias for action",
    "images": [
      "/static/images/gmail-before.png"
    ],
    "authors": undefined,
    "layout": undefined,
    "bibliography": undefined,
    "canonicalUrl": undefined,
    "content": "Google made a classic mistake. For the last several weeks many of us have been seeing this message.\n\nAnytime you went anywhere near gmail, this popped up. The promise of a new and improved sign in experience beckoned us. They are setting us up for something great! Something AMAZING. Or as the French would say, incroyable. The age of absolutely game changing logins is coming right up!\n\nAnd then Google did the grand reveal. Unfortunately this is what it looked like -\n\n![](/static/images/gmail-after.png)\n\nHow underwhelming is that? From a user's perspective, it is actually worse. The username and password inputs are now on different pages which increases the time-to-login. Now we all know there's only so much you can do with login screens, so my hyperbole is a sharpening of contradictions. However, Google committed a cardinal sin. They hyped something up, plastered an upcoming change everywhere and then didn't stick the landing. Sure, there might be technical improvements under the hood maybe with other bells and whistles. But that is not the point. The point is that Google got people excited about a new feature and then viscerally disappointed. Unfortunately this seems to be Google's MO these days. _ cough _ Gemini _ cough _\n\nSo what's the big takeaway here? **Show, don't tell**. Too often people fall into the trap of announcing they are about to do something rather than just doing it. In a perverse way it might feel that telling someone they will do something is in of itself somehow doing that thing. The only exception I can see for something to be announced up front is if things require coordination from other parties.\n\nIn the case of Google, rather than announce they were making a change plastered everywhere in the login experience, they could have just started A/B or beta testing the change with a few people and gauged their feedback. Over time, they could have released the changes to everyone.\n\nLet's take a simple example from a day at work. I was struggling to understand how two different features in our platform were connected to each other and seemingly no one else did either. At this point I could go one of 2 ways -\n\n- Option 1: I could tell people that I was going to produce an architectural diagram or writeup of how these 2 features interplayed \n  OR\n- Option 2 :  I could write that writeup\n\nNow in option 1 - the only positive is that I have announced an intention to the world. The cons are\n\n- I have not produced any value yet.\n- If I don't follow through, I havent delivered on my words\n- AND I am no closer to understanding how these features work together\n\nIn option 2 - there are none of the cons mentioned above and I have produced value immediately - which by itself is the only thing that is important.\n\n**When in doubt, show, don't tell. Have a bias for action.**",
    "_id": "show-dont-tell.mdx",
    "_raw": {
      "flattenedPath": "show-dont-tell"
    },
    "body": {
      "raw": "Google made a classic mistake. For the last several weeks many of us have been seeing this message.\n\nAnytime you went anywhere near gmail, this popped up. The promise of a new and improved sign in experience beckoned us. They are setting us up for something great! Something AMAZING. Or as the French would say, incroyable. The age of absolutely game changing logins is coming right up!\n\nAnd then Google did the grand reveal. Unfortunately this is what it looked like -\n\n![](/static/images/gmail-after.png)\n\nHow underwhelming is that? From a user's perspective, it is actually worse. The username and password inputs are now on different pages which increases the time-to-login. Now we all know there's only so much you can do with login screens, so my hyperbole is a sharpening of contradictions. However, Google committed a cardinal sin. They hyped something up, plastered an upcoming change everywhere and then didn't stick the landing. Sure, there might be technical improvements under the hood maybe with other bells and whistles. But that is not the point. The point is that Google got people excited about a new feature and then viscerally disappointed. Unfortunately this seems to be Google's MO these days. _ cough _ Gemini _ cough _\n\nSo what's the big takeaway here? **Show, don't tell**. Too often people fall into the trap of announcing they are about to do something rather than just doing it. In a perverse way it might feel that telling someone they will do something is in of itself somehow doing that thing. The only exception I can see for something to be announced up front is if things require coordination from other parties.\n\nIn the case of Google, rather than announce they were making a change plastered everywhere in the login experience, they could have just started A/B or beta testing the change with a few people and gauged their feedback. Over time, they could have released the changes to everyone.\n\nLet's take a simple example from a day at work. I was struggling to understand how two different features in our platform were connected to each other and seemingly no one else did either. At this point I could go one of 2 ways -\n\n- Option 1: I could tell people that I was going to produce an architectural diagram or writeup of how these 2 features interplayed \n  OR\n- Option 2 :  I could write that writeup\n\nNow in option 1 - the only positive is that I have announced an intention to the world. The cons are\n\n- I have not produced any value yet.\n- If I don't follow through, I havent delivered on my words\n- AND I am no closer to understanding how these features work together\n\nIn option 2 - there are none of the cons mentioned above and I have produced value immediately - which by itself is the only thing that is important.\n\n**When in doubt, show, don't tell. Have a bias for action.**",
      "code": "Google made a classic mistake. For the last several weeks many of us have been seeing this message.\n\nAnytime you went anywhere near gmail, this popped up. The promise of a new and improved sign in experience beckoned us. They are setting us up for something great! Something AMAZING. Or as the French would say, incroyable. The age of absolutely game changing logins is coming right up!\n\nAnd then Google did the grand reveal. Unfortunately this is what it looked like -\n\n![](/static/images/gmail-after.png)\n\nHow underwhelming is that? From a user's perspective, it is actually worse. The username and password inputs are now on different pages which increases the time-to-login. Now we all know there's only so much you can do with login screens, so my hyperbole is a sharpening of contradictions. However, Google committed a cardinal sin. They hyped something up, plastered an upcoming change everywhere and then didn't stick the landing. Sure, there might be technical improvements under the hood maybe with other bells and whistles. But that is not the point. The point is that Google got people excited about a new feature and then viscerally disappointed. Unfortunately this seems to be Google's MO these days. _ cough _ Gemini _ cough _\n\nSo what's the big takeaway here? **Show, don't tell**. Too often people fall into the trap of announcing they are about to do something rather than just doing it. In a perverse way it might feel that telling someone they will do something is in of itself somehow doing that thing. The only exception I can see for something to be announced up front is if things require coordination from other parties.\n\nIn the case of Google, rather than announce they were making a change plastered everywhere in the login experience, they could have just started A/B or beta testing the change with a few people and gauged their feedback. Over time, they could have released the changes to everyone.\n\nLet's take a simple example from a day at work. I was struggling to understand how two different features in our platform were connected to each other and seemingly no one else did either. At this point I could go one of 2 ways -\n\n- Option 1: I could tell people that I was going to produce an architectural diagram or writeup of how these 2 features interplayed \n  OR\n- Option 2 :  I could write that writeup\n\nNow in option 1 - the only positive is that I have announced an intention to the world. The cons are\n\n- I have not produced any value yet.\n- If I don't follow through, I havent delivered on my words\n- AND I am no closer to understanding how these features work together\n\nIn option 2 - there are none of the cons mentioned above and I have produced value immediately - which by itself is the only thing that is important.\n\n**When in doubt, show, don't tell. Have a bias for action.**"
    },
    "slug": "show-dont-tell",
    "path": "posts/show-dont-tell",
    "filePath": "show-dont-tell.mdx",
    "toc": [],
    "readingTime": {
      "text": "3 min read",
      "minutes": 2.455,
      "time": 147300,
      "words": 491
    },
    "structuredData": {
      "@context": "https://schema.org",
      "@type": "BlogPosting",
      "headline": "Why Action Beats Words: Embracing 'Show, Don't Tell'",
      "datePublished": "2024-03-01T00:00:00.000Z",
      "dateModified": "2024-03-01T00:00:00.000Z",
      "description": "Have a bias for action",
      "image": "/static/images/gmail-before.png",
      "url": "https://arjunrao.co/posts/show-dont-tell"
    }
  },
  {
    "title": "Building Silicon Juice - The application to scour for venture capital activity",
    "date": "2024-02-28T00:00:00.000Z",
    "tags": [
      "hustle",
      "building"
    ],
    "lastmod": undefined,
    "draft": false,
    "summary": "Inner workings of the build process",
    "images": [
      "/static/images/siliconjuice-arch.png"
    ],
    "authors": undefined,
    "layout": undefined,
    "bibliography": undefined,
    "canonicalUrl": undefined,
    "content": "I am always curious about which companies attract venture funding. Besides indicating which companies are growing, it shows which sectors are being invested in. While services like Pitchbook and Crunchbase exist, sifting through them is hard. To address this, in part, I built Silicon Juice.\n\nSilicon Juice is an application that lets you search for companies that have attracted investments. You can do this by slicing them across different facets such as funding round, category of investments etc. You can use Silicon Juice by going [here](https://siliconjuice.netlify.app/). If you liked using it, please subscribe using the form on the home page.\n\n# Building Silicon Juice\n\nSilicon Juice is fairly classic in its architecture, it has a backend and a frontend. The backend is built using Python and Beautiful Soup. It reads from the mailchimp newsletter archive of [Silicon.news](https://www.silicon.news) which is the primary datasource for the investment data provided. The application is containerized and the image is deployed the Github Container Registry(GHCR). The application is then executed on a cron schedule of 1x/week using Github actions, which is when it\n\n- Reads the mailchimp newsletters (i.e. newsletters after the stored highwatermark)\n- Parses it using Beautiful Soup\n- Extracts the key attributes and information related to the funding\n- Upon failures, sends an email to the registered address using Mailgun\n- Upon success, writes the new records to Algolia\n- Updates the highwatermark of the last newsletter that was processed.\n\n## Interesting tidbits\n\n1. Human written newsletters have idiosyncracies or mistakes in their publications. Beautiful soup is a great tool for parsing html content, but these mistakes also lead to the parsing code having several edge cases and hard to grok. Unfortunately, this is the nature of processing any data file, as data engineers will be quick to point out.\n\n2. Deployment included building an image and shipping it to GHCR. Execution included running the cron task 1x/week. These were set up as two independent Github actions.\n\n3. It took a bit of elbow grease to get the GHCR integration working which likely was a result of my unfamiliarity. Ultimately there were 2 parts that were needed for the Github action to be correctly setup -\n\n- Trigger to push image\n\n```yaml\non:\n  push:\n    branches: [main]\n  pull_request:\n    branches: [main]\n```\n\n- GHCR push\n\n```yaml\ndocker-push:\n  needs: build\n  runs-on: ubuntu-latest\n  steps:\n    - uses: actions/checkout@v3\n    - name: Log into GH registry\n      uses: docker/login-action@v1\n      with:\n        registry: ghcr.io\n        username: ${{ github.actor }}\n        password: ${{ secrets.GH_PAT }}\n    - name: Push to GHCR\n      run: |\n        docker buildx build --push -t ghcr.io/${{ github.repository }}:latest .\n```\n\n4. The Github Action cron execution setup was fairly straightforward (only relevant parts)\n\n```yaml\njobs:\n  run_juice:\n    runs-on: ubuntu-latest\n\n    steps:\n      - name: Log into GH registry\n        uses: docker/login-action@v1\n        with:\n          registry: ghcr.io\n          username: ${{ github.actor }}\n          password: ${{ secrets.GH_PAT }}\n\n      - name: Pull Docker image from GitHub Container Registry\n        run: docker pull ghcr.io/${{ github.repository }}:latest\n\n      - name: Run Docker container\n        run: |\n          # Run a new container from a new image\n          docker run \\\n          -e ALGOLIA_APPLICATION_ID=${{ secrets.ALGOLIA_APPLICATION_ID }} \\\n          -e ALGOLIA_API_KEY=${{ secrets.ALGOLIA_API_KEY }} \\\n          -e MAILGUN_API_KEY=${{ secrets.MAILGUN_API_KEY }} \\\n          -e MAILGUN_FROM=${{ secrets.MAILGUN_FROM }} \\\n          -e MAILGUN_TO=${{ secrets.MAILGUN_TO }} \\\n          -e MAILGUN_URL=${{ secrets.MAILGUN_URL }} \\\n          --restart always \\\n          --name $(echo $IMAGE_NAME) \\\n          ghcr.io/${{ github.repository }}:latest\n```\n\nwhere `GH_PAT` is the Github Personal Access Token that you need to obtain from Github while setting up your application. For more details, see [this](https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/managing-your-personal-access-tokens)\n\nThe frontend is much simpler, and consists of a NextJS application built using TailwindCSS. Tailwind is an absolute godsend for people like me who could never write any useful CSS. While the internet is littered with how Tailwind is the absolute worst, I am a fan. The NextJS application uses Algolia's [InstantSearch components](https://www.algolia.com/doc/api-reference/widgets/instantsearch/react/) for building out the UI and borrows generously from [here](https://tailwindflex.com/@limaa-m/simple-landing-page) for the landing page. The two issues I have had with the frontend are\n\n- embedding analytics (shoutout to goatcounter which I love) in NextJS has been unsuccessful in tracking non-homepage views\n- the mobile views don't cover the entire width of the viewport which isn't great\n\nNeither of these are problematic enough, but if anyone has ideas, please give me a shoutout [@raoarjun](https://twitter.com/raoarjun)!\n\n# Closing out\n\nBuilding Silicon Juice over a few weekends was quite a bit of fun. I learned a bunch of new things around Algolia integrations, landing pages, GHCR, and Mailgun shenanigans. For all its warts, this is a stack that actually plays together quite well and allows for rapidly building prototypes and SLC (definitely check [this](https://longform.asmartbear.com/slc/) out if you haven't heard of this) apps.\n\nAs for the future of Silicon Juice itself? From a user standpoint, it is in autopilot for the moment. I will be using it for sifting through venture news and perhaps even add other data sources of venture activity, as and when I come across them.\n\nUntil then, onwards and upwards! 🚀\n\nP.S: Many thanks to Edith Yeung, for Silicon.news!",
    "_id": "silicon-juice.mdx",
    "_raw": {
      "flattenedPath": "silicon-juice"
    },
    "body": {
      "raw": "I am always curious about which companies attract venture funding. Besides indicating which companies are growing, it shows which sectors are being invested in. While services like Pitchbook and Crunchbase exist, sifting through them is hard. To address this, in part, I built Silicon Juice.\n\nSilicon Juice is an application that lets you search for companies that have attracted investments. You can do this by slicing them across different facets such as funding round, category of investments etc. You can use Silicon Juice by going [here](https://siliconjuice.netlify.app/). If you liked using it, please subscribe using the form on the home page.\n\n# Building Silicon Juice\n\nSilicon Juice is fairly classic in its architecture, it has a backend and a frontend. The backend is built using Python and Beautiful Soup. It reads from the mailchimp newsletter archive of [Silicon.news](https://www.silicon.news) which is the primary datasource for the investment data provided. The application is containerized and the image is deployed the Github Container Registry(GHCR). The application is then executed on a cron schedule of 1x/week using Github actions, which is when it\n\n- Reads the mailchimp newsletters (i.e. newsletters after the stored highwatermark)\n- Parses it using Beautiful Soup\n- Extracts the key attributes and information related to the funding\n- Upon failures, sends an email to the registered address using Mailgun\n- Upon success, writes the new records to Algolia\n- Updates the highwatermark of the last newsletter that was processed.\n\n## Interesting tidbits\n\n1. Human written newsletters have idiosyncracies or mistakes in their publications. Beautiful soup is a great tool for parsing html content, but these mistakes also lead to the parsing code having several edge cases and hard to grok. Unfortunately, this is the nature of processing any data file, as data engineers will be quick to point out.\n\n2. Deployment included building an image and shipping it to GHCR. Execution included running the cron task 1x/week. These were set up as two independent Github actions.\n\n3. It took a bit of elbow grease to get the GHCR integration working which likely was a result of my unfamiliarity. Ultimately there were 2 parts that were needed for the Github action to be correctly setup -\n\n- Trigger to push image\n\n```yaml\non:\n  push:\n    branches: [main]\n  pull_request:\n    branches: [main]\n```\n\n- GHCR push\n\n```yaml\ndocker-push:\n  needs: build\n  runs-on: ubuntu-latest\n  steps:\n    - uses: actions/checkout@v3\n    - name: Log into GH registry\n      uses: docker/login-action@v1\n      with:\n        registry: ghcr.io\n        username: ${{ github.actor }}\n        password: ${{ secrets.GH_PAT }}\n    - name: Push to GHCR\n      run: |\n        docker buildx build --push -t ghcr.io/${{ github.repository }}:latest .\n```\n\n4. The Github Action cron execution setup was fairly straightforward (only relevant parts)\n\n```yaml\njobs:\n  run_juice:\n    runs-on: ubuntu-latest\n\n    steps:\n      - name: Log into GH registry\n        uses: docker/login-action@v1\n        with:\n          registry: ghcr.io\n          username: ${{ github.actor }}\n          password: ${{ secrets.GH_PAT }}\n\n      - name: Pull Docker image from GitHub Container Registry\n        run: docker pull ghcr.io/${{ github.repository }}:latest\n\n      - name: Run Docker container\n        run: |\n          # Run a new container from a new image\n          docker run \\\n          -e ALGOLIA_APPLICATION_ID=${{ secrets.ALGOLIA_APPLICATION_ID }} \\\n          -e ALGOLIA_API_KEY=${{ secrets.ALGOLIA_API_KEY }} \\\n          -e MAILGUN_API_KEY=${{ secrets.MAILGUN_API_KEY }} \\\n          -e MAILGUN_FROM=${{ secrets.MAILGUN_FROM }} \\\n          -e MAILGUN_TO=${{ secrets.MAILGUN_TO }} \\\n          -e MAILGUN_URL=${{ secrets.MAILGUN_URL }} \\\n          --restart always \\\n          --name $(echo $IMAGE_NAME) \\\n          ghcr.io/${{ github.repository }}:latest\n```\n\nwhere `GH_PAT` is the Github Personal Access Token that you need to obtain from Github while setting up your application. For more details, see [this](https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/managing-your-personal-access-tokens)\n\nThe frontend is much simpler, and consists of a NextJS application built using TailwindCSS. Tailwind is an absolute godsend for people like me who could never write any useful CSS. While the internet is littered with how Tailwind is the absolute worst, I am a fan. The NextJS application uses Algolia's [InstantSearch components](https://www.algolia.com/doc/api-reference/widgets/instantsearch/react/) for building out the UI and borrows generously from [here](https://tailwindflex.com/@limaa-m/simple-landing-page) for the landing page. The two issues I have had with the frontend are\n\n- embedding analytics (shoutout to goatcounter which I love) in NextJS has been unsuccessful in tracking non-homepage views\n- the mobile views don't cover the entire width of the viewport which isn't great\n\nNeither of these are problematic enough, but if anyone has ideas, please give me a shoutout [@raoarjun](https://twitter.com/raoarjun)!\n\n# Closing out\n\nBuilding Silicon Juice over a few weekends was quite a bit of fun. I learned a bunch of new things around Algolia integrations, landing pages, GHCR, and Mailgun shenanigans. For all its warts, this is a stack that actually plays together quite well and allows for rapidly building prototypes and SLC (definitely check [this](https://longform.asmartbear.com/slc/) out if you haven't heard of this) apps.\n\nAs for the future of Silicon Juice itself? From a user standpoint, it is in autopilot for the moment. I will be using it for sifting through venture news and perhaps even add other data sources of venture activity, as and when I come across them.\n\nUntil then, onwards and upwards! 🚀\n\nP.S: Many thanks to Edith Yeung, for Silicon.news!",
      "code": "I am always curious about which companies attract venture funding. Besides indicating which companies are growing, it shows which sectors are being invested in. While services like Pitchbook and Crunchbase exist, sifting through them is hard. To address this, in part, I built Silicon Juice.\n\nSilicon Juice is an application that lets you search for companies that have attracted investments. You can do this by slicing them across different facets such as funding round, category of investments etc. You can use Silicon Juice by going [here](https://siliconjuice.netlify.app/). If you liked using it, please subscribe using the form on the home page.\n\n# Building Silicon Juice\n\nSilicon Juice is fairly classic in its architecture, it has a backend and a frontend. The backend is built using Python and Beautiful Soup. It reads from the mailchimp newsletter archive of [Silicon.news](https://www.silicon.news) which is the primary datasource for the investment data provided. The application is containerized and the image is deployed the Github Container Registry(GHCR). The application is then executed on a cron schedule of 1x/week using Github actions, which is when it\n\n- Reads the mailchimp newsletters (i.e. newsletters after the stored highwatermark)\n- Parses it using Beautiful Soup\n- Extracts the key attributes and information related to the funding\n- Upon failures, sends an email to the registered address using Mailgun\n- Upon success, writes the new records to Algolia\n- Updates the highwatermark of the last newsletter that was processed.\n\n## Interesting tidbits\n\n1. Human written newsletters have idiosyncracies or mistakes in their publications. Beautiful soup is a great tool for parsing html content, but these mistakes also lead to the parsing code having several edge cases and hard to grok. Unfortunately, this is the nature of processing any data file, as data engineers will be quick to point out.\n\n2. Deployment included building an image and shipping it to GHCR. Execution included running the cron task 1x/week. These were set up as two independent Github actions.\n\n3. It took a bit of elbow grease to get the GHCR integration working which likely was a result of my unfamiliarity. Ultimately there were 2 parts that were needed for the Github action to be correctly setup -\n\n- Trigger to push image\n\n```yaml\non:\n  push:\n    branches: [main]\n  pull_request:\n    branches: [main]\n```\n\n- GHCR push\n\n```yaml\ndocker-push:\n  needs: build\n  runs-on: ubuntu-latest\n  steps:\n    - uses: actions/checkout@v3\n    - name: Log into GH registry\n      uses: docker/login-action@v1\n      with:\n        registry: ghcr.io\n        username: ${{ github.actor }}\n        password: ${{ secrets.GH_PAT }}\n    - name: Push to GHCR\n      run: |\n        docker buildx build --push -t ghcr.io/${{ github.repository }}:latest .\n```\n\n4. The Github Action cron execution setup was fairly straightforward (only relevant parts)\n\n```yaml\njobs:\n  run_juice:\n    runs-on: ubuntu-latest\n\n    steps:\n      - name: Log into GH registry\n        uses: docker/login-action@v1\n        with:\n          registry: ghcr.io\n          username: ${{ github.actor }}\n          password: ${{ secrets.GH_PAT }}\n\n      - name: Pull Docker image from GitHub Container Registry\n        run: docker pull ghcr.io/${{ github.repository }}:latest\n\n      - name: Run Docker container\n        run: |\n          # Run a new container from a new image\n          docker run \\\n          -e ALGOLIA_APPLICATION_ID=${{ secrets.ALGOLIA_APPLICATION_ID }} \\\n          -e ALGOLIA_API_KEY=${{ secrets.ALGOLIA_API_KEY }} \\\n          -e MAILGUN_API_KEY=${{ secrets.MAILGUN_API_KEY }} \\\n          -e MAILGUN_FROM=${{ secrets.MAILGUN_FROM }} \\\n          -e MAILGUN_TO=${{ secrets.MAILGUN_TO }} \\\n          -e MAILGUN_URL=${{ secrets.MAILGUN_URL }} \\\n          --restart always \\\n          --name $(echo $IMAGE_NAME) \\\n          ghcr.io/${{ github.repository }}:latest\n```\n\nwhere `GH_PAT` is the Github Personal Access Token that you need to obtain from Github while setting up your application. For more details, see [this](https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/managing-your-personal-access-tokens)\n\nThe frontend is much simpler, and consists of a NextJS application built using TailwindCSS. Tailwind is an absolute godsend for people like me who could never write any useful CSS. While the internet is littered with how Tailwind is the absolute worst, I am a fan. The NextJS application uses Algolia's [InstantSearch components](https://www.algolia.com/doc/api-reference/widgets/instantsearch/react/) for building out the UI and borrows generously from [here](https://tailwindflex.com/@limaa-m/simple-landing-page) for the landing page. The two issues I have had with the frontend are\n\n- embedding analytics (shoutout to goatcounter which I love) in NextJS has been unsuccessful in tracking non-homepage views\n- the mobile views don't cover the entire width of the viewport which isn't great\n\nNeither of these are problematic enough, but if anyone has ideas, please give me a shoutout [@raoarjun](https://twitter.com/raoarjun)!\n\n# Closing out\n\nBuilding Silicon Juice over a few weekends was quite a bit of fun. I learned a bunch of new things around Algolia integrations, landing pages, GHCR, and Mailgun shenanigans. For all its warts, this is a stack that actually plays together quite well and allows for rapidly building prototypes and SLC (definitely check [this](https://longform.asmartbear.com/slc/) out if you haven't heard of this) apps.\n\nAs for the future of Silicon Juice itself? From a user standpoint, it is in autopilot for the moment. I will be using it for sifting through venture news and perhaps even add other data sources of venture activity, as and when I come across them.\n\nUntil then, onwards and upwards! 🚀\n\nP.S: Many thanks to Edith Yeung, for Silicon.news!"
    },
    "slug": "silicon-juice",
    "path": "posts/silicon-juice",
    "filePath": "silicon-juice.mdx",
    "toc": [],
    "readingTime": {
      "text": "5 min read",
      "minutes": 4.085,
      "time": 245100,
      "words": 817
    },
    "structuredData": {
      "@context": "https://schema.org",
      "@type": "BlogPosting",
      "headline": "Building Silicon Juice - The application to scour for venture capital activity",
      "datePublished": "2024-02-28T00:00:00.000Z",
      "dateModified": "2024-02-28T00:00:00.000Z",
      "description": "Inner workings of the build process",
      "image": "/static/images/siliconjuice-arch.png",
      "url": "https://arjunrao.co/posts/silicon-juice"
    }
  },
  {
    "title": "Evergreen skills",
    "date": "2019-01-11T00:00:00.000Z",
    "tags": [
      "growth"
    ],
    "lastmod": undefined,
    "draft": false,
    "summary": "Skills that work in a post-apocalyptic world",
    "images": undefined,
    "authors": undefined,
    "layout": undefined,
    "bibliography": undefined,
    "canonicalUrl": undefined,
    "content": "I have been reading the book `Sapiens` by Yuval Noah Hariri and a thought crossed my mind. What if I were transported back into pre-historic times or a post-zombie apocalypse? Knowing what I do right now, what skillsets could I use in that setting?\n\nThe question is not one of survival, it is one of utilizing skills I have now, in a world eons past. It is less about disseminating knowledge and more about applications of the knowledge that I have already.\n\nImagine this world. It is 30000 years in the past. The homo sapiens are beginning to establish their dominance but its still very much a nomadic tribe culture without ideas of agriculture, advanced weaponry or technology. Fire is already present and some basic tools are available for usage. In this setting how does my knowledge of the contemporary world translate into skills that are evergreen.\n\nHaving grown up primarily as a computer geek, I do not think I have too many skills that are easily transferrable across timelines. I mean I read a lot of books about politics, medieval warfare, strategy and the ilk, but for me to survive in a prehistoric times, it needs to be much more basic constructs. It is the foundational level of getting things setup and if I wanted to alter the timeline and introduce modern implements into ancient times, I would need to have strong fundamentals.\n\nAs a simple example, state-of-the-art computers definitely don't translate well, as it needs to have many things available outside my domain like silicon, circuit boards and other hardware. Neither would I be able to reconstruct any kind of present-time weaponry as I do not have those skills.\n\nWhat I will be able to do, is introduce concepts of farming such as the wheelbarrow and plough. I know concepts of how the steam engine works and perhaps that could result in setting up some transportation links. Constructing simple weaponry like a bow/arrow is on the table as is magnetism and electricity concepts which can be pretty useful to a people who have never seen applications of that.\n\nThis is a thought experiment to see what skills I have that maintain temporal permanence, with the mindset of consciously making the effort to acquire some new ones.",
    "_id": "skills.mdx",
    "_raw": {
      "flattenedPath": "skills"
    },
    "body": {
      "raw": "I have been reading the book `Sapiens` by Yuval Noah Hariri and a thought crossed my mind. What if I were transported back into pre-historic times or a post-zombie apocalypse? Knowing what I do right now, what skillsets could I use in that setting?\n\nThe question is not one of survival, it is one of utilizing skills I have now, in a world eons past. It is less about disseminating knowledge and more about applications of the knowledge that I have already.\n\nImagine this world. It is 30000 years in the past. The homo sapiens are beginning to establish their dominance but its still very much a nomadic tribe culture without ideas of agriculture, advanced weaponry or technology. Fire is already present and some basic tools are available for usage. In this setting how does my knowledge of the contemporary world translate into skills that are evergreen.\n\nHaving grown up primarily as a computer geek, I do not think I have too many skills that are easily transferrable across timelines. I mean I read a lot of books about politics, medieval warfare, strategy and the ilk, but for me to survive in a prehistoric times, it needs to be much more basic constructs. It is the foundational level of getting things setup and if I wanted to alter the timeline and introduce modern implements into ancient times, I would need to have strong fundamentals.\n\nAs a simple example, state-of-the-art computers definitely don't translate well, as it needs to have many things available outside my domain like silicon, circuit boards and other hardware. Neither would I be able to reconstruct any kind of present-time weaponry as I do not have those skills.\n\nWhat I will be able to do, is introduce concepts of farming such as the wheelbarrow and plough. I know concepts of how the steam engine works and perhaps that could result in setting up some transportation links. Constructing simple weaponry like a bow/arrow is on the table as is magnetism and electricity concepts which can be pretty useful to a people who have never seen applications of that.\n\nThis is a thought experiment to see what skills I have that maintain temporal permanence, with the mindset of consciously making the effort to acquire some new ones.",
      "code": "I have been reading the book `Sapiens` by Yuval Noah Hariri and a thought crossed my mind. What if I were transported back into pre-historic times or a post-zombie apocalypse? Knowing what I do right now, what skillsets could I use in that setting?\n\nThe question is not one of survival, it is one of utilizing skills I have now, in a world eons past. It is less about disseminating knowledge and more about applications of the knowledge that I have already.\n\nImagine this world. It is 30000 years in the past. The homo sapiens are beginning to establish their dominance but its still very much a nomadic tribe culture without ideas of agriculture, advanced weaponry or technology. Fire is already present and some basic tools are available for usage. In this setting how does my knowledge of the contemporary world translate into skills that are evergreen.\n\nHaving grown up primarily as a computer geek, I do not think I have too many skills that are easily transferrable across timelines. I mean I read a lot of books about politics, medieval warfare, strategy and the ilk, but for me to survive in a prehistoric times, it needs to be much more basic constructs. It is the foundational level of getting things setup and if I wanted to alter the timeline and introduce modern implements into ancient times, I would need to have strong fundamentals.\n\nAs a simple example, state-of-the-art computers definitely don't translate well, as it needs to have many things available outside my domain like silicon, circuit boards and other hardware. Neither would I be able to reconstruct any kind of present-time weaponry as I do not have those skills.\n\nWhat I will be able to do, is introduce concepts of farming such as the wheelbarrow and plough. I know concepts of how the steam engine works and perhaps that could result in setting up some transportation links. Constructing simple weaponry like a bow/arrow is on the table as is magnetism and electricity concepts which can be pretty useful to a people who have never seen applications of that.\n\nThis is a thought experiment to see what skills I have that maintain temporal permanence, with the mindset of consciously making the effort to acquire some new ones."
    },
    "slug": "skills",
    "path": "posts/skills",
    "filePath": "skills.mdx",
    "toc": [],
    "readingTime": {
      "text": "2 min read",
      "minutes": 1.89,
      "time": 113400,
      "words": 378
    },
    "structuredData": {
      "@context": "https://schema.org",
      "@type": "BlogPosting",
      "headline": "Evergreen skills",
      "datePublished": "2019-01-11T00:00:00.000Z",
      "dateModified": "2019-01-11T00:00:00.000Z",
      "description": "Skills that work in a post-apocalyptic world",
      "image": "/static/images/twitter-card.png",
      "url": "https://arjunrao.co/posts/skills"
    }
  },
  {
    "title": "The importance of having skin in the game",
    "date": "2024-06-20T00:00:00.000Z",
    "tags": [
      "growth"
    ],
    "lastmod": undefined,
    "draft": false,
    "summary": "Creating an environment of voluntary ownership",
    "images": [
      "/static/images/skin.jpeg"
    ],
    "authors": undefined,
    "layout": undefined,
    "bibliography": undefined,
    "canonicalUrl": undefined,
    "content": "I was talking with a teammate of mine (let’s call him Bob) about one of our previous hires (let’s call him Chad), who we had to let go for performance reasons. Bob was telling me about how he feels personally responsible for hiring Chad.\n\nBob felt that Chad managed to “fool” him in the interview process, which he took as a personal affront - primarily for being unable to adequately gauge character. We could spend a whole article on this point and how this isn’t the right lens to judge both yourself and others, because of myriad situations that really contribute to such an outcome. This is not that article.\n\nThe second thing that Bob told me was far more illuminating to me. He said that he felt he had let me down by adding this person to the team which didn’t contribute to raising the bar of the team. This I found to be a super interesting insight.\n\nBob is a very strong performer on the team and my gut reaction was to console him and tell him that this decision did not diminish his value to the team. Evaluating humans and evaluating code can be two very different skillsets.\n\nOn the other hand, I think this was exactly what Bob should feel. Not humiliation or embarrassment but that sense of accountability that led to an unsatisfactory outcome. I think this is good for both Bob and the team and here is why.\n\nPeople will only perform their best if they feel like they have skin in the game. If a person feels like there is nothing to gain from an experience at work, be it technical skill, monetary gain, challenging problems or a sense of ownership, that is likely the end of the road for them. They will start looking for other opportunities.\n\nGetting that skin in the game is crucial to having a self-motivated drive to improve status quo and do greater things. It builds character as a result of the self introspection or skill acquisition that one needs, to feel a sense of real involvement. You stop seeing the world as if things are happening _to you_ and feel agency to create change. When you have no skin in the game it’s easy to complain about all the things that are going wrong. When you have skin in the game, you are incentivized to make changes so that you don’t feel the need to complain.\n\n## Your responsibility as a manager\n\nHaving your team feel like they have skin in the game has to be coupled with you, as their manager, being able to provide air cover for them. If all you are doing is making your team feel accountable for their decisions, but not providing them with any support, that can very quickly turn into disillusionment. It will cause scenarios where your team will go out on a limb but you will not back them up. This is awful for team morale. Don’t shirk your responsibilities towards supporting your team.\n\nHow do you create an environment where people feel like they have skin in the game? There are a few ways that have worked for me -\n\n- **Figure out what is important to your team and help them get there** - If you hire the right type of people, you will find a lot of alignment between what you want from your team v/s what they want themselves, but its not always 100%. You don’t need to achieve 100%, but focus on advancing goals and career aspirations in mutually beneficial ways (or even unilaterally for your top performers). They will appreciate and remember how much you have their back and will do the same for you and your team.\n\n- **Give them agency** - Allow your employees to take ownership of projects and initiatives. When they feel accountable for specific outcomes, their engagement increases. The micromanager trope is well-known, and avoiding it isn’t just about not asking your team for frequent updates. Agency often involves creating space and opportunities for your employees to be able to exercise their strengths. Even the best surfers know they need to do the hard work to be in place to catch the big wave. Magic doesn’t _just_ happen.\n\n- **Ask don’t tell** - Involve employees in an inclusive decision-making processes. When they have a say in the company's direction, they feel more responsible for its outcomes. We follow a “pull” model instead of a “push” model where we will give the team all the reasons for why something is important but not force them to work on it. The idea is that if you have hired people who know what is important for the business and are able to couple that with their awareness of the system, merely pointing them in the right direction will result in great outcomes.\n\n- **Build trust and be transparent** - Maintain transparency about company goals, performance, and challenges. When employees understand the bigger picture, they can align their efforts accordingly. As a leader, sometimes you must withhold plans to avoid disrupting the team with constant reprioritization, as some plans never materialize. This works as long as the team trusts you and the fact that what they don’t know, they don’t need to know.\n\n- **Give them redirecting feedback often** - You might be tempted to not give your highest performers critical or redirecting feedback. This feeling tends to stem from the fact that there might be other people who need that feedback more, or that the strong performers already know what they want. This kind of thinking couldn’t be further off. Firstly, there is documented literature at this point that points to the benefits of improving your highest performer’s performance over improving your lowest performer’s performance. Secondly, this shows your best performers that you are invested in their holistic career growth and are giving them a reason to continue excelling in their roles.\n\n- **Be ruthless in your support for your team** (even when they aren’t in the room with you) - This basically means advocating for their needs, recognizing their contributions, and defending their interests in discussions and decisions that affect them. Such unwavering support fosters a culture of trust and loyalty, motivating your team to perform at their best. It also ensures that their voices are heard and valued, even in their absence. By constantly championing your employees, you demonstrate your commitment to their well-being and professional growth, which in turn cultivates a positive and productive work environment.\n\n- **Incentivize them monetarily and non-monetarily** - Last but not the least, offer bonuses, raises, and profit-sharing to reward their work financially. Complement these with non-monetary incentives such as professional development opportunities, flexible work arrangements, and maybe other unconventional benefits (things like sabbaticals, mentorship, networking etc). These diverse incentives boost morale, enhance job satisfaction, and motivate employees to excel.\n\nThis is not a science but an intentional best-effort attempt to increase your team’s personal stake in their work environment.",
    "_id": "skin.mdx",
    "_raw": {
      "flattenedPath": "skin"
    },
    "body": {
      "raw": "I was talking with a teammate of mine (let’s call him Bob) about one of our previous hires (let’s call him Chad), who we had to let go for performance reasons. Bob was telling me about how he feels personally responsible for hiring Chad.\n\nBob felt that Chad managed to “fool” him in the interview process, which he took as a personal affront - primarily for being unable to adequately gauge character. We could spend a whole article on this point and how this isn’t the right lens to judge both yourself and others, because of myriad situations that really contribute to such an outcome. This is not that article.\n\nThe second thing that Bob told me was far more illuminating to me. He said that he felt he had let me down by adding this person to the team which didn’t contribute to raising the bar of the team. This I found to be a super interesting insight.\n\nBob is a very strong performer on the team and my gut reaction was to console him and tell him that this decision did not diminish his value to the team. Evaluating humans and evaluating code can be two very different skillsets.\n\nOn the other hand, I think this was exactly what Bob should feel. Not humiliation or embarrassment but that sense of accountability that led to an unsatisfactory outcome. I think this is good for both Bob and the team and here is why.\n\nPeople will only perform their best if they feel like they have skin in the game. If a person feels like there is nothing to gain from an experience at work, be it technical skill, monetary gain, challenging problems or a sense of ownership, that is likely the end of the road for them. They will start looking for other opportunities.\n\nGetting that skin in the game is crucial to having a self-motivated drive to improve status quo and do greater things. It builds character as a result of the self introspection or skill acquisition that one needs, to feel a sense of real involvement. You stop seeing the world as if things are happening _to you_ and feel agency to create change. When you have no skin in the game it’s easy to complain about all the things that are going wrong. When you have skin in the game, you are incentivized to make changes so that you don’t feel the need to complain.\n\n## Your responsibility as a manager\n\nHaving your team feel like they have skin in the game has to be coupled with you, as their manager, being able to provide air cover for them. If all you are doing is making your team feel accountable for their decisions, but not providing them with any support, that can very quickly turn into disillusionment. It will cause scenarios where your team will go out on a limb but you will not back them up. This is awful for team morale. Don’t shirk your responsibilities towards supporting your team.\n\nHow do you create an environment where people feel like they have skin in the game? There are a few ways that have worked for me -\n\n- **Figure out what is important to your team and help them get there** - If you hire the right type of people, you will find a lot of alignment between what you want from your team v/s what they want themselves, but its not always 100%. You don’t need to achieve 100%, but focus on advancing goals and career aspirations in mutually beneficial ways (or even unilaterally for your top performers). They will appreciate and remember how much you have their back and will do the same for you and your team.\n\n- **Give them agency** - Allow your employees to take ownership of projects and initiatives. When they feel accountable for specific outcomes, their engagement increases. The micromanager trope is well-known, and avoiding it isn’t just about not asking your team for frequent updates. Agency often involves creating space and opportunities for your employees to be able to exercise their strengths. Even the best surfers know they need to do the hard work to be in place to catch the big wave. Magic doesn’t _just_ happen.\n\n- **Ask don’t tell** - Involve employees in an inclusive decision-making processes. When they have a say in the company's direction, they feel more responsible for its outcomes. We follow a “pull” model instead of a “push” model where we will give the team all the reasons for why something is important but not force them to work on it. The idea is that if you have hired people who know what is important for the business and are able to couple that with their awareness of the system, merely pointing them in the right direction will result in great outcomes.\n\n- **Build trust and be transparent** - Maintain transparency about company goals, performance, and challenges. When employees understand the bigger picture, they can align their efforts accordingly. As a leader, sometimes you must withhold plans to avoid disrupting the team with constant reprioritization, as some plans never materialize. This works as long as the team trusts you and the fact that what they don’t know, they don’t need to know.\n\n- **Give them redirecting feedback often** - You might be tempted to not give your highest performers critical or redirecting feedback. This feeling tends to stem from the fact that there might be other people who need that feedback more, or that the strong performers already know what they want. This kind of thinking couldn’t be further off. Firstly, there is documented literature at this point that points to the benefits of improving your highest performer’s performance over improving your lowest performer’s performance. Secondly, this shows your best performers that you are invested in their holistic career growth and are giving them a reason to continue excelling in their roles.\n\n- **Be ruthless in your support for your team** (even when they aren’t in the room with you) - This basically means advocating for their needs, recognizing their contributions, and defending their interests in discussions and decisions that affect them. Such unwavering support fosters a culture of trust and loyalty, motivating your team to perform at their best. It also ensures that their voices are heard and valued, even in their absence. By constantly championing your employees, you demonstrate your commitment to their well-being and professional growth, which in turn cultivates a positive and productive work environment.\n\n- **Incentivize them monetarily and non-monetarily** - Last but not the least, offer bonuses, raises, and profit-sharing to reward their work financially. Complement these with non-monetary incentives such as professional development opportunities, flexible work arrangements, and maybe other unconventional benefits (things like sabbaticals, mentorship, networking etc). These diverse incentives boost morale, enhance job satisfaction, and motivate employees to excel.\n\nThis is not a science but an intentional best-effort attempt to increase your team’s personal stake in their work environment.",
      "code": "I was talking with a teammate of mine (let’s call him Bob) about one of our previous hires (let’s call him Chad), who we had to let go for performance reasons. Bob was telling me about how he feels personally responsible for hiring Chad.\n\nBob felt that Chad managed to “fool” him in the interview process, which he took as a personal affront - primarily for being unable to adequately gauge character. We could spend a whole article on this point and how this isn’t the right lens to judge both yourself and others, because of myriad situations that really contribute to such an outcome. This is not that article.\n\nThe second thing that Bob told me was far more illuminating to me. He said that he felt he had let me down by adding this person to the team which didn’t contribute to raising the bar of the team. This I found to be a super interesting insight.\n\nBob is a very strong performer on the team and my gut reaction was to console him and tell him that this decision did not diminish his value to the team. Evaluating humans and evaluating code can be two very different skillsets.\n\nOn the other hand, I think this was exactly what Bob should feel. Not humiliation or embarrassment but that sense of accountability that led to an unsatisfactory outcome. I think this is good for both Bob and the team and here is why.\n\nPeople will only perform their best if they feel like they have skin in the game. If a person feels like there is nothing to gain from an experience at work, be it technical skill, monetary gain, challenging problems or a sense of ownership, that is likely the end of the road for them. They will start looking for other opportunities.\n\nGetting that skin in the game is crucial to having a self-motivated drive to improve status quo and do greater things. It builds character as a result of the self introspection or skill acquisition that one needs, to feel a sense of real involvement. You stop seeing the world as if things are happening _to you_ and feel agency to create change. When you have no skin in the game it’s easy to complain about all the things that are going wrong. When you have skin in the game, you are incentivized to make changes so that you don’t feel the need to complain.\n\n## Your responsibility as a manager\n\nHaving your team feel like they have skin in the game has to be coupled with you, as their manager, being able to provide air cover for them. If all you are doing is making your team feel accountable for their decisions, but not providing them with any support, that can very quickly turn into disillusionment. It will cause scenarios where your team will go out on a limb but you will not back them up. This is awful for team morale. Don’t shirk your responsibilities towards supporting your team.\n\nHow do you create an environment where people feel like they have skin in the game? There are a few ways that have worked for me -\n\n- **Figure out what is important to your team and help them get there** - If you hire the right type of people, you will find a lot of alignment between what you want from your team v/s what they want themselves, but its not always 100%. You don’t need to achieve 100%, but focus on advancing goals and career aspirations in mutually beneficial ways (or even unilaterally for your top performers). They will appreciate and remember how much you have their back and will do the same for you and your team.\n\n- **Give them agency** - Allow your employees to take ownership of projects and initiatives. When they feel accountable for specific outcomes, their engagement increases. The micromanager trope is well-known, and avoiding it isn’t just about not asking your team for frequent updates. Agency often involves creating space and opportunities for your employees to be able to exercise their strengths. Even the best surfers know they need to do the hard work to be in place to catch the big wave. Magic doesn’t _just_ happen.\n\n- **Ask don’t tell** - Involve employees in an inclusive decision-making processes. When they have a say in the company's direction, they feel more responsible for its outcomes. We follow a “pull” model instead of a “push” model where we will give the team all the reasons for why something is important but not force them to work on it. The idea is that if you have hired people who know what is important for the business and are able to couple that with their awareness of the system, merely pointing them in the right direction will result in great outcomes.\n\n- **Build trust and be transparent** - Maintain transparency about company goals, performance, and challenges. When employees understand the bigger picture, they can align their efforts accordingly. As a leader, sometimes you must withhold plans to avoid disrupting the team with constant reprioritization, as some plans never materialize. This works as long as the team trusts you and the fact that what they don’t know, they don’t need to know.\n\n- **Give them redirecting feedback often** - You might be tempted to not give your highest performers critical or redirecting feedback. This feeling tends to stem from the fact that there might be other people who need that feedback more, or that the strong performers already know what they want. This kind of thinking couldn’t be further off. Firstly, there is documented literature at this point that points to the benefits of improving your highest performer’s performance over improving your lowest performer’s performance. Secondly, this shows your best performers that you are invested in their holistic career growth and are giving them a reason to continue excelling in their roles.\n\n- **Be ruthless in your support for your team** (even when they aren’t in the room with you) - This basically means advocating for their needs, recognizing their contributions, and defending their interests in discussions and decisions that affect them. Such unwavering support fosters a culture of trust and loyalty, motivating your team to perform at their best. It also ensures that their voices are heard and valued, even in their absence. By constantly championing your employees, you demonstrate your commitment to their well-being and professional growth, which in turn cultivates a positive and productive work environment.\n\n- **Incentivize them monetarily and non-monetarily** - Last but not the least, offer bonuses, raises, and profit-sharing to reward their work financially. Complement these with non-monetary incentives such as professional development opportunities, flexible work arrangements, and maybe other unconventional benefits (things like sabbaticals, mentorship, networking etc). These diverse incentives boost morale, enhance job satisfaction, and motivate employees to excel.\n\nThis is not a science but an intentional best-effort attempt to increase your team’s personal stake in their work environment."
    },
    "slug": "skin",
    "path": "posts/skin",
    "filePath": "skin.mdx",
    "toc": [],
    "readingTime": {
      "text": "6 min read",
      "minutes": 5.835,
      "time": 350100,
      "words": 1167
    },
    "structuredData": {
      "@context": "https://schema.org",
      "@type": "BlogPosting",
      "headline": "The importance of having skin in the game",
      "datePublished": "2024-06-20T00:00:00.000Z",
      "dateModified": "2024-06-20T00:00:00.000Z",
      "description": "Creating an environment of voluntary ownership",
      "image": "/static/images/skin.jpeg",
      "url": "https://arjunrao.co/posts/skin"
    }
  },
  {
    "title": "From a snowball to an avalanche: The power of small changes ",
    "date": "2024-03-06T00:00:00.000Z",
    "tags": [
      "technology"
    ],
    "lastmod": undefined,
    "draft": false,
    "summary": "How to build momentum in bite-sized increments",
    "images": [
      "/static/images/momentum.jpeg"
    ],
    "authors": undefined,
    "layout": undefined,
    "bibliography": undefined,
    "canonicalUrl": undefined,
    "content": "One of the things I guide my teams on is how they tackle big unknown problems. Often when a big problem is encountered, it is riddled with several unknowns based on business context, technical solutions, human touch points and the list goes on and on.  It can be pretty overwhelming to figure out where to start and how to proceed. In such scenarios, I propose the following steps — \n\n- Pick a narrow slice \n- Keep things atomic\n- Run a tracer bullet end to end\n- Rinse, repeat, iterate\n\nLet’s look at these a bit more in details — \n\n# 🍕Pick a narrow slice\n\nLooking at a project in its entirety makes it hard to determine what parts are important and where to begin. Rather than taking a sequential approach to building the whole feature, think of how to build intermediate pieces. The outcome might not look anything like the end product, but will provide valuable feedback or learnings for you to keep building towards your eventual goal. \n\nTo demonstrate this, think of how you would build a car for the first time. A very complex and time consuming affair. Rather than starting by building a car, you can build it in multiple iterations. Each of these iterations provides you valuable lessons about the final way you need to build a car, but you learn it in steps. These include — \n\n|Goal|Action|\n|--|--|\n|Move from point A to point B|Build a skateboard to demonstrate usage of wheels|\n|Provide some form of controlled navigation|Build a scooter to demonstrate usage of steering|\n|Complex wheel system to travel|Build a bicycle to demonstrate usage of interconnected gear system|\n|Move without human effort involved|Build a motorbike to demonstrate usage of an engine|\n|Car that helps you achieve your goal|Build the car|\n\n![](/static/images/car-journey.png)\n\n# ⚛ Keep things atomic\n\nAs per the dictionary, the definition of Atomic is,\n\n> of or forming a single irreducible unit or component in a larger system.\n\nBy creating bite-sized chunks or small increments of the project you are trying to deliver, you achieve several benefits such as - \n\n- They are much easier to explain to someone else who wants to know how things work.\n- They are independently testable. You don’t have depend on other components to prove the viability of the piece you are trying to test.\n- You reduce uncertainty because small things are easy to deliver and build momentum you need towards progress.\n- You increase the amount of feedback you are receiving to determine the direction you want to go down.\n\n# 🎯 Run a tracer bullet end to end\n\nAs Pragmatic Programmer defines `Tracer bullets`\n\n> “Their phosphorus ignites and leaves a pyrotechnic trail from the gun to whatever they hit,” write authors David Thomas and Andrew Hunt in their book The Pragmatic Programmer. “If the tracers are hitting the target, then so are the regular bullets.”\n\nSimilarly, having end-to-end validation of the smaller slices of your project provides you feedback. You can use this feedback to determine whether you should continue further down the path you undertook, or abandon it to go down a different path. Having that feedback early and often is crucial for you to build something that has value. Otherwise it would be too late when you find out that the assumptions you made do not provide the value that you presumed at the outset. \n\n# ♻️ Rinse, repeat, iterate\n\nOnce you create this tight feedback loop, you create a flywheel that will take you in the direction you want to go, even if its not the one you anticipated at the start of your project. \n\n![](/static/images/cat-smile.webp)\n\n\nMaking bite-sized increments is a powerful approach to achieving goals and making progress . Other benefits are - \n- Reduced overwhelming feelings\n- Easier to identify and address problems\n- Increased chances of success\n- Improved productivity\n- More adaptable to changes and pivot as needed\n\nBy breaking down large, daunting tasks into smaller, more manageable pieces, it becomes easier to focus on the task at hand and make progress towards achieving the ultimate goal.\n\n---\n\n⭐ If you like this type of content, be sure to follow me or subscribe to https://a1engineering.beehiiv.com/subscribe! ⭐",
    "_id": "small-changes.mdx",
    "_raw": {
      "flattenedPath": "small-changes"
    },
    "body": {
      "raw": "One of the things I guide my teams on is how they tackle big unknown problems. Often when a big problem is encountered, it is riddled with several unknowns based on business context, technical solutions, human touch points and the list goes on and on.  It can be pretty overwhelming to figure out where to start and how to proceed. In such scenarios, I propose the following steps — \n\n- Pick a narrow slice \n- Keep things atomic\n- Run a tracer bullet end to end\n- Rinse, repeat, iterate\n\nLet’s look at these a bit more in details — \n\n# 🍕Pick a narrow slice\n\nLooking at a project in its entirety makes it hard to determine what parts are important and where to begin. Rather than taking a sequential approach to building the whole feature, think of how to build intermediate pieces. The outcome might not look anything like the end product, but will provide valuable feedback or learnings for you to keep building towards your eventual goal. \n\nTo demonstrate this, think of how you would build a car for the first time. A very complex and time consuming affair. Rather than starting by building a car, you can build it in multiple iterations. Each of these iterations provides you valuable lessons about the final way you need to build a car, but you learn it in steps. These include — \n\n|Goal|Action|\n|--|--|\n|Move from point A to point B|Build a skateboard to demonstrate usage of wheels|\n|Provide some form of controlled navigation|Build a scooter to demonstrate usage of steering|\n|Complex wheel system to travel|Build a bicycle to demonstrate usage of interconnected gear system|\n|Move without human effort involved|Build a motorbike to demonstrate usage of an engine|\n|Car that helps you achieve your goal|Build the car|\n\n![](/static/images/car-journey.png)\n\n# ⚛ Keep things atomic\n\nAs per the dictionary, the definition of Atomic is,\n\n> of or forming a single irreducible unit or component in a larger system.\n\nBy creating bite-sized chunks or small increments of the project you are trying to deliver, you achieve several benefits such as - \n\n- They are much easier to explain to someone else who wants to know how things work.\n- They are independently testable. You don’t have depend on other components to prove the viability of the piece you are trying to test.\n- You reduce uncertainty because small things are easy to deliver and build momentum you need towards progress.\n- You increase the amount of feedback you are receiving to determine the direction you want to go down.\n\n# 🎯 Run a tracer bullet end to end\n\nAs Pragmatic Programmer defines `Tracer bullets`\n\n> “Their phosphorus ignites and leaves a pyrotechnic trail from the gun to whatever they hit,” write authors David Thomas and Andrew Hunt in their book The Pragmatic Programmer. “If the tracers are hitting the target, then so are the regular bullets.”\n\nSimilarly, having end-to-end validation of the smaller slices of your project provides you feedback. You can use this feedback to determine whether you should continue further down the path you undertook, or abandon it to go down a different path. Having that feedback early and often is crucial for you to build something that has value. Otherwise it would be too late when you find out that the assumptions you made do not provide the value that you presumed at the outset. \n\n# ♻️ Rinse, repeat, iterate\n\nOnce you create this tight feedback loop, you create a flywheel that will take you in the direction you want to go, even if its not the one you anticipated at the start of your project. \n\n![](/static/images/cat-smile.webp)\n\n\nMaking bite-sized increments is a powerful approach to achieving goals and making progress . Other benefits are - \n- Reduced overwhelming feelings\n- Easier to identify and address problems\n- Increased chances of success\n- Improved productivity\n- More adaptable to changes and pivot as needed\n\nBy breaking down large, daunting tasks into smaller, more manageable pieces, it becomes easier to focus on the task at hand and make progress towards achieving the ultimate goal.\n\n---\n\n⭐ If you like this type of content, be sure to follow me or subscribe to https://a1engineering.beehiiv.com/subscribe! ⭐",
      "code": "One of the things I guide my teams on is how they tackle big unknown problems. Often when a big problem is encountered, it is riddled with several unknowns based on business context, technical solutions, human touch points and the list goes on and on.  It can be pretty overwhelming to figure out where to start and how to proceed. In such scenarios, I propose the following steps — \n\n- Pick a narrow slice \n- Keep things atomic\n- Run a tracer bullet end to end\n- Rinse, repeat, iterate\n\nLet’s look at these a bit more in details — \n\n# 🍕Pick a narrow slice\n\nLooking at a project in its entirety makes it hard to determine what parts are important and where to begin. Rather than taking a sequential approach to building the whole feature, think of how to build intermediate pieces. The outcome might not look anything like the end product, but will provide valuable feedback or learnings for you to keep building towards your eventual goal. \n\nTo demonstrate this, think of how you would build a car for the first time. A very complex and time consuming affair. Rather than starting by building a car, you can build it in multiple iterations. Each of these iterations provides you valuable lessons about the final way you need to build a car, but you learn it in steps. These include — \n\n|Goal|Action|\n|--|--|\n|Move from point A to point B|Build a skateboard to demonstrate usage of wheels|\n|Provide some form of controlled navigation|Build a scooter to demonstrate usage of steering|\n|Complex wheel system to travel|Build a bicycle to demonstrate usage of interconnected gear system|\n|Move without human effort involved|Build a motorbike to demonstrate usage of an engine|\n|Car that helps you achieve your goal|Build the car|\n\n![](/static/images/car-journey.png)\n\n# ⚛ Keep things atomic\n\nAs per the dictionary, the definition of Atomic is,\n\n> of or forming a single irreducible unit or component in a larger system.\n\nBy creating bite-sized chunks or small increments of the project you are trying to deliver, you achieve several benefits such as - \n\n- They are much easier to explain to someone else who wants to know how things work.\n- They are independently testable. You don’t have depend on other components to prove the viability of the piece you are trying to test.\n- You reduce uncertainty because small things are easy to deliver and build momentum you need towards progress.\n- You increase the amount of feedback you are receiving to determine the direction you want to go down.\n\n# 🎯 Run a tracer bullet end to end\n\nAs Pragmatic Programmer defines `Tracer bullets`\n\n> “Their phosphorus ignites and leaves a pyrotechnic trail from the gun to whatever they hit,” write authors David Thomas and Andrew Hunt in their book The Pragmatic Programmer. “If the tracers are hitting the target, then so are the regular bullets.”\n\nSimilarly, having end-to-end validation of the smaller slices of your project provides you feedback. You can use this feedback to determine whether you should continue further down the path you undertook, or abandon it to go down a different path. Having that feedback early and often is crucial for you to build something that has value. Otherwise it would be too late when you find out that the assumptions you made do not provide the value that you presumed at the outset. \n\n# ♻️ Rinse, repeat, iterate\n\nOnce you create this tight feedback loop, you create a flywheel that will take you in the direction you want to go, even if its not the one you anticipated at the start of your project. \n\n![](/static/images/cat-smile.webp)\n\n\nMaking bite-sized increments is a powerful approach to achieving goals and making progress . Other benefits are - \n- Reduced overwhelming feelings\n- Easier to identify and address problems\n- Increased chances of success\n- Improved productivity\n- More adaptable to changes and pivot as needed\n\nBy breaking down large, daunting tasks into smaller, more manageable pieces, it becomes easier to focus on the task at hand and make progress towards achieving the ultimate goal.\n\n---\n\n⭐ If you like this type of content, be sure to follow me or subscribe to https://a1engineering.beehiiv.com/subscribe! ⭐"
    },
    "slug": "small-changes",
    "path": "posts/small-changes",
    "filePath": "small-changes.mdx",
    "toc": [],
    "readingTime": {
      "text": "4 min read",
      "minutes": 3.46,
      "time": 207600,
      "words": 692
    },
    "structuredData": {
      "@context": "https://schema.org",
      "@type": "BlogPosting",
      "headline": "From a snowball to an avalanche: The power of small changes ",
      "datePublished": "2024-03-06T00:00:00.000Z",
      "dateModified": "2024-03-06T00:00:00.000Z",
      "description": "How to build momentum in bite-sized increments",
      "image": "/static/images/momentum.jpeg",
      "url": "https://arjunrao.co/posts/small-changes"
    }
  },
  {
    "title": "Smart Plugs, Dumb Humans",
    "date": "2024-02-18T00:00:00.000Z",
    "tags": [
      "technology"
    ],
    "lastmod": undefined,
    "draft": false,
    "summary": "Smart plugs and their use of wifi networks",
    "images": undefined,
    "authors": undefined,
    "layout": undefined,
    "bibliography": undefined,
    "canonicalUrl": undefined,
    "content": "![](/static/images/smartplug.webp)\n\nI recently purchased a few smart switches/plugs to automate the operation of some of my devices based on schedules. Admittedly, my motivation stems from laziness—avoiding the hassle of turning lights on and off at consistent times each day.\n\nUnfortunately, I wasn't smart enough to actually install it just yet. Once the smart plugs arrived, I noticed that they only connect to 2.4 GHz networks. Now I was fairly sure my router did not support that, and on double checking I noticed Spectrum's leased router, does in fact, no longer support broadcasting multiple networks for the 2 different bands, the other being the default 5 GHz band. FWIW, these two bands are the two areas of the frequency spectrum licensed for open broadcast, in that anyone with a router can broadcast their Wi-Fi signal without impendence or interfering with other broadcasts.\n\nSmart plugs use 2.4 GHz because 1) they don't have high bandwidth requirements (its just a plug that requires low fidelity signals like \"on/off\") 2) for bigger houses which might have smart plugs all over the place, having a longer range 2.4 GHz signal is far more useful.\n\nUnless I bought a new router, I wouldn't be able to use the smart plugs. Regardless, that got me to dust off some of my Wireless communications learnings from way back when to really understand the difference between these 2 bands.\n\n- ✅ : Performs better\n- ❌ : Performs worse\n\n| Feature                                    | 2.4 GHz | 5 GHz |\n| ------------------------------------------ | ------- | ----- |\n| 📶 Range                                   | ✅      | ❌    |\n| 💨 Speed                                   | ❌      | ✅    |\n| 🏔 Affected by obstructions                | ❌      | ✅    |\n| 💥 Affected by interference                | ✅      | ❌    |\n| 📱 Connected devices(number of \"channels\") | ❌      | ✅    |\n\nAs mentioned [here](https://networkshardware.com/2-4ghz-vs-5ghz/), the easy way to remember this is\n\n> If the highest speed possible is what you are looking for when it comes to daily frequency and Wi-Fi transmission use, 5GHz is the best choice. However, if you want to be able to take your laptop out to the edge of your backyard and work there without being disturbed, the long-distance reach of 2.4GHz will suit your needs.\n\nWhile all of this is happening, we are starting to see some new 6 GHz routers hit the market. 6 GHz has about the same max speed as 5 GHz but has a far more different \"channel\" topography compared to 5 GHz which means more devices can connect to the network with lesser congestion. Meanwhile, the IEEE expects to finalize Wi-Fi 7 specifications in early 2024, which will further expand Wi-Fi channel size (up to 320MHz per channel) to increase throughput and decrease interference. Early Wi-Fi 7 specification documents also point to a maximum data transfer rate somewhere between 40Gbps and 46Gbps, up from Wi-Fi 6's 9.6Gbps. Its a brave new world.",
    "_id": "smart-plugs.mdx",
    "_raw": {
      "flattenedPath": "smart-plugs"
    },
    "body": {
      "raw": "![](/static/images/smartplug.webp)\n\nI recently purchased a few smart switches/plugs to automate the operation of some of my devices based on schedules. Admittedly, my motivation stems from laziness—avoiding the hassle of turning lights on and off at consistent times each day.\n\nUnfortunately, I wasn't smart enough to actually install it just yet. Once the smart plugs arrived, I noticed that they only connect to 2.4 GHz networks. Now I was fairly sure my router did not support that, and on double checking I noticed Spectrum's leased router, does in fact, no longer support broadcasting multiple networks for the 2 different bands, the other being the default 5 GHz band. FWIW, these two bands are the two areas of the frequency spectrum licensed for open broadcast, in that anyone with a router can broadcast their Wi-Fi signal without impendence or interfering with other broadcasts.\n\nSmart plugs use 2.4 GHz because 1) they don't have high bandwidth requirements (its just a plug that requires low fidelity signals like \"on/off\") 2) for bigger houses which might have smart plugs all over the place, having a longer range 2.4 GHz signal is far more useful.\n\nUnless I bought a new router, I wouldn't be able to use the smart plugs. Regardless, that got me to dust off some of my Wireless communications learnings from way back when to really understand the difference between these 2 bands.\n\n- ✅ : Performs better\n- ❌ : Performs worse\n\n| Feature                                    | 2.4 GHz | 5 GHz |\n| ------------------------------------------ | ------- | ----- |\n| 📶 Range                                   | ✅      | ❌    |\n| 💨 Speed                                   | ❌      | ✅    |\n| 🏔 Affected by obstructions                | ❌      | ✅    |\n| 💥 Affected by interference                | ✅      | ❌    |\n| 📱 Connected devices(number of \"channels\") | ❌      | ✅    |\n\nAs mentioned [here](https://networkshardware.com/2-4ghz-vs-5ghz/), the easy way to remember this is\n\n> If the highest speed possible is what you are looking for when it comes to daily frequency and Wi-Fi transmission use, 5GHz is the best choice. However, if you want to be able to take your laptop out to the edge of your backyard and work there without being disturbed, the long-distance reach of 2.4GHz will suit your needs.\n\nWhile all of this is happening, we are starting to see some new 6 GHz routers hit the market. 6 GHz has about the same max speed as 5 GHz but has a far more different \"channel\" topography compared to 5 GHz which means more devices can connect to the network with lesser congestion. Meanwhile, the IEEE expects to finalize Wi-Fi 7 specifications in early 2024, which will further expand Wi-Fi channel size (up to 320MHz per channel) to increase throughput and decrease interference. Early Wi-Fi 7 specification documents also point to a maximum data transfer rate somewhere between 40Gbps and 46Gbps, up from Wi-Fi 6's 9.6Gbps. Its a brave new world.",
      "code": "![](/static/images/smartplug.webp)\n\nI recently purchased a few smart switches/plugs to automate the operation of some of my devices based on schedules. Admittedly, my motivation stems from laziness—avoiding the hassle of turning lights on and off at consistent times each day.\n\nUnfortunately, I wasn't smart enough to actually install it just yet. Once the smart plugs arrived, I noticed that they only connect to 2.4 GHz networks. Now I was fairly sure my router did not support that, and on double checking I noticed Spectrum's leased router, does in fact, no longer support broadcasting multiple networks for the 2 different bands, the other being the default 5 GHz band. FWIW, these two bands are the two areas of the frequency spectrum licensed for open broadcast, in that anyone with a router can broadcast their Wi-Fi signal without impendence or interfering with other broadcasts.\n\nSmart plugs use 2.4 GHz because 1) they don't have high bandwidth requirements (its just a plug that requires low fidelity signals like \"on/off\") 2) for bigger houses which might have smart plugs all over the place, having a longer range 2.4 GHz signal is far more useful.\n\nUnless I bought a new router, I wouldn't be able to use the smart plugs. Regardless, that got me to dust off some of my Wireless communications learnings from way back when to really understand the difference between these 2 bands.\n\n- ✅ : Performs better\n- ❌ : Performs worse\n\n| Feature                                    | 2.4 GHz | 5 GHz |\n| ------------------------------------------ | ------- | ----- |\n| 📶 Range                                   | ✅      | ❌    |\n| 💨 Speed                                   | ❌      | ✅    |\n| 🏔 Affected by obstructions                | ❌      | ✅    |\n| 💥 Affected by interference                | ✅      | ❌    |\n| 📱 Connected devices(number of \"channels\") | ❌      | ✅    |\n\nAs mentioned [here](https://networkshardware.com/2-4ghz-vs-5ghz/), the easy way to remember this is\n\n> If the highest speed possible is what you are looking for when it comes to daily frequency and Wi-Fi transmission use, 5GHz is the best choice. However, if you want to be able to take your laptop out to the edge of your backyard and work there without being disturbed, the long-distance reach of 2.4GHz will suit your needs.\n\nWhile all of this is happening, we are starting to see some new 6 GHz routers hit the market. 6 GHz has about the same max speed as 5 GHz but has a far more different \"channel\" topography compared to 5 GHz which means more devices can connect to the network with lesser congestion. Meanwhile, the IEEE expects to finalize Wi-Fi 7 specifications in early 2024, which will further expand Wi-Fi channel size (up to 320MHz per channel) to increase throughput and decrease interference. Early Wi-Fi 7 specification documents also point to a maximum data transfer rate somewhere between 40Gbps and 46Gbps, up from Wi-Fi 6's 9.6Gbps. Its a brave new world."
    },
    "slug": "smart-plugs",
    "path": "posts/smart-plugs",
    "filePath": "smart-plugs.mdx",
    "toc": [],
    "readingTime": {
      "text": "3 min read",
      "minutes": 2.425,
      "time": 145500,
      "words": 485
    },
    "structuredData": {
      "@context": "https://schema.org",
      "@type": "BlogPosting",
      "headline": "Smart Plugs, Dumb Humans",
      "datePublished": "2024-02-18T00:00:00.000Z",
      "dateModified": "2024-02-18T00:00:00.000Z",
      "description": "Smart plugs and their use of wifi networks",
      "image": "/static/images/twitter-card.png",
      "url": "https://arjunrao.co/posts/smart-plugs"
    }
  },
  {
    "title": "Snacking: Navigating the Temptations of Instant Gratification",
    "date": "2024-04-10T00:00:00.000Z",
    "tags": [
      "growth",
      "productivity",
      "leadership"
    ],
    "lastmod": undefined,
    "draft": false,
    "summary": "Move the needle by focusing on the big tasks",
    "images": [
      "/static/images/snacks.jpg"
    ],
    "authors": undefined,
    "layout": undefined,
    "bibliography": undefined,
    "canonicalUrl": undefined,
    "content": "Who doesn’t love snacking? Snacks are the best. The perfect mid-meal respite from hunger. They could be sweet, sour, savory, cold, hot, crispy but regardless they always hit the spot. They give you that burst of energy that you need in the moment. \n\n\nBut then these damn doctors tell you snacking isn’t good for you! All about moderation, eating whole foods, your meals on time, blahdy blah. Sigh, unfortunately they are right. And we know that. \n\nMuch like our culinary intake, this lesson is also important for our professional lives. Will Larson talks about this concept of “Snacking” writ large in his book [Staff Engineer: Leadership beyond the Management track](https://staffeng.com/book). \n\nThe more senior you get in your career, the more you are suited to solve for specific problems within your company. Regardless of what the actual task is, the reality is that your responsibilities tilt in the direction of what you uniquely bring to the table. In the case of managers, it could be people development goals, or cross-functional alignment that is crucial for the success of the business. In the case of senior individual contributors, it could be mentoring, high level architectural or system design goals. \n\nThere are 2 antithetical forces that are at play here — \n\n1. The more senior you get, the feedback loops of your actions get longer. What that generally translates to is that they are the most important things you should do, but then they also take the most time to observe results. \n1. On the other hand, humans love instant gratification. Getting immediate positive feedback for the tasks you perform is only human nature. \n\nThis is where snacking comes in. Its those small tasks that seem oh-so-tempting, that you totally “shouldn’t” be doing but when you do it, it feels so good in the moment. \n\nFor senior individual contributors, it could be building that small feature that you have been thinking about for months but haven’t convinced anyone to do. Or it could be fixing that bug that has been lingering in the system. \n\nFor senior managers, it could be donning the hat of an individual contributor or taking on a task that you had delegated to your direct report. \n\nCompletion of any of these feels like a different time continuum compared to the day-to-day red tape you might encounter. However, just like food, snack on these smaller items in moderation.\n\n![](/static/images/snack.jpg)\n\nIf you are doing it often, it typically indicates three problems — \n\n- No one is doing the work you are exclusively capable of doing\n- You are probably stealing a learning opportunity from someone junior who could rise to the occasion \n- You will likely not do as great a job as someone whose focus is exclusively “that”. Inadvertently you might mess something up that needs to be cleaned up by someone else \n\nThis is a hard reality. No one wants to be told _not_ to do something but the fact of the matter is that your core focus should be on working on things that help move the needle for you and the team. If you don’t do it, no one will. If you feel like snacking, be self-aware of what you are doing. Timebox or restrict the activity, so you aren’t doing a disservice to yourself and the team. \n\n---\n\nThat’s a wrap. Thanks for reading!",
    "_id": "snacking.mdx",
    "_raw": {
      "flattenedPath": "snacking"
    },
    "body": {
      "raw": "Who doesn’t love snacking? Snacks are the best. The perfect mid-meal respite from hunger. They could be sweet, sour, savory, cold, hot, crispy but regardless they always hit the spot. They give you that burst of energy that you need in the moment. \n\n\nBut then these damn doctors tell you snacking isn’t good for you! All about moderation, eating whole foods, your meals on time, blahdy blah. Sigh, unfortunately they are right. And we know that. \n\nMuch like our culinary intake, this lesson is also important for our professional lives. Will Larson talks about this concept of “Snacking” writ large in his book [Staff Engineer: Leadership beyond the Management track](https://staffeng.com/book). \n\nThe more senior you get in your career, the more you are suited to solve for specific problems within your company. Regardless of what the actual task is, the reality is that your responsibilities tilt in the direction of what you uniquely bring to the table. In the case of managers, it could be people development goals, or cross-functional alignment that is crucial for the success of the business. In the case of senior individual contributors, it could be mentoring, high level architectural or system design goals. \n\nThere are 2 antithetical forces that are at play here — \n\n1. The more senior you get, the feedback loops of your actions get longer. What that generally translates to is that they are the most important things you should do, but then they also take the most time to observe results. \n1. On the other hand, humans love instant gratification. Getting immediate positive feedback for the tasks you perform is only human nature. \n\nThis is where snacking comes in. Its those small tasks that seem oh-so-tempting, that you totally “shouldn’t” be doing but when you do it, it feels so good in the moment. \n\nFor senior individual contributors, it could be building that small feature that you have been thinking about for months but haven’t convinced anyone to do. Or it could be fixing that bug that has been lingering in the system. \n\nFor senior managers, it could be donning the hat of an individual contributor or taking on a task that you had delegated to your direct report. \n\nCompletion of any of these feels like a different time continuum compared to the day-to-day red tape you might encounter. However, just like food, snack on these smaller items in moderation.\n\n![](/static/images/snack.jpg)\n\nIf you are doing it often, it typically indicates three problems — \n\n- No one is doing the work you are exclusively capable of doing\n- You are probably stealing a learning opportunity from someone junior who could rise to the occasion \n- You will likely not do as great a job as someone whose focus is exclusively “that”. Inadvertently you might mess something up that needs to be cleaned up by someone else \n\nThis is a hard reality. No one wants to be told _not_ to do something but the fact of the matter is that your core focus should be on working on things that help move the needle for you and the team. If you don’t do it, no one will. If you feel like snacking, be self-aware of what you are doing. Timebox or restrict the activity, so you aren’t doing a disservice to yourself and the team. \n\n---\n\nThat’s a wrap. Thanks for reading!",
      "code": "Who doesn’t love snacking? Snacks are the best. The perfect mid-meal respite from hunger. They could be sweet, sour, savory, cold, hot, crispy but regardless they always hit the spot. They give you that burst of energy that you need in the moment. \n\n\nBut then these damn doctors tell you snacking isn’t good for you! All about moderation, eating whole foods, your meals on time, blahdy blah. Sigh, unfortunately they are right. And we know that. \n\nMuch like our culinary intake, this lesson is also important for our professional lives. Will Larson talks about this concept of “Snacking” writ large in his book [Staff Engineer: Leadership beyond the Management track](https://staffeng.com/book). \n\nThe more senior you get in your career, the more you are suited to solve for specific problems within your company. Regardless of what the actual task is, the reality is that your responsibilities tilt in the direction of what you uniquely bring to the table. In the case of managers, it could be people development goals, or cross-functional alignment that is crucial for the success of the business. In the case of senior individual contributors, it could be mentoring, high level architectural or system design goals. \n\nThere are 2 antithetical forces that are at play here — \n\n1. The more senior you get, the feedback loops of your actions get longer. What that generally translates to is that they are the most important things you should do, but then they also take the most time to observe results. \n1. On the other hand, humans love instant gratification. Getting immediate positive feedback for the tasks you perform is only human nature. \n\nThis is where snacking comes in. Its those small tasks that seem oh-so-tempting, that you totally “shouldn’t” be doing but when you do it, it feels so good in the moment. \n\nFor senior individual contributors, it could be building that small feature that you have been thinking about for months but haven’t convinced anyone to do. Or it could be fixing that bug that has been lingering in the system. \n\nFor senior managers, it could be donning the hat of an individual contributor or taking on a task that you had delegated to your direct report. \n\nCompletion of any of these feels like a different time continuum compared to the day-to-day red tape you might encounter. However, just like food, snack on these smaller items in moderation.\n\n![](/static/images/snack.jpg)\n\nIf you are doing it often, it typically indicates three problems — \n\n- No one is doing the work you are exclusively capable of doing\n- You are probably stealing a learning opportunity from someone junior who could rise to the occasion \n- You will likely not do as great a job as someone whose focus is exclusively “that”. Inadvertently you might mess something up that needs to be cleaned up by someone else \n\nThis is a hard reality. No one wants to be told _not_ to do something but the fact of the matter is that your core focus should be on working on things that help move the needle for you and the team. If you don’t do it, no one will. If you feel like snacking, be self-aware of what you are doing. Timebox or restrict the activity, so you aren’t doing a disservice to yourself and the team. \n\n---\n\nThat’s a wrap. Thanks for reading!"
    },
    "slug": "snacking",
    "path": "posts/snacking",
    "filePath": "snacking.mdx",
    "toc": [],
    "readingTime": {
      "text": "3 min read",
      "minutes": 2.78,
      "time": 166800,
      "words": 556
    },
    "structuredData": {
      "@context": "https://schema.org",
      "@type": "BlogPosting",
      "headline": "Snacking: Navigating the Temptations of Instant Gratification",
      "datePublished": "2024-04-10T00:00:00.000Z",
      "dateModified": "2024-04-10T00:00:00.000Z",
      "description": "Move the needle by focusing on the big tasks",
      "image": "/static/images/snacks.jpg",
      "url": "https://arjunrao.co/posts/snacking"
    }
  },
  {
    "title": "Six things that Sober October taught me",
    "date": "2018-11-09T00:00:00.000Z",
    "tags": [
      "growth"
    ],
    "lastmod": undefined,
    "draft": false,
    "summary": "Lessons learned from a month of challenging myself to sober",
    "images": undefined,
    "authors": undefined,
    "layout": undefined,
    "bibliography": undefined,
    "canonicalUrl": undefined,
    "content": "> To enjoy good health, to bring true happiness to one's family, to bring peace to all, one must first discipline and control one's own mind. If a man can control his mind he can find the way to Enlightenment, and all wisdom and virtue will naturally come to him. - Buddha\n\nCall it complacence, lethargy or just letting myself go, but one day in September, I woke up and weighed myself on the scale and saw the digits keep increasing 0>>>50>>>100>>>150>>>170>>> 185 lbs! And I freaked out. Now to give you some perspective, if you would have met me in the winter of 2013, you would have seen me as a mid-20s, 154 lbs, skinny Indian guy. In the past I have always been able to, with seeming \"ease\", lose weight at will and do so quickly. However, since I turned 30, I have found out that isn't so easy anymore. Any half cocked attempted would flail due to lack of a seeming purpose. This might be a psychological falsehood that I repeated to myself but it manifested itself as an undeniable truth.\n\nCutting back to the purpose of this article, come mid-September 2018, I was thinking about how I should use the month of October to lose weight and settle back into a healthier diet. This nicely coincided with something I heard on Joe Rogan's podcast, where he was embarking on a \"Sober October\" with his friends to take on a month of sobriety along with intense workouts.\n\nAfter listening to that podcast, I was inspired to fashion a \"Sober October\" of my own kind. As a part of this experience, I learned the following aphorisms that have farther reaching consequences that what I got myself into during the October of 2018.\n\n{/* <TOCInline toc={props.toc} /> */}\n\n## 1. Figure out what is important to you\n\nThe first step of any expedition or adventure has to be to figure out what it is that you are trying to accomplish. You don't necessarily need to have a detailed map of how you will achieve whatever it is, but you need to know what \"it\" is. Trying to understand the direction in which you want to move towards, is the single most important step you can take and will help you make subsequent decisions more easily.\nFor me, it was losing weight and getting healthier by the end of the month. It could just as easily extend to any goal you want to accomplish, be it related to sports, writing, career or whatever it is that you want to achieve. Different people are driven by different motivations. For me, mental and physical health are at the apex of the pyramid. As they say on aircraft announcements, first take care of yourself before you help others. While on the surface it might seem like a selfish thing to say or do, if you are at the peak of your performance capabilities, you are likely to be so much more useful to your family and friends and people around you, in any situation.\n\n## 2. Have concrete goals\n\nWhen we are kids and go through the rigors of education and school, the pattern of progress seems to be neatly laid out in front of us with no effort required on our part ( mostly ), other than execution of the tasks. Intermediate milestones are well defined with totems such as grades, exams and level-ups already setup, in the form of class upgrades. That positive reinforcement in the form of frequent advances - moving higher up from class to class, is something we take for granted as kids and young adults. However, once we cross that barrier and step into adulthood, we seemingly lose the ability to set concrete goals. Sure, we have things such as pay increases or promotions at work, but not a lot of it is set in stone or truly dictated by us.\nThe same is 100% true for personal goals and achievements. When it comes to things like career and personal excellence, as adults we are more likely to \"wing it\" than have an actual plan about where it is we want to head over the next few years. Everyone knows the classic interview question \"Where do you see yourself 5 or 10 years from now?\" but not a lot of people know the answer to that for themselves. Sure, you might say \"Arjun, you have no idea what you are talking about. I know exactly what I need to do\" to which I will say \"Good for you!\". I am certainly not trying to say this is applicable to everyone, but it is something I am most certainly guilty of.\nCircling back to the relevance of this point, to give some \"Sober October\" context, once I had decided the direction I wanted to head in, my concrete goal was to lose 15 lbs in the month of October. I said to myself that I wanted to be 170lbs by the time November rolled around and set myself a clear and easily measurable goal.\n\n## 3. Be realistic and keep it simple\n\nWhen you set out on a self-dictated regimen to complete a task, sometimes it is unclear as to how to execute the minute subtasks. The big picture may be clear in your head, but the day-to-day execution could be obfuscated. Whenever I am faced with such a conundrum, I tend to fall back on Occam's Razor. Occam's razor is the problem-solving principle that the simplest solution tends to be the correct one. We tend to conflate numerous solutions together and rack up an increasingly difficult path to achieve that solution. Instead, sometimes just keeping it simple might be the easiest path forward.\nAs an example, when faced with the problem of getting back on to a healthier diet, there were a bajillion diets to pick from. There was paleo, keto, vegan, Atkins, south beach, raw, fruitarian…. and the list goes on and on. To me this was mind boggling and I was very confused what route would be the best for me. I decided to settle on the First Principle of a healthy diet in this regard, which is pithy enough to sound sarcastic, but I truly mean it - \"Eat less and workout more\". Now, this is of course not possible for everyone and each person has to pick a road which is the best from the assortment of options available to them, but for me, I thought this was the best way ahead. So I grabbed the bull by the horns and decided to undertake a sub-1500 calorie diet with all the necessary nutrition. What this entailed is a diet where I did calorie counting with a close eye on the macros associated with the food. Essentially, I switched to a low carb-high protein diet, and got rid of all unnecessary carbs and starches such as rice, bread, pasta and all those other delicious food groups. As evidenced by the \"Sober\" in Sober October, alcohol consumption was of course another casualty of the diet. As a companion to the healthier way of eating, I also did High Interval Intensity Training (HIIT), at least three times a week. I believed that all of these different facets of tackling the problem would give me a good shot at achieving my goal. Some back of the envelope math seemed to support my hypothesis, so I forged ahead.\n\n## 4. Sometimes not knowing everything is good\n\nThis point somewhat contradicts my previous dialog, but only ever so slightly. It is one of those things that I have started valuing a whole lot more in the past few months. Since I have been reciting some self-evident truths throughout this piece, here goes another - \"Ignorance is bliss\". There are two aspects to this. On the one hand, these days we are obsessed with knowing everything about everything. We have to have the latest news, gossip, podcasts, photos at the tips of our fingers, for the fear of missing out on a conversation/experience or appearing to be an ignoramus in front of someone else. On the other hand, as we progress through life and accumulating all that knowledge, we become increasingly risk averse and hesitant to take on new adventures with the innocence of youth. Whereas, if I was younger I would be more open to the option of failure, now I am far more cynical about the payoff of a particular venture.\nHowever, sometimes you just have to take a leap of faith and believe in yourself and your ability to achieve something. Before I decided I want to lose 15 lbs during the month, I had zero benchmarks to compare against. I thought it was perfectly reasonable lose that amount of weight because I just did not know any better. It was only two weeks into October that I read somewhere that for my body type and weight, losing somewhere around 1.5–2 lbs per week was what was a reasonable expectation. If that was something I had read before I set off on Sober October, I would have cut down my end goals by almost half to keep in line with what was someone else's reasonable expectation. I am so glad I did not. Since I was already midway into Sober October I decided to march on, and just put in the work I had already decided to invest and see where the currents lead me.\n\n## 5. The power of No\n\nOne of the tougher challenges during this month, was giving up on all those things that had become a part of my lifestyle. This included indulging in some of my favorite foods or being a part of social experiences that involve some degree of alcohol consumption. The most important aspect of executing tasks in sight of your goal is your ability to say no to things that do not directly contribute towards it. Saying no is tough. Saying yes often is the path of least resistance. Saying no makes you feel queasy and uncomfortable. Sometimes, you might feel like you are walking on a lonely road, but if the objective is important to you, you must persevere. It is of course, entirely left to your prudence as to what should be said no to, but making the right judgement calls about what constitutes a no v/s a yes is what can differentiate between the success and failure of an outcome. There were plenty of things I turned down during the course of the month such as social events or eating lunch/dinner outside because it would mean that I did not know what exactly went into my food. Given that I was calorie counting, that was not an optimal outcome. However, I did make sure that I gave attention to my friends by being part of some outings but not partaking in any food or drinks, as that would be a balance of both worlds. The human brain can be extraordinarily powerful when it sets it's sights on something.\n\n## 6. Build, Measure and Learn\n\nOne of the best ways to achieve a goal is to be able to set a measurable goal and do consistent check-ins in order to determine if you or your process needs to be self-calibrated in order to achieve it. I was using My Fitness Plan to track all my caloric intake and for recording my workout sessions. Seeing a visualization of my food intake as well as the progress of my gains, was a great booster, propelling me forward towards completion. In my opinion, it is so much more powerful to be able to visualize mentally as well as graphically where it is you are trying to get to with your goals. Build, Measure, Learn is a philosophy born out of the Lean Startup Methodology school of thought, propounded by Eric Ries and is something that actually cuts through disciplines and lifestyles.\n\n## Wrapping up\n\nI successfully stuck to my guns until the end of the month, at which point, I stepped on a weighing scale and saw myself clock in at 170.2 lbs! Not quite the 170 lbs I had hoped to achieve but darn near close. Instead of beating myself about the minutiae of failure, I took it as a net positive with respect to the attitude that the month of October imbued in me. In any case, as time bore on, it was less about the actual number than it was about the holistic discipline that was being inculcated. I look forward to continuing this as a sustainable lifestyle going forward and applying these principles learned, in the rest of my endeavors.",
    "_id": "sober-october.mdx",
    "_raw": {
      "flattenedPath": "sober-october"
    },
    "body": {
      "raw": "> To enjoy good health, to bring true happiness to one's family, to bring peace to all, one must first discipline and control one's own mind. If a man can control his mind he can find the way to Enlightenment, and all wisdom and virtue will naturally come to him. - Buddha\n\nCall it complacence, lethargy or just letting myself go, but one day in September, I woke up and weighed myself on the scale and saw the digits keep increasing 0>>>50>>>100>>>150>>>170>>> 185 lbs! And I freaked out. Now to give you some perspective, if you would have met me in the winter of 2013, you would have seen me as a mid-20s, 154 lbs, skinny Indian guy. In the past I have always been able to, with seeming \"ease\", lose weight at will and do so quickly. However, since I turned 30, I have found out that isn't so easy anymore. Any half cocked attempted would flail due to lack of a seeming purpose. This might be a psychological falsehood that I repeated to myself but it manifested itself as an undeniable truth.\n\nCutting back to the purpose of this article, come mid-September 2018, I was thinking about how I should use the month of October to lose weight and settle back into a healthier diet. This nicely coincided with something I heard on Joe Rogan's podcast, where he was embarking on a \"Sober October\" with his friends to take on a month of sobriety along with intense workouts.\n\nAfter listening to that podcast, I was inspired to fashion a \"Sober October\" of my own kind. As a part of this experience, I learned the following aphorisms that have farther reaching consequences that what I got myself into during the October of 2018.\n\n{/* <TOCInline toc={props.toc} /> */}\n\n## 1. Figure out what is important to you\n\nThe first step of any expedition or adventure has to be to figure out what it is that you are trying to accomplish. You don't necessarily need to have a detailed map of how you will achieve whatever it is, but you need to know what \"it\" is. Trying to understand the direction in which you want to move towards, is the single most important step you can take and will help you make subsequent decisions more easily.\nFor me, it was losing weight and getting healthier by the end of the month. It could just as easily extend to any goal you want to accomplish, be it related to sports, writing, career or whatever it is that you want to achieve. Different people are driven by different motivations. For me, mental and physical health are at the apex of the pyramid. As they say on aircraft announcements, first take care of yourself before you help others. While on the surface it might seem like a selfish thing to say or do, if you are at the peak of your performance capabilities, you are likely to be so much more useful to your family and friends and people around you, in any situation.\n\n## 2. Have concrete goals\n\nWhen we are kids and go through the rigors of education and school, the pattern of progress seems to be neatly laid out in front of us with no effort required on our part ( mostly ), other than execution of the tasks. Intermediate milestones are well defined with totems such as grades, exams and level-ups already setup, in the form of class upgrades. That positive reinforcement in the form of frequent advances - moving higher up from class to class, is something we take for granted as kids and young adults. However, once we cross that barrier and step into adulthood, we seemingly lose the ability to set concrete goals. Sure, we have things such as pay increases or promotions at work, but not a lot of it is set in stone or truly dictated by us.\nThe same is 100% true for personal goals and achievements. When it comes to things like career and personal excellence, as adults we are more likely to \"wing it\" than have an actual plan about where it is we want to head over the next few years. Everyone knows the classic interview question \"Where do you see yourself 5 or 10 years from now?\" but not a lot of people know the answer to that for themselves. Sure, you might say \"Arjun, you have no idea what you are talking about. I know exactly what I need to do\" to which I will say \"Good for you!\". I am certainly not trying to say this is applicable to everyone, but it is something I am most certainly guilty of.\nCircling back to the relevance of this point, to give some \"Sober October\" context, once I had decided the direction I wanted to head in, my concrete goal was to lose 15 lbs in the month of October. I said to myself that I wanted to be 170lbs by the time November rolled around and set myself a clear and easily measurable goal.\n\n## 3. Be realistic and keep it simple\n\nWhen you set out on a self-dictated regimen to complete a task, sometimes it is unclear as to how to execute the minute subtasks. The big picture may be clear in your head, but the day-to-day execution could be obfuscated. Whenever I am faced with such a conundrum, I tend to fall back on Occam's Razor. Occam's razor is the problem-solving principle that the simplest solution tends to be the correct one. We tend to conflate numerous solutions together and rack up an increasingly difficult path to achieve that solution. Instead, sometimes just keeping it simple might be the easiest path forward.\nAs an example, when faced with the problem of getting back on to a healthier diet, there were a bajillion diets to pick from. There was paleo, keto, vegan, Atkins, south beach, raw, fruitarian…. and the list goes on and on. To me this was mind boggling and I was very confused what route would be the best for me. I decided to settle on the First Principle of a healthy diet in this regard, which is pithy enough to sound sarcastic, but I truly mean it - \"Eat less and workout more\". Now, this is of course not possible for everyone and each person has to pick a road which is the best from the assortment of options available to them, but for me, I thought this was the best way ahead. So I grabbed the bull by the horns and decided to undertake a sub-1500 calorie diet with all the necessary nutrition. What this entailed is a diet where I did calorie counting with a close eye on the macros associated with the food. Essentially, I switched to a low carb-high protein diet, and got rid of all unnecessary carbs and starches such as rice, bread, pasta and all those other delicious food groups. As evidenced by the \"Sober\" in Sober October, alcohol consumption was of course another casualty of the diet. As a companion to the healthier way of eating, I also did High Interval Intensity Training (HIIT), at least three times a week. I believed that all of these different facets of tackling the problem would give me a good shot at achieving my goal. Some back of the envelope math seemed to support my hypothesis, so I forged ahead.\n\n## 4. Sometimes not knowing everything is good\n\nThis point somewhat contradicts my previous dialog, but only ever so slightly. It is one of those things that I have started valuing a whole lot more in the past few months. Since I have been reciting some self-evident truths throughout this piece, here goes another - \"Ignorance is bliss\". There are two aspects to this. On the one hand, these days we are obsessed with knowing everything about everything. We have to have the latest news, gossip, podcasts, photos at the tips of our fingers, for the fear of missing out on a conversation/experience or appearing to be an ignoramus in front of someone else. On the other hand, as we progress through life and accumulating all that knowledge, we become increasingly risk averse and hesitant to take on new adventures with the innocence of youth. Whereas, if I was younger I would be more open to the option of failure, now I am far more cynical about the payoff of a particular venture.\nHowever, sometimes you just have to take a leap of faith and believe in yourself and your ability to achieve something. Before I decided I want to lose 15 lbs during the month, I had zero benchmarks to compare against. I thought it was perfectly reasonable lose that amount of weight because I just did not know any better. It was only two weeks into October that I read somewhere that for my body type and weight, losing somewhere around 1.5–2 lbs per week was what was a reasonable expectation. If that was something I had read before I set off on Sober October, I would have cut down my end goals by almost half to keep in line with what was someone else's reasonable expectation. I am so glad I did not. Since I was already midway into Sober October I decided to march on, and just put in the work I had already decided to invest and see where the currents lead me.\n\n## 5. The power of No\n\nOne of the tougher challenges during this month, was giving up on all those things that had become a part of my lifestyle. This included indulging in some of my favorite foods or being a part of social experiences that involve some degree of alcohol consumption. The most important aspect of executing tasks in sight of your goal is your ability to say no to things that do not directly contribute towards it. Saying no is tough. Saying yes often is the path of least resistance. Saying no makes you feel queasy and uncomfortable. Sometimes, you might feel like you are walking on a lonely road, but if the objective is important to you, you must persevere. It is of course, entirely left to your prudence as to what should be said no to, but making the right judgement calls about what constitutes a no v/s a yes is what can differentiate between the success and failure of an outcome. There were plenty of things I turned down during the course of the month such as social events or eating lunch/dinner outside because it would mean that I did not know what exactly went into my food. Given that I was calorie counting, that was not an optimal outcome. However, I did make sure that I gave attention to my friends by being part of some outings but not partaking in any food or drinks, as that would be a balance of both worlds. The human brain can be extraordinarily powerful when it sets it's sights on something.\n\n## 6. Build, Measure and Learn\n\nOne of the best ways to achieve a goal is to be able to set a measurable goal and do consistent check-ins in order to determine if you or your process needs to be self-calibrated in order to achieve it. I was using My Fitness Plan to track all my caloric intake and for recording my workout sessions. Seeing a visualization of my food intake as well as the progress of my gains, was a great booster, propelling me forward towards completion. In my opinion, it is so much more powerful to be able to visualize mentally as well as graphically where it is you are trying to get to with your goals. Build, Measure, Learn is a philosophy born out of the Lean Startup Methodology school of thought, propounded by Eric Ries and is something that actually cuts through disciplines and lifestyles.\n\n## Wrapping up\n\nI successfully stuck to my guns until the end of the month, at which point, I stepped on a weighing scale and saw myself clock in at 170.2 lbs! Not quite the 170 lbs I had hoped to achieve but darn near close. Instead of beating myself about the minutiae of failure, I took it as a net positive with respect to the attitude that the month of October imbued in me. In any case, as time bore on, it was less about the actual number than it was about the holistic discipline that was being inculcated. I look forward to continuing this as a sustainable lifestyle going forward and applying these principles learned, in the rest of my endeavors.",
      "code": "> To enjoy good health, to bring true happiness to one's family, to bring peace to all, one must first discipline and control one's own mind. If a man can control his mind he can find the way to Enlightenment, and all wisdom and virtue will naturally come to him. - Buddha\n\nCall it complacence, lethargy or just letting myself go, but one day in September, I woke up and weighed myself on the scale and saw the digits keep increasing 0>>>50>>>100>>>150>>>170>>> 185 lbs! And I freaked out. Now to give you some perspective, if you would have met me in the winter of 2013, you would have seen me as a mid-20s, 154 lbs, skinny Indian guy. In the past I have always been able to, with seeming \"ease\", lose weight at will and do so quickly. However, since I turned 30, I have found out that isn't so easy anymore. Any half cocked attempted would flail due to lack of a seeming purpose. This might be a psychological falsehood that I repeated to myself but it manifested itself as an undeniable truth.\n\nCutting back to the purpose of this article, come mid-September 2018, I was thinking about how I should use the month of October to lose weight and settle back into a healthier diet. This nicely coincided with something I heard on Joe Rogan's podcast, where he was embarking on a \"Sober October\" with his friends to take on a month of sobriety along with intense workouts.\n\nAfter listening to that podcast, I was inspired to fashion a \"Sober October\" of my own kind. As a part of this experience, I learned the following aphorisms that have farther reaching consequences that what I got myself into during the October of 2018.\n\n{/* <TOCInline toc={props.toc} /> */}\n\n## 1. Figure out what is important to you\n\nThe first step of any expedition or adventure has to be to figure out what it is that you are trying to accomplish. You don't necessarily need to have a detailed map of how you will achieve whatever it is, but you need to know what \"it\" is. Trying to understand the direction in which you want to move towards, is the single most important step you can take and will help you make subsequent decisions more easily.\nFor me, it was losing weight and getting healthier by the end of the month. It could just as easily extend to any goal you want to accomplish, be it related to sports, writing, career or whatever it is that you want to achieve. Different people are driven by different motivations. For me, mental and physical health are at the apex of the pyramid. As they say on aircraft announcements, first take care of yourself before you help others. While on the surface it might seem like a selfish thing to say or do, if you are at the peak of your performance capabilities, you are likely to be so much more useful to your family and friends and people around you, in any situation.\n\n## 2. Have concrete goals\n\nWhen we are kids and go through the rigors of education and school, the pattern of progress seems to be neatly laid out in front of us with no effort required on our part ( mostly ), other than execution of the tasks. Intermediate milestones are well defined with totems such as grades, exams and level-ups already setup, in the form of class upgrades. That positive reinforcement in the form of frequent advances - moving higher up from class to class, is something we take for granted as kids and young adults. However, once we cross that barrier and step into adulthood, we seemingly lose the ability to set concrete goals. Sure, we have things such as pay increases or promotions at work, but not a lot of it is set in stone or truly dictated by us.\nThe same is 100% true for personal goals and achievements. When it comes to things like career and personal excellence, as adults we are more likely to \"wing it\" than have an actual plan about where it is we want to head over the next few years. Everyone knows the classic interview question \"Where do you see yourself 5 or 10 years from now?\" but not a lot of people know the answer to that for themselves. Sure, you might say \"Arjun, you have no idea what you are talking about. I know exactly what I need to do\" to which I will say \"Good for you!\". I am certainly not trying to say this is applicable to everyone, but it is something I am most certainly guilty of.\nCircling back to the relevance of this point, to give some \"Sober October\" context, once I had decided the direction I wanted to head in, my concrete goal was to lose 15 lbs in the month of October. I said to myself that I wanted to be 170lbs by the time November rolled around and set myself a clear and easily measurable goal.\n\n## 3. Be realistic and keep it simple\n\nWhen you set out on a self-dictated regimen to complete a task, sometimes it is unclear as to how to execute the minute subtasks. The big picture may be clear in your head, but the day-to-day execution could be obfuscated. Whenever I am faced with such a conundrum, I tend to fall back on Occam's Razor. Occam's razor is the problem-solving principle that the simplest solution tends to be the correct one. We tend to conflate numerous solutions together and rack up an increasingly difficult path to achieve that solution. Instead, sometimes just keeping it simple might be the easiest path forward.\nAs an example, when faced with the problem of getting back on to a healthier diet, there were a bajillion diets to pick from. There was paleo, keto, vegan, Atkins, south beach, raw, fruitarian…. and the list goes on and on. To me this was mind boggling and I was very confused what route would be the best for me. I decided to settle on the First Principle of a healthy diet in this regard, which is pithy enough to sound sarcastic, but I truly mean it - \"Eat less and workout more\". Now, this is of course not possible for everyone and each person has to pick a road which is the best from the assortment of options available to them, but for me, I thought this was the best way ahead. So I grabbed the bull by the horns and decided to undertake a sub-1500 calorie diet with all the necessary nutrition. What this entailed is a diet where I did calorie counting with a close eye on the macros associated with the food. Essentially, I switched to a low carb-high protein diet, and got rid of all unnecessary carbs and starches such as rice, bread, pasta and all those other delicious food groups. As evidenced by the \"Sober\" in Sober October, alcohol consumption was of course another casualty of the diet. As a companion to the healthier way of eating, I also did High Interval Intensity Training (HIIT), at least three times a week. I believed that all of these different facets of tackling the problem would give me a good shot at achieving my goal. Some back of the envelope math seemed to support my hypothesis, so I forged ahead.\n\n## 4. Sometimes not knowing everything is good\n\nThis point somewhat contradicts my previous dialog, but only ever so slightly. It is one of those things that I have started valuing a whole lot more in the past few months. Since I have been reciting some self-evident truths throughout this piece, here goes another - \"Ignorance is bliss\". There are two aspects to this. On the one hand, these days we are obsessed with knowing everything about everything. We have to have the latest news, gossip, podcasts, photos at the tips of our fingers, for the fear of missing out on a conversation/experience or appearing to be an ignoramus in front of someone else. On the other hand, as we progress through life and accumulating all that knowledge, we become increasingly risk averse and hesitant to take on new adventures with the innocence of youth. Whereas, if I was younger I would be more open to the option of failure, now I am far more cynical about the payoff of a particular venture.\nHowever, sometimes you just have to take a leap of faith and believe in yourself and your ability to achieve something. Before I decided I want to lose 15 lbs during the month, I had zero benchmarks to compare against. I thought it was perfectly reasonable lose that amount of weight because I just did not know any better. It was only two weeks into October that I read somewhere that for my body type and weight, losing somewhere around 1.5–2 lbs per week was what was a reasonable expectation. If that was something I had read before I set off on Sober October, I would have cut down my end goals by almost half to keep in line with what was someone else's reasonable expectation. I am so glad I did not. Since I was already midway into Sober October I decided to march on, and just put in the work I had already decided to invest and see where the currents lead me.\n\n## 5. The power of No\n\nOne of the tougher challenges during this month, was giving up on all those things that had become a part of my lifestyle. This included indulging in some of my favorite foods or being a part of social experiences that involve some degree of alcohol consumption. The most important aspect of executing tasks in sight of your goal is your ability to say no to things that do not directly contribute towards it. Saying no is tough. Saying yes often is the path of least resistance. Saying no makes you feel queasy and uncomfortable. Sometimes, you might feel like you are walking on a lonely road, but if the objective is important to you, you must persevere. It is of course, entirely left to your prudence as to what should be said no to, but making the right judgement calls about what constitutes a no v/s a yes is what can differentiate between the success and failure of an outcome. There were plenty of things I turned down during the course of the month such as social events or eating lunch/dinner outside because it would mean that I did not know what exactly went into my food. Given that I was calorie counting, that was not an optimal outcome. However, I did make sure that I gave attention to my friends by being part of some outings but not partaking in any food or drinks, as that would be a balance of both worlds. The human brain can be extraordinarily powerful when it sets it's sights on something.\n\n## 6. Build, Measure and Learn\n\nOne of the best ways to achieve a goal is to be able to set a measurable goal and do consistent check-ins in order to determine if you or your process needs to be self-calibrated in order to achieve it. I was using My Fitness Plan to track all my caloric intake and for recording my workout sessions. Seeing a visualization of my food intake as well as the progress of my gains, was a great booster, propelling me forward towards completion. In my opinion, it is so much more powerful to be able to visualize mentally as well as graphically where it is you are trying to get to with your goals. Build, Measure, Learn is a philosophy born out of the Lean Startup Methodology school of thought, propounded by Eric Ries and is something that actually cuts through disciplines and lifestyles.\n\n## Wrapping up\n\nI successfully stuck to my guns until the end of the month, at which point, I stepped on a weighing scale and saw myself clock in at 170.2 lbs! Not quite the 170 lbs I had hoped to achieve but darn near close. Instead of beating myself about the minutiae of failure, I took it as a net positive with respect to the attitude that the month of October imbued in me. In any case, as time bore on, it was less about the actual number than it was about the holistic discipline that was being inculcated. I look forward to continuing this as a sustainable lifestyle going forward and applying these principles learned, in the rest of my endeavors."
    },
    "slug": "sober-october",
    "path": "posts/sober-october",
    "filePath": "sober-october.mdx",
    "toc": [],
    "readingTime": {
      "text": "11 min read",
      "minutes": 10.5,
      "time": 630000,
      "words": 2100
    },
    "structuredData": {
      "@context": "https://schema.org",
      "@type": "BlogPosting",
      "headline": "Six things that Sober October taught me",
      "datePublished": "2018-11-09T00:00:00.000Z",
      "dateModified": "2018-11-09T00:00:00.000Z",
      "description": "Lessons learned from a month of challenging myself to sober",
      "image": "/static/images/twitter-card.png",
      "url": "https://arjunrao.co/posts/sober-october"
    }
  },
  {
    "title": "Build a sports team, not a family",
    "date": "2024-02-19T00:00:00.000Z",
    "tags": [
      "technology",
      "management",
      "engineering"
    ],
    "lastmod": undefined,
    "draft": false,
    "summary": "The Netflix edict",
    "images": undefined,
    "authors": undefined,
    "layout": undefined,
    "bibliography": undefined,
    "canonicalUrl": undefined,
    "content": "![](/static/images/football.webp)\n\nMost people are aware of Netflix's philosophy of \"We are building a sports team, and not a family\", in the context of building a professional organization, that is covered more extensively in the book [\"Powerful: Building a culture of Freedom and Responsibility\"](https://www.amazon.com/Powerful-Building-Culture-Freedom-Responsibility/dp/1939714095) by Patty McCord, who is largely credited as being one of the architects of Netflix's philosophy.\n\nI remember first encountering this when I interviewed at Netflix years ago, and I was honestly pretty surprised. Being an immigrant from a foreign country, this overt demonstration of capitalistic intent was shocking to me. I **interpreted it as being ruthless** and as an employee I took that to mean that there was **always a sword hanging on your neck**. It was probably also driven by the fact that given my status in the United States was a function of my employer, I couldn't in good conscience, believe that an employer could toss me out on the street **without cause**.\nAs I have gained more experience, I have done almost a complete about-face on this position of mine. I can start with the 3 things that I misunderstood from my initial understanding w/ Netflix\nIn my own personal case, I misinterpreted an honest declaration of building any high performance team, as being an attack on myself. Which probably highlights the insecurities I had in my own station as an immigrant, whether warranted by my status, background or actual abilities. Although the more pertinent point is that the statement itself is NOT ruthless. It is ruthless if you set a goal (\"becoming a sports team\") and then go on to provide NO support to allow people to excel but thats where I was wrong.\n\nNetflix, and any other high performing team, will provide several avenues for strong performers to get even stronger, whether it is through increased ownership, learning off their peers and superiors or branching out into new and different paths not seen before. Having not had first-hand experience of this kind of a support system, my trying to grasp this culture was like one trying to build a rocket when they were still in the Stone Age. The presence of these kinds of tools and opportunities forms the bedrock of what is required to create a high performing team and is what allows someone to broadcast the intent of the qualities of the team they want to build.\n\nBuilding high performing teams has a huge feedback loop that feeds into itself. When one sees one of their peers or superiors operating at a level they werent even aware of, it inspires them to do more and be better. On the other hand, if someone isn't pulling their weight or doing the things that is expected of them, it can be a huge drag, not just on the productivity of the team but also on their morale and make them say things like \"Well if that person isnt doing X, why should I go out of my way to do Y\", which can set a terrible precedent for future actions. This is why it is absolutely critical to address these kinds of issues as early as possible  -  even if it means having a conversation with the employee who is underperforming, which could be due to legitimate reasons (personal problems, health issues, case of the yips etc) or solve it through direct feedback which may result in a Performance Improvement Plan(PIP) or being let go.\n\nBy-and-large, people that we (in this case any reasonable company) hire are good people. They show initiative, drive, motivation etc which is why we added them to the team in the first place. However, if there are justifiable reasons when they need to be given real tough feedback or need to be let go, unfortunately those actions just need to be taken. It is not only good for your team to show them that there is a certain bar for the team, that helps codify the culture of the team, but it actually, counterintuitively, also good for the employee thats being let go - hopefully to help them set off on a path that is more suited to their skillset going forward.\n\nBuild a sports team, not a family  -  one of the many things that I have changed my belief on as I have gained new information.",
    "_id": "sports-team-not-family.mdx",
    "_raw": {
      "flattenedPath": "sports-team-not-family"
    },
    "body": {
      "raw": "![](/static/images/football.webp)\n\nMost people are aware of Netflix's philosophy of \"We are building a sports team, and not a family\", in the context of building a professional organization, that is covered more extensively in the book [\"Powerful: Building a culture of Freedom and Responsibility\"](https://www.amazon.com/Powerful-Building-Culture-Freedom-Responsibility/dp/1939714095) by Patty McCord, who is largely credited as being one of the architects of Netflix's philosophy.\n\nI remember first encountering this when I interviewed at Netflix years ago, and I was honestly pretty surprised. Being an immigrant from a foreign country, this overt demonstration of capitalistic intent was shocking to me. I **interpreted it as being ruthless** and as an employee I took that to mean that there was **always a sword hanging on your neck**. It was probably also driven by the fact that given my status in the United States was a function of my employer, I couldn't in good conscience, believe that an employer could toss me out on the street **without cause**.\nAs I have gained more experience, I have done almost a complete about-face on this position of mine. I can start with the 3 things that I misunderstood from my initial understanding w/ Netflix\nIn my own personal case, I misinterpreted an honest declaration of building any high performance team, as being an attack on myself. Which probably highlights the insecurities I had in my own station as an immigrant, whether warranted by my status, background or actual abilities. Although the more pertinent point is that the statement itself is NOT ruthless. It is ruthless if you set a goal (\"becoming a sports team\") and then go on to provide NO support to allow people to excel but thats where I was wrong.\n\nNetflix, and any other high performing team, will provide several avenues for strong performers to get even stronger, whether it is through increased ownership, learning off their peers and superiors or branching out into new and different paths not seen before. Having not had first-hand experience of this kind of a support system, my trying to grasp this culture was like one trying to build a rocket when they were still in the Stone Age. The presence of these kinds of tools and opportunities forms the bedrock of what is required to create a high performing team and is what allows someone to broadcast the intent of the qualities of the team they want to build.\n\nBuilding high performing teams has a huge feedback loop that feeds into itself. When one sees one of their peers or superiors operating at a level they werent even aware of, it inspires them to do more and be better. On the other hand, if someone isn't pulling their weight or doing the things that is expected of them, it can be a huge drag, not just on the productivity of the team but also on their morale and make them say things like \"Well if that person isnt doing X, why should I go out of my way to do Y\", which can set a terrible precedent for future actions. This is why it is absolutely critical to address these kinds of issues as early as possible  -  even if it means having a conversation with the employee who is underperforming, which could be due to legitimate reasons (personal problems, health issues, case of the yips etc) or solve it through direct feedback which may result in a Performance Improvement Plan(PIP) or being let go.\n\nBy-and-large, people that we (in this case any reasonable company) hire are good people. They show initiative, drive, motivation etc which is why we added them to the team in the first place. However, if there are justifiable reasons when they need to be given real tough feedback or need to be let go, unfortunately those actions just need to be taken. It is not only good for your team to show them that there is a certain bar for the team, that helps codify the culture of the team, but it actually, counterintuitively, also good for the employee thats being let go - hopefully to help them set off on a path that is more suited to their skillset going forward.\n\nBuild a sports team, not a family  -  one of the many things that I have changed my belief on as I have gained new information.",
      "code": "![](/static/images/football.webp)\n\nMost people are aware of Netflix's philosophy of \"We are building a sports team, and not a family\", in the context of building a professional organization, that is covered more extensively in the book [\"Powerful: Building a culture of Freedom and Responsibility\"](https://www.amazon.com/Powerful-Building-Culture-Freedom-Responsibility/dp/1939714095) by Patty McCord, who is largely credited as being one of the architects of Netflix's philosophy.\n\nI remember first encountering this when I interviewed at Netflix years ago, and I was honestly pretty surprised. Being an immigrant from a foreign country, this overt demonstration of capitalistic intent was shocking to me. I **interpreted it as being ruthless** and as an employee I took that to mean that there was **always a sword hanging on your neck**. It was probably also driven by the fact that given my status in the United States was a function of my employer, I couldn't in good conscience, believe that an employer could toss me out on the street **without cause**.\nAs I have gained more experience, I have done almost a complete about-face on this position of mine. I can start with the 3 things that I misunderstood from my initial understanding w/ Netflix\nIn my own personal case, I misinterpreted an honest declaration of building any high performance team, as being an attack on myself. Which probably highlights the insecurities I had in my own station as an immigrant, whether warranted by my status, background or actual abilities. Although the more pertinent point is that the statement itself is NOT ruthless. It is ruthless if you set a goal (\"becoming a sports team\") and then go on to provide NO support to allow people to excel but thats where I was wrong.\n\nNetflix, and any other high performing team, will provide several avenues for strong performers to get even stronger, whether it is through increased ownership, learning off their peers and superiors or branching out into new and different paths not seen before. Having not had first-hand experience of this kind of a support system, my trying to grasp this culture was like one trying to build a rocket when they were still in the Stone Age. The presence of these kinds of tools and opportunities forms the bedrock of what is required to create a high performing team and is what allows someone to broadcast the intent of the qualities of the team they want to build.\n\nBuilding high performing teams has a huge feedback loop that feeds into itself. When one sees one of their peers or superiors operating at a level they werent even aware of, it inspires them to do more and be better. On the other hand, if someone isn't pulling their weight or doing the things that is expected of them, it can be a huge drag, not just on the productivity of the team but also on their morale and make them say things like \"Well if that person isnt doing X, why should I go out of my way to do Y\", which can set a terrible precedent for future actions. This is why it is absolutely critical to address these kinds of issues as early as possible  -  even if it means having a conversation with the employee who is underperforming, which could be due to legitimate reasons (personal problems, health issues, case of the yips etc) or solve it through direct feedback which may result in a Performance Improvement Plan(PIP) or being let go.\n\nBy-and-large, people that we (in this case any reasonable company) hire are good people. They show initiative, drive, motivation etc which is why we added them to the team in the first place. However, if there are justifiable reasons when they need to be given real tough feedback or need to be let go, unfortunately those actions just need to be taken. It is not only good for your team to show them that there is a certain bar for the team, that helps codify the culture of the team, but it actually, counterintuitively, also good for the employee thats being let go - hopefully to help them set off on a path that is more suited to their skillset going forward.\n\nBuild a sports team, not a family  -  one of the many things that I have changed my belief on as I have gained new information."
    },
    "slug": "sports-team-not-family",
    "path": "posts/sports-team-not-family",
    "filePath": "sports-team-not-family.mdx",
    "toc": [],
    "readingTime": {
      "text": "4 min read",
      "minutes": 3.6,
      "time": 216000,
      "words": 720
    },
    "structuredData": {
      "@context": "https://schema.org",
      "@type": "BlogPosting",
      "headline": "Build a sports team, not a family",
      "datePublished": "2024-02-19T00:00:00.000Z",
      "dateModified": "2024-02-19T00:00:00.000Z",
      "description": "The Netflix edict",
      "image": "/static/images/twitter-card.png",
      "url": "https://arjunrao.co/posts/sports-team-not-family"
    }
  },
  {
    "title": "Highlights from Stripe annual 2023 letter",
    "date": "2024-03-20T00:00:00.000Z",
    "tags": [
      "technology",
      "entrepreneurship",
      "engineering",
      "environment"
    ],
    "lastmod": undefined,
    "draft": false,
    "summary": "Learnings from the world's largest financial payment processor",
    "images": [
      "/static/images/stripe-atlas.png"
    ],
    "authors": undefined,
    "layout": undefined,
    "bibliography": undefined,
    "canonicalUrl": undefined,
    "content": "[Stripe](https://stripe.com/) published its 2023 annual letter last week. Much like the previous edition it was filled with a lot of interesting nuggets. Stripe has a strong history of being fairly transparent with its practices. These range from engineering challenges through its blogs as well as thought leadership in the financial and entrepreneurship space. I personally like the writing style of this letter as it doesn’t seem corporate or stuffy. Instead it is filled with humorous anecdotes,  quirky observations and intelligent historical narratives which make it a compelling read. You can read the letter here → [Stripe Annual Letter: 2023](https://stripe.com/annual-updates/2023)\n\nA few things that I found particularly interesting from the letter have been broken down into 3 broad categories -\n\n- [1. Financial growth](#1-financial-growth)\n- [2. Environmental reflections](#2-environmental-reflections)\n- [3. Engineering scale](#3-engineering-scale)\n\n## 1. Financial growth \n\n- Stripe passed the milestone of $1 trillion (roughly 1% of global GDP) in total payment volume in 2023, up 25% from the prior year.\n- The average tenure of a company’s inclusion in the S&P 500 index has been shrinking over the past few decades: it was 61 years in 1958 and now sits at 18 years.\n- Startups founded in 2022, the most recent year where we have a full year of analyzable data, are 60% more likely to start collecting revenue within their first year, and 57% more likely to process $1 million within their first year, than those founded in 2019.\n- During Black Friday / Cyber Monday 2023 (BFCM), the highest-load part of any year, Stripe maintained uptime in excess of 99.999% while processing more than 300 million transactions. Total BFCM volume was $18.6 billion. \n\n\n## 2. Environmental reflections\n\n- Today, one in six new Delaware corporations incorporates with Stripe Atlas.\n- Twice as many AI companies went live on Stripe compared to 2022, including new trailblazers like Perplexity and Mistral.\n- The world deployed 444 GW of solar energy last year, which is greater than all the nuclear grid capacity in the world today. In the US, this translated to around half of all new capacity added to the grid coming from solar.\n- Texas deployed more solar than California last year.\n- Due to their worse combustion than a four-stroke car engine, a single hour of operating a gas-powered mower produces the same amount of smog-forming pollution as driving a gas-powered car 300 miles.\n\n![](/static/images/stripe-env.png)\n\n## 3. Engineering scale \n\n- New code gets deployed at Stripe to one of the core API services approximately 400 times in a typical day.\n- Once a change is code-complete, it is evaluated by a battery of around 1.4 million tests. \n- Stripe uses half a million CPU cores to execute more than 6 billion test runs each day.\n- Changes first go to pre-production, a mock production environment with synthetic API traffic designed to mimic realistic integration patterns\n- Following this, the change then rolls out to a single production machine with a small sliver of traffic, before gradually advancing to 0.5%, then 1%, then 5%, then 20%, and so on, of actual production traffic—with pauses along the way to observe the effects. \n- Each progressive rollout is inspected against 55,000 different metrics. If at any moment the system detects anomalous telemetry, the machines running the new code are automatically withdrawn from the pool and traffic is redirected to machines running an older, known-good version.\n- Through automated monitoring, Stripe aims to detect as many incidents as possible, and their systems can automatically remediate many incidents by invoking redundant rails or enabling emergency fallback capabilities. \n- On average, 520 calls per day go out to Stripe staff to look at a possible incident.\n- Stripe has a 99.999% uptime (past 90 days). \n- Their most significant issue, YTD 2024, took only 6 minutes to fix.\n\nFrom an engineering standpoint, these are clearly very high numbers to deal with. Building testability, observability, and automated incident management at this kind of scale is not a trivial task. While we can’t say how things work from an operator’s perspective, from a user’s standpoint it clearly makes the platform a joy to use. Ultimately, as engineers, that is what we are all aiming for. Nicely done, Stripe 🙌",
    "_id": "stripe-2023.mdx",
    "_raw": {
      "flattenedPath": "stripe-2023"
    },
    "body": {
      "raw": "[Stripe](https://stripe.com/) published its 2023 annual letter last week. Much like the previous edition it was filled with a lot of interesting nuggets. Stripe has a strong history of being fairly transparent with its practices. These range from engineering challenges through its blogs as well as thought leadership in the financial and entrepreneurship space. I personally like the writing style of this letter as it doesn’t seem corporate or stuffy. Instead it is filled with humorous anecdotes,  quirky observations and intelligent historical narratives which make it a compelling read. You can read the letter here → [Stripe Annual Letter: 2023](https://stripe.com/annual-updates/2023)\n\nA few things that I found particularly interesting from the letter have been broken down into 3 broad categories -\n\n- [1. Financial growth](#1-financial-growth)\n- [2. Environmental reflections](#2-environmental-reflections)\n- [3. Engineering scale](#3-engineering-scale)\n\n## 1. Financial growth \n\n- Stripe passed the milestone of $1 trillion (roughly 1% of global GDP) in total payment volume in 2023, up 25% from the prior year.\n- The average tenure of a company’s inclusion in the S&P 500 index has been shrinking over the past few decades: it was 61 years in 1958 and now sits at 18 years.\n- Startups founded in 2022, the most recent year where we have a full year of analyzable data, are 60% more likely to start collecting revenue within their first year, and 57% more likely to process $1 million within their first year, than those founded in 2019.\n- During Black Friday / Cyber Monday 2023 (BFCM), the highest-load part of any year, Stripe maintained uptime in excess of 99.999% while processing more than 300 million transactions. Total BFCM volume was $18.6 billion. \n\n\n## 2. Environmental reflections\n\n- Today, one in six new Delaware corporations incorporates with Stripe Atlas.\n- Twice as many AI companies went live on Stripe compared to 2022, including new trailblazers like Perplexity and Mistral.\n- The world deployed 444 GW of solar energy last year, which is greater than all the nuclear grid capacity in the world today. In the US, this translated to around half of all new capacity added to the grid coming from solar.\n- Texas deployed more solar than California last year.\n- Due to their worse combustion than a four-stroke car engine, a single hour of operating a gas-powered mower produces the same amount of smog-forming pollution as driving a gas-powered car 300 miles.\n\n![](/static/images/stripe-env.png)\n\n## 3. Engineering scale \n\n- New code gets deployed at Stripe to one of the core API services approximately 400 times in a typical day.\n- Once a change is code-complete, it is evaluated by a battery of around 1.4 million tests. \n- Stripe uses half a million CPU cores to execute more than 6 billion test runs each day.\n- Changes first go to pre-production, a mock production environment with synthetic API traffic designed to mimic realistic integration patterns\n- Following this, the change then rolls out to a single production machine with a small sliver of traffic, before gradually advancing to 0.5%, then 1%, then 5%, then 20%, and so on, of actual production traffic—with pauses along the way to observe the effects. \n- Each progressive rollout is inspected against 55,000 different metrics. If at any moment the system detects anomalous telemetry, the machines running the new code are automatically withdrawn from the pool and traffic is redirected to machines running an older, known-good version.\n- Through automated monitoring, Stripe aims to detect as many incidents as possible, and their systems can automatically remediate many incidents by invoking redundant rails or enabling emergency fallback capabilities. \n- On average, 520 calls per day go out to Stripe staff to look at a possible incident.\n- Stripe has a 99.999% uptime (past 90 days). \n- Their most significant issue, YTD 2024, took only 6 minutes to fix.\n\nFrom an engineering standpoint, these are clearly very high numbers to deal with. Building testability, observability, and automated incident management at this kind of scale is not a trivial task. While we can’t say how things work from an operator’s perspective, from a user’s standpoint it clearly makes the platform a joy to use. Ultimately, as engineers, that is what we are all aiming for. Nicely done, Stripe 🙌",
      "code": "[Stripe](https://stripe.com/) published its 2023 annual letter last week. Much like the previous edition it was filled with a lot of interesting nuggets. Stripe has a strong history of being fairly transparent with its practices. These range from engineering challenges through its blogs as well as thought leadership in the financial and entrepreneurship space. I personally like the writing style of this letter as it doesn’t seem corporate or stuffy. Instead it is filled with humorous anecdotes,  quirky observations and intelligent historical narratives which make it a compelling read. You can read the letter here → [Stripe Annual Letter: 2023](https://stripe.com/annual-updates/2023)\n\nA few things that I found particularly interesting from the letter have been broken down into 3 broad categories -\n\n- [1. Financial growth](#1-financial-growth)\n- [2. Environmental reflections](#2-environmental-reflections)\n- [3. Engineering scale](#3-engineering-scale)\n\n## 1. Financial growth \n\n- Stripe passed the milestone of $1 trillion (roughly 1% of global GDP) in total payment volume in 2023, up 25% from the prior year.\n- The average tenure of a company’s inclusion in the S&P 500 index has been shrinking over the past few decades: it was 61 years in 1958 and now sits at 18 years.\n- Startups founded in 2022, the most recent year where we have a full year of analyzable data, are 60% more likely to start collecting revenue within their first year, and 57% more likely to process $1 million within their first year, than those founded in 2019.\n- During Black Friday / Cyber Monday 2023 (BFCM), the highest-load part of any year, Stripe maintained uptime in excess of 99.999% while processing more than 300 million transactions. Total BFCM volume was $18.6 billion. \n\n\n## 2. Environmental reflections\n\n- Today, one in six new Delaware corporations incorporates with Stripe Atlas.\n- Twice as many AI companies went live on Stripe compared to 2022, including new trailblazers like Perplexity and Mistral.\n- The world deployed 444 GW of solar energy last year, which is greater than all the nuclear grid capacity in the world today. In the US, this translated to around half of all new capacity added to the grid coming from solar.\n- Texas deployed more solar than California last year.\n- Due to their worse combustion than a four-stroke car engine, a single hour of operating a gas-powered mower produces the same amount of smog-forming pollution as driving a gas-powered car 300 miles.\n\n![](/static/images/stripe-env.png)\n\n## 3. Engineering scale \n\n- New code gets deployed at Stripe to one of the core API services approximately 400 times in a typical day.\n- Once a change is code-complete, it is evaluated by a battery of around 1.4 million tests. \n- Stripe uses half a million CPU cores to execute more than 6 billion test runs each day.\n- Changes first go to pre-production, a mock production environment with synthetic API traffic designed to mimic realistic integration patterns\n- Following this, the change then rolls out to a single production machine with a small sliver of traffic, before gradually advancing to 0.5%, then 1%, then 5%, then 20%, and so on, of actual production traffic—with pauses along the way to observe the effects. \n- Each progressive rollout is inspected against 55,000 different metrics. If at any moment the system detects anomalous telemetry, the machines running the new code are automatically withdrawn from the pool and traffic is redirected to machines running an older, known-good version.\n- Through automated monitoring, Stripe aims to detect as many incidents as possible, and their systems can automatically remediate many incidents by invoking redundant rails or enabling emergency fallback capabilities. \n- On average, 520 calls per day go out to Stripe staff to look at a possible incident.\n- Stripe has a 99.999% uptime (past 90 days). \n- Their most significant issue, YTD 2024, took only 6 minutes to fix.\n\nFrom an engineering standpoint, these are clearly very high numbers to deal with. Building testability, observability, and automated incident management at this kind of scale is not a trivial task. While we can’t say how things work from an operator’s perspective, from a user’s standpoint it clearly makes the platform a joy to use. Ultimately, as engineers, that is what we are all aiming for. Nicely done, Stripe 🙌"
    },
    "slug": "stripe-2023",
    "path": "posts/stripe-2023",
    "filePath": "stripe-2023.mdx",
    "toc": [],
    "readingTime": {
      "text": "4 min read",
      "minutes": 3.515,
      "time": 210900,
      "words": 703
    },
    "structuredData": {
      "@context": "https://schema.org",
      "@type": "BlogPosting",
      "headline": "Highlights from Stripe annual 2023 letter",
      "datePublished": "2024-03-20T00:00:00.000Z",
      "dateModified": "2024-03-20T00:00:00.000Z",
      "description": "Learnings from the world's largest financial payment processor",
      "image": "/static/images/stripe-atlas.png",
      "url": "https://arjunrao.co/posts/stripe-2023"
    }
  },
  {
    "title": "The One",
    "date": "2017-08-27T00:00:00.000Z",
    "tags": [
      "technology",
      "mobile"
    ],
    "lastmod": undefined,
    "draft": false,
    "summary": "Clouds of topics to talk about",
    "images": undefined,
    "authors": undefined,
    "layout": undefined,
    "bibliography": undefined,
    "canonicalUrl": undefined,
    "content": "“Learning to choose is hard. Learning to choose well is harder. And learning to choose well in a world of unlimited possibilities is harder still, perhaps too hard.”\n\n― Barry Schwartz, The Paradox of Choice: Why More Is Less\n\n## Rationale\n\nI use a lot of recommendation apps for figuring out places to go to, either after a work day or something over the weekend. For the most part these apps do their work just as I’d like them to. However, there are situations when recommendation apps just don’t cut it. Some scenarios when this occurs could be —\n\n1. You have a big group of people to go out with and everybody has an opinion on where to go\n\n2. You are with someone who cannot make up their mind about what they want to do\n\n3. You want to do something but all those filters and choices and options are just too many for you to select because you don’t quite know what you want.\n\nEnter ‘The One’. The One is a mobile app based on the premise that choice is overrated and that if a person were given a certain place rather than having through wade through many options, decision making would become much much simpler. There is an interesting TED talk called the Paradox of Choice, which highlights how the availability of options delays decision making and in some cases causes negative effects. I would highly recommend listening to this talk.\n\n## Getting the app\n\nThe app is available in the Google Play store (Android) and you can download it [here](https://play.google.com/store/search?q=org.tnc.theone&hl=en). If there is any kind of demand for it, I will consider putting it on the App Store (iOS).\n\n## Key Features\n\nI had initially designed a Meteor app ( called Where Do We Go? )which was web based a couple of years ago, but I decided to make it a mobile app this time around. Let me highlight a few key features of this app —\n\n1. The app provides 4 categories for which you can choose a place to go to. These are ‘Food’, ‘Drinks’, ‘Cafes’ and ‘Random’ (If you really don’t know what it is you want to do!)\n\n2. Once you select a category and get back a recommendation, you cannot select a new place for that same category ( you can still select other categories ) for the next 2 minutes. The idea is that if you were given the option to change places repeatedly, you would fall into the same trap as any other recommendation app. In order to help you understand the 2 minute timer limit, a small countdown timer will appear on the category you selected, to let you know how many seconds are left before you can select a new place in that same category.\n\n3. The result displayed when you select a category, will show you the name, address of the venue ( which you can open in Google Maps ), how expensive the place is ( $ -$$$$ ) and the rating of the venue ( 1–10 ). The background color of the result also gives a quick indication of the rating — green for rating≥9, yellow for rating ≥ 7 and < 9 and red for rating < 7\n\n4. The category whose result you are viewing currently, is marked by a subtle underline\n\n5. The only 2 filters you can choose ( by accessing the menu ) are Distance and Cost. The defaults are preset, so you’d never need to ever tweak these settings if you don’t want to. If you do change either one of these, you will get a fresh set of places based on your filters only after all the countdown timers are reset.\n\n6. There is no signup required for the app. It just works! The results are powered by the Foursquare API.\n\n7. As I do not have any design background, the look and feel of the app is very striking. The colors are bold and bright to show a sense of decisiveness coupled with simplicity.\n\n## Technical architecture\n\n#### Back End\n\n1. Express\n2. REST\n3. Docker\n4. Nginx\n\n#### Front End\n\n1. React Native using Expo\n\n#### Hosting\n\n1. Digital Ocean\n\n## Conclusion\n\nI built the app over a couple of weekends and had a great time seeing the idea come to fruition. Shout out to InYong Chung for helping out with product feedback and and loaning me an Android device to make sure product deployment was a success! If you have any feedback, please send it via the “Rate Us” form in the app menu. If not, you can reach me at Contact Me and send me a message. You can also reach me on Twitter. If you like the app, don’t forget to rate it on the Play Store and have fun using The One!\n\n“Choose less and feel better.”\n\n― Barry Schwartz, The Paradox of Choice: Why More Is Less",
    "_id": "the-one.mdx",
    "_raw": {
      "flattenedPath": "the-one"
    },
    "body": {
      "raw": "“Learning to choose is hard. Learning to choose well is harder. And learning to choose well in a world of unlimited possibilities is harder still, perhaps too hard.”\n\n― Barry Schwartz, The Paradox of Choice: Why More Is Less\n\n## Rationale\n\nI use a lot of recommendation apps for figuring out places to go to, either after a work day or something over the weekend. For the most part these apps do their work just as I’d like them to. However, there are situations when recommendation apps just don’t cut it. Some scenarios when this occurs could be —\n\n1. You have a big group of people to go out with and everybody has an opinion on where to go\n\n2. You are with someone who cannot make up their mind about what they want to do\n\n3. You want to do something but all those filters and choices and options are just too many for you to select because you don’t quite know what you want.\n\nEnter ‘The One’. The One is a mobile app based on the premise that choice is overrated and that if a person were given a certain place rather than having through wade through many options, decision making would become much much simpler. There is an interesting TED talk called the Paradox of Choice, which highlights how the availability of options delays decision making and in some cases causes negative effects. I would highly recommend listening to this talk.\n\n## Getting the app\n\nThe app is available in the Google Play store (Android) and you can download it [here](https://play.google.com/store/search?q=org.tnc.theone&hl=en). If there is any kind of demand for it, I will consider putting it on the App Store (iOS).\n\n## Key Features\n\nI had initially designed a Meteor app ( called Where Do We Go? )which was web based a couple of years ago, but I decided to make it a mobile app this time around. Let me highlight a few key features of this app —\n\n1. The app provides 4 categories for which you can choose a place to go to. These are ‘Food’, ‘Drinks’, ‘Cafes’ and ‘Random’ (If you really don’t know what it is you want to do!)\n\n2. Once you select a category and get back a recommendation, you cannot select a new place for that same category ( you can still select other categories ) for the next 2 minutes. The idea is that if you were given the option to change places repeatedly, you would fall into the same trap as any other recommendation app. In order to help you understand the 2 minute timer limit, a small countdown timer will appear on the category you selected, to let you know how many seconds are left before you can select a new place in that same category.\n\n3. The result displayed when you select a category, will show you the name, address of the venue ( which you can open in Google Maps ), how expensive the place is ( $ -$$$$ ) and the rating of the venue ( 1–10 ). The background color of the result also gives a quick indication of the rating — green for rating≥9, yellow for rating ≥ 7 and < 9 and red for rating < 7\n\n4. The category whose result you are viewing currently, is marked by a subtle underline\n\n5. The only 2 filters you can choose ( by accessing the menu ) are Distance and Cost. The defaults are preset, so you’d never need to ever tweak these settings if you don’t want to. If you do change either one of these, you will get a fresh set of places based on your filters only after all the countdown timers are reset.\n\n6. There is no signup required for the app. It just works! The results are powered by the Foursquare API.\n\n7. As I do not have any design background, the look and feel of the app is very striking. The colors are bold and bright to show a sense of decisiveness coupled with simplicity.\n\n## Technical architecture\n\n#### Back End\n\n1. Express\n2. REST\n3. Docker\n4. Nginx\n\n#### Front End\n\n1. React Native using Expo\n\n#### Hosting\n\n1. Digital Ocean\n\n## Conclusion\n\nI built the app over a couple of weekends and had a great time seeing the idea come to fruition. Shout out to InYong Chung for helping out with product feedback and and loaning me an Android device to make sure product deployment was a success! If you have any feedback, please send it via the “Rate Us” form in the app menu. If not, you can reach me at Contact Me and send me a message. You can also reach me on Twitter. If you like the app, don’t forget to rate it on the Play Store and have fun using The One!\n\n“Choose less and feel better.”\n\n― Barry Schwartz, The Paradox of Choice: Why More Is Less",
      "code": "“Learning to choose is hard. Learning to choose well is harder. And learning to choose well in a world of unlimited possibilities is harder still, perhaps too hard.”\n\n― Barry Schwartz, The Paradox of Choice: Why More Is Less\n\n## Rationale\n\nI use a lot of recommendation apps for figuring out places to go to, either after a work day or something over the weekend. For the most part these apps do their work just as I’d like them to. However, there are situations when recommendation apps just don’t cut it. Some scenarios when this occurs could be —\n\n1. You have a big group of people to go out with and everybody has an opinion on where to go\n\n2. You are with someone who cannot make up their mind about what they want to do\n\n3. You want to do something but all those filters and choices and options are just too many for you to select because you don’t quite know what you want.\n\nEnter ‘The One’. The One is a mobile app based on the premise that choice is overrated and that if a person were given a certain place rather than having through wade through many options, decision making would become much much simpler. There is an interesting TED talk called the Paradox of Choice, which highlights how the availability of options delays decision making and in some cases causes negative effects. I would highly recommend listening to this talk.\n\n## Getting the app\n\nThe app is available in the Google Play store (Android) and you can download it [here](https://play.google.com/store/search?q=org.tnc.theone&hl=en). If there is any kind of demand for it, I will consider putting it on the App Store (iOS).\n\n## Key Features\n\nI had initially designed a Meteor app ( called Where Do We Go? )which was web based a couple of years ago, but I decided to make it a mobile app this time around. Let me highlight a few key features of this app —\n\n1. The app provides 4 categories for which you can choose a place to go to. These are ‘Food’, ‘Drinks’, ‘Cafes’ and ‘Random’ (If you really don’t know what it is you want to do!)\n\n2. Once you select a category and get back a recommendation, you cannot select a new place for that same category ( you can still select other categories ) for the next 2 minutes. The idea is that if you were given the option to change places repeatedly, you would fall into the same trap as any other recommendation app. In order to help you understand the 2 minute timer limit, a small countdown timer will appear on the category you selected, to let you know how many seconds are left before you can select a new place in that same category.\n\n3. The result displayed when you select a category, will show you the name, address of the venue ( which you can open in Google Maps ), how expensive the place is ( $ -$$$$ ) and the rating of the venue ( 1–10 ). The background color of the result also gives a quick indication of the rating — green for rating≥9, yellow for rating ≥ 7 and < 9 and red for rating < 7\n\n4. The category whose result you are viewing currently, is marked by a subtle underline\n\n5. The only 2 filters you can choose ( by accessing the menu ) are Distance and Cost. The defaults are preset, so you’d never need to ever tweak these settings if you don’t want to. If you do change either one of these, you will get a fresh set of places based on your filters only after all the countdown timers are reset.\n\n6. There is no signup required for the app. It just works! The results are powered by the Foursquare API.\n\n7. As I do not have any design background, the look and feel of the app is very striking. The colors are bold and bright to show a sense of decisiveness coupled with simplicity.\n\n## Technical architecture\n\n#### Back End\n\n1. Express\n2. REST\n3. Docker\n4. Nginx\n\n#### Front End\n\n1. React Native using Expo\n\n#### Hosting\n\n1. Digital Ocean\n\n## Conclusion\n\nI built the app over a couple of weekends and had a great time seeing the idea come to fruition. Shout out to InYong Chung for helping out with product feedback and and loaning me an Android device to make sure product deployment was a success! If you have any feedback, please send it via the “Rate Us” form in the app menu. If not, you can reach me at Contact Me and send me a message. You can also reach me on Twitter. If you like the app, don’t forget to rate it on the Play Store and have fun using The One!\n\n“Choose less and feel better.”\n\n― Barry Schwartz, The Paradox of Choice: Why More Is Less"
    },
    "slug": "the-one",
    "path": "posts/the-one",
    "filePath": "the-one.mdx",
    "toc": [],
    "readingTime": {
      "text": "5 min read",
      "minutes": 4.13,
      "time": 247800,
      "words": 826
    },
    "structuredData": {
      "@context": "https://schema.org",
      "@type": "BlogPosting",
      "headline": "The One",
      "datePublished": "2017-08-27T00:00:00.000Z",
      "dateModified": "2017-08-27T00:00:00.000Z",
      "description": "Clouds of topics to talk about",
      "image": "/static/images/twitter-card.png",
      "url": "https://arjunrao.co/posts/the-one"
    }
  },
  {
    "title": "My Master’s Thesis: 12 years later",
    "date": "2023-01-23T00:00:00.000Z",
    "tags": [
      "college",
      "thesis",
      "stem"
    ],
    "lastmod": undefined,
    "draft": false,
    "summary": "Looking back at my post graduate dissertation",
    "images": undefined,
    "authors": undefined,
    "layout": undefined,
    "bibliography": undefined,
    "canonicalUrl": undefined,
    "content": "When I went to Rutgers for my Masters of Science, I wrote a thesis on “Improving parking garage efficiency using reservation optimization techniques” — yes, a mouthful but it was a lot of effort that resulted in a Master’s Dissertation.\n\nAnyway, many moons have passed since that day, and I received an email from a random SaaS vendor. The email started off with “I loved reading your article _Improving parking garage efficiency using reservation optimization techniques_ and it is so relevant to today’s conversation” and then promptly went into a sales pitch for their product which was of absolutely no relevance to me, and was even less connected to my thesis topic, which suggests they didn’t really read a 159 page document.\n\nAfter scratching my head for a couple of minutes, I wondered how this person even found the topic of my thesis, so I did a Google search, and lo-and-behold, the first Google search pointed to my [thesis](https://rucore.libraries.rutgers.edu/rutgers-lib/36198/) in the Rutgers Thesis Archive!\n\n![](/static/images/thesis.png)\n\nIt was exciting to see what I had worked on after over a decade and as I was perusing the site, I noticed a section in the left sidebar View Usage Statistics which popped up 3 very interesting things —\n\n- The first one was that my thesis had been downloaded 805 times (at the time of writing) in the last 10+ years, which was 805 times more than I thought people would download it (if I had really even known they could)\n\n- The second was that there was a time-based graph indicating the downloads which indicated a fairly linear increase in the first few years followed by a much smaller gradient increase in the past several years.\n\n![](/static/images/graph1.png)\n\n- The third was a pie chart of countries from which people downloaded the thesis document.\n\n![](/static/images/graph2.png)\n\nThis to me was the most fascinating because it indicated that while 33% of the downloads came from the USA, it also included countries like Netherlands, Ukraine, Phillippines, Germany and India among others.\n\nNot sure what the point of these findings really is, except that sometimes when you think your work goes unnoticed, you might be mistaken.",
    "_id": "thesis.mdx",
    "_raw": {
      "flattenedPath": "thesis"
    },
    "body": {
      "raw": "When I went to Rutgers for my Masters of Science, I wrote a thesis on “Improving parking garage efficiency using reservation optimization techniques” — yes, a mouthful but it was a lot of effort that resulted in a Master’s Dissertation.\n\nAnyway, many moons have passed since that day, and I received an email from a random SaaS vendor. The email started off with “I loved reading your article _Improving parking garage efficiency using reservation optimization techniques_ and it is so relevant to today’s conversation” and then promptly went into a sales pitch for their product which was of absolutely no relevance to me, and was even less connected to my thesis topic, which suggests they didn’t really read a 159 page document.\n\nAfter scratching my head for a couple of minutes, I wondered how this person even found the topic of my thesis, so I did a Google search, and lo-and-behold, the first Google search pointed to my [thesis](https://rucore.libraries.rutgers.edu/rutgers-lib/36198/) in the Rutgers Thesis Archive!\n\n![](/static/images/thesis.png)\n\nIt was exciting to see what I had worked on after over a decade and as I was perusing the site, I noticed a section in the left sidebar View Usage Statistics which popped up 3 very interesting things —\n\n- The first one was that my thesis had been downloaded 805 times (at the time of writing) in the last 10+ years, which was 805 times more than I thought people would download it (if I had really even known they could)\n\n- The second was that there was a time-based graph indicating the downloads which indicated a fairly linear increase in the first few years followed by a much smaller gradient increase in the past several years.\n\n![](/static/images/graph1.png)\n\n- The third was a pie chart of countries from which people downloaded the thesis document.\n\n![](/static/images/graph2.png)\n\nThis to me was the most fascinating because it indicated that while 33% of the downloads came from the USA, it also included countries like Netherlands, Ukraine, Phillippines, Germany and India among others.\n\nNot sure what the point of these findings really is, except that sometimes when you think your work goes unnoticed, you might be mistaken.",
      "code": "When I went to Rutgers for my Masters of Science, I wrote a thesis on “Improving parking garage efficiency using reservation optimization techniques” — yes, a mouthful but it was a lot of effort that resulted in a Master’s Dissertation.\n\nAnyway, many moons have passed since that day, and I received an email from a random SaaS vendor. The email started off with “I loved reading your article _Improving parking garage efficiency using reservation optimization techniques_ and it is so relevant to today’s conversation” and then promptly went into a sales pitch for their product which was of absolutely no relevance to me, and was even less connected to my thesis topic, which suggests they didn’t really read a 159 page document.\n\nAfter scratching my head for a couple of minutes, I wondered how this person even found the topic of my thesis, so I did a Google search, and lo-and-behold, the first Google search pointed to my [thesis](https://rucore.libraries.rutgers.edu/rutgers-lib/36198/) in the Rutgers Thesis Archive!\n\n![](/static/images/thesis.png)\n\nIt was exciting to see what I had worked on after over a decade and as I was perusing the site, I noticed a section in the left sidebar View Usage Statistics which popped up 3 very interesting things —\n\n- The first one was that my thesis had been downloaded 805 times (at the time of writing) in the last 10+ years, which was 805 times more than I thought people would download it (if I had really even known they could)\n\n- The second was that there was a time-based graph indicating the downloads which indicated a fairly linear increase in the first few years followed by a much smaller gradient increase in the past several years.\n\n![](/static/images/graph1.png)\n\n- The third was a pie chart of countries from which people downloaded the thesis document.\n\n![](/static/images/graph2.png)\n\nThis to me was the most fascinating because it indicated that while 33% of the downloads came from the USA, it also included countries like Netherlands, Ukraine, Phillippines, Germany and India among others.\n\nNot sure what the point of these findings really is, except that sometimes when you think your work goes unnoticed, you might be mistaken."
    },
    "slug": "thesis",
    "path": "posts/thesis",
    "filePath": "thesis.mdx",
    "toc": [],
    "readingTime": {
      "text": "2 min read",
      "minutes": 1.795,
      "time": 107700,
      "words": 359
    },
    "structuredData": {
      "@context": "https://schema.org",
      "@type": "BlogPosting",
      "headline": "My Master’s Thesis: 12 years later",
      "datePublished": "2023-01-23T00:00:00.000Z",
      "dateModified": "2023-01-23T00:00:00.000Z",
      "description": "Looking back at my post graduate dissertation",
      "image": "/static/images/twitter-card.png",
      "url": "https://arjunrao.co/posts/thesis"
    }
  },
  {
    "title": "Thinking like an Engineer",
    "date": "2023-01-21T00:00:00.000Z",
    "tags": [
      "engineer",
      "work"
    ],
    "lastmod": undefined,
    "draft": false,
    "summary": "The pros and cons of structured thinking",
    "images": [
      "/static/images/think.png"
    ],
    "authors": undefined,
    "layout": undefined,
    "bibliography": undefined,
    "canonicalUrl": undefined,
    "content": "Engineers are known for their structured thinking. This is useful due to the fact that building complex systems is like putting together assembling building blocks together. In order to organize those blocks in a way that don’t collapse, it is important to calculate the impact of each decision that gets made along the way.\n\nStructured thinking can be done through processes like Agile sprint planning and daily standups or logically breaking down things into their most atomic parts to be composed back up into something bigger. These can be extremely powerful techniques to solve problems systematically at large out in the world.\n\n\nHowever, the downfall of being too rigid with structured thinking is to not flow with the vagaries of the external world. While most people don’t like surprises, Engineers especially don’t like surprises when it comes to things that we are working on. The vagaries I refer to could include reacting to high pressure scenarios that come out of the blue, and have a short time within which they need to be resolved.\n\nWhile breaking things down into their atomic unit and starting to problem solve can be hugely helpful in these scenarios, what is equally as important is having the right emotional quotient or the mental attitude towards how you approach and emerge out of the problem. Having the right resolve and demeanour to be able to react to spur-of-the-moment issues and resolve them, while maintaining composure, is a killer attribute for Engineers to have, in addition to the way we think about problem solving.",
    "_id": "thinking.mdx",
    "_raw": {
      "flattenedPath": "thinking"
    },
    "body": {
      "raw": "Engineers are known for their structured thinking. This is useful due to the fact that building complex systems is like putting together assembling building blocks together. In order to organize those blocks in a way that don’t collapse, it is important to calculate the impact of each decision that gets made along the way.\n\nStructured thinking can be done through processes like Agile sprint planning and daily standups or logically breaking down things into their most atomic parts to be composed back up into something bigger. These can be extremely powerful techniques to solve problems systematically at large out in the world.\n\n\nHowever, the downfall of being too rigid with structured thinking is to not flow with the vagaries of the external world. While most people don’t like surprises, Engineers especially don’t like surprises when it comes to things that we are working on. The vagaries I refer to could include reacting to high pressure scenarios that come out of the blue, and have a short time within which they need to be resolved.\n\nWhile breaking things down into their atomic unit and starting to problem solve can be hugely helpful in these scenarios, what is equally as important is having the right emotional quotient or the mental attitude towards how you approach and emerge out of the problem. Having the right resolve and demeanour to be able to react to spur-of-the-moment issues and resolve them, while maintaining composure, is a killer attribute for Engineers to have, in addition to the way we think about problem solving.",
      "code": "Engineers are known for their structured thinking. This is useful due to the fact that building complex systems is like putting together assembling building blocks together. In order to organize those blocks in a way that don’t collapse, it is important to calculate the impact of each decision that gets made along the way.\n\nStructured thinking can be done through processes like Agile sprint planning and daily standups or logically breaking down things into their most atomic parts to be composed back up into something bigger. These can be extremely powerful techniques to solve problems systematically at large out in the world.\n\n\nHowever, the downfall of being too rigid with structured thinking is to not flow with the vagaries of the external world. While most people don’t like surprises, Engineers especially don’t like surprises when it comes to things that we are working on. The vagaries I refer to could include reacting to high pressure scenarios that come out of the blue, and have a short time within which they need to be resolved.\n\nWhile breaking things down into their atomic unit and starting to problem solve can be hugely helpful in these scenarios, what is equally as important is having the right emotional quotient or the mental attitude towards how you approach and emerge out of the problem. Having the right resolve and demeanour to be able to react to spur-of-the-moment issues and resolve them, while maintaining composure, is a killer attribute for Engineers to have, in addition to the way we think about problem solving."
    },
    "slug": "thinking",
    "path": "posts/thinking",
    "filePath": "thinking.mdx",
    "toc": [],
    "readingTime": {
      "text": "2 min read",
      "minutes": 1.285,
      "time": 77100,
      "words": 257
    },
    "structuredData": {
      "@context": "https://schema.org",
      "@type": "BlogPosting",
      "headline": "Thinking like an Engineer",
      "datePublished": "2023-01-21T00:00:00.000Z",
      "dateModified": "2023-01-21T00:00:00.000Z",
      "description": "The pros and cons of structured thinking",
      "image": "/static/images/think.png",
      "url": "https://arjunrao.co/posts/thinking"
    }
  },
  {
    "title": "Thought cloud",
    "date": "2015-03-19T00:00:00.000Z",
    "tags": [
      "philosophy",
      "book",
      "reflection"
    ],
    "lastmod": undefined,
    "draft": false,
    "summary": "Clouds of topics to talk about",
    "images": undefined,
    "authors": undefined,
    "layout": undefined,
    "bibliography": undefined,
    "canonicalUrl": undefined,
    "content": "It isn't easy choosing what issues I want to talk about in depth.  The conflict that arises is between the sheer volume of thoughts I have v/s what it is I truly believe in. I think I will dip into the pool of topics I have in mind as of now and just pick one of them randomly. I feel fairly strongly about each of these topics so it might not be a bad start.\nThis is my thought cloud for now. Let's see where it takes me.\n\n- Governing lands and peoples. What does it mean to wield power and what is the purpose of it?\n- Bringing organization to chaos. Chaos itself doesn't mean a complete breakdown of human society. It could just mean an amalgam of ideas that grew organically that just did not pan out \"correctly\"\n- What does it mean to be truly competitive in a marketplace? Are free markets the solution or is the idea of a monopoly to be held in such contempt that we do not even humor the thought?\n- What makes a society truly world-class? How do you mix culture/heritage with the advances in technology so that you have a balanced society with the right recipe? I think I might use Bombay/Maharashtra as a sample case to hone in on specifics.\n- Track my development progress on an idea that I have had for months but due to sheer procrastination/ lack of incentives has moved at the speed of a dried up glacier. Perhaps subjecting my progress to the online world, might just kickstart me into doing something productive.",
    "_id": "thought-cloud.mdx",
    "_raw": {
      "flattenedPath": "thought-cloud"
    },
    "body": {
      "raw": "It isn't easy choosing what issues I want to talk about in depth.  The conflict that arises is between the sheer volume of thoughts I have v/s what it is I truly believe in. I think I will dip into the pool of topics I have in mind as of now and just pick one of them randomly. I feel fairly strongly about each of these topics so it might not be a bad start.\nThis is my thought cloud for now. Let's see where it takes me.\n\n- Governing lands and peoples. What does it mean to wield power and what is the purpose of it?\n- Bringing organization to chaos. Chaos itself doesn't mean a complete breakdown of human society. It could just mean an amalgam of ideas that grew organically that just did not pan out \"correctly\"\n- What does it mean to be truly competitive in a marketplace? Are free markets the solution or is the idea of a monopoly to be held in such contempt that we do not even humor the thought?\n- What makes a society truly world-class? How do you mix culture/heritage with the advances in technology so that you have a balanced society with the right recipe? I think I might use Bombay/Maharashtra as a sample case to hone in on specifics.\n- Track my development progress on an idea that I have had for months but due to sheer procrastination/ lack of incentives has moved at the speed of a dried up glacier. Perhaps subjecting my progress to the online world, might just kickstart me into doing something productive.",
      "code": "It isn't easy choosing what issues I want to talk about in depth.  The conflict that arises is between the sheer volume of thoughts I have v/s what it is I truly believe in. I think I will dip into the pool of topics I have in mind as of now and just pick one of them randomly. I feel fairly strongly about each of these topics so it might not be a bad start.\nThis is my thought cloud for now. Let's see where it takes me.\n\n- Governing lands and peoples. What does it mean to wield power and what is the purpose of it?\n- Bringing organization to chaos. Chaos itself doesn't mean a complete breakdown of human society. It could just mean an amalgam of ideas that grew organically that just did not pan out \"correctly\"\n- What does it mean to be truly competitive in a marketplace? Are free markets the solution or is the idea of a monopoly to be held in such contempt that we do not even humor the thought?\n- What makes a society truly world-class? How do you mix culture/heritage with the advances in technology so that you have a balanced society with the right recipe? I think I might use Bombay/Maharashtra as a sample case to hone in on specifics.\n- Track my development progress on an idea that I have had for months but due to sheer procrastination/ lack of incentives has moved at the speed of a dried up glacier. Perhaps subjecting my progress to the online world, might just kickstart me into doing something productive."
    },
    "slug": "thought-cloud",
    "path": "posts/thought-cloud",
    "filePath": "thought-cloud.mdx",
    "toc": [],
    "readingTime": {
      "text": "2 min read",
      "minutes": 1.335,
      "time": 80100,
      "words": 267
    },
    "structuredData": {
      "@context": "https://schema.org",
      "@type": "BlogPosting",
      "headline": "Thought cloud",
      "datePublished": "2015-03-19T00:00:00.000Z",
      "dateModified": "2015-03-19T00:00:00.000Z",
      "description": "Clouds of topics to talk about",
      "image": "/static/images/twitter-card.png",
      "url": "https://arjunrao.co/posts/thought-cloud"
    }
  },
  {
    "title": "Using Tiger Teams to Solve Problems and Create an Environment for Learning",
    "date": "2020-06-24T00:00:00.000Z",
    "tags": [
      "leadership",
      "work"
    ],
    "lastmod": undefined,
    "draft": false,
    "summary": "Putting together a dedicated group to successfully address a crucial problem",
    "images": undefined,
    "authors": undefined,
    "layout": undefined,
    "bibliography": undefined,
    "canonicalUrl": undefined,
    "content": "_(This article was originally published on [PlatoHQ](https://www.platohq.com/resources/using-tiger-teams-to-solve-problems-and-create-an-environment-for-learning-317437887))_\n\nArjun Rao is the Director of Engineering at Place Exchange. Here, he talks about how he assembled a tiger team, which is a specialized, cross-functional team brought together to fix or investigate a critical issue, and how that team helped resolve a specific problem within a short period of time.\n\n## Problem\n\nPlace Exchange is making Out of Home advertising truly programmatic. As a result, a lot of our bread and butter is processing transactions and serving ads. It is critical in nature and therefore expects very high up-times, so that we can continuously receive and process requests to serve ads on out-of-home screens.\n\nOver the back half of last year, there was a heavy increase in traffic coming our way. We noticed that one of our services critical to ad serving began to feel the load. This didn’t cause any SLA-related issues, but were severe enough for me to decide it was a problem worth solving, so as to not run into it in the future.\n\n## Actions taken\n\n### Investigation\n\nIn the time between the two traffic spikes in September, before the tiger team was put together, we poked around to see whether or not there were small steps we could take to solve the problem or if it required a more focused effort. This exercise helped us understand that the root cause of the problem was increased strain on the database causing performance issues.\n\n### Critical Next Steps\n\nTuning database performance, either by optimizing SQL queries or tinkering with database parameters, is a hard problem and not something everyone is familiar with. To tackle that, I assembled a tiger team composed of four senior members of the staff. By the beginning of August, these engineers knew what the stack looked like and put their heads together to figure out how to solve the problem.\n\nWhen you want to solve such a complex problem within a short period of time in order to gain actionable wins, you need to ensure certain key aspects are in place. One of them was to create clear objectives. For a three week window to solve this issue, we came up with three objectives -\n\n1. How do we improve instrumentation in our stack so that we can have some metrics in place to better understand what causes these issues to surface?\n2. Are there short term fixes we can implement to alleviate the situation?\n3. What long term proposals should we present? Once the three week period is over, this would help the teams to work on stabilizing and scaling out the system.\n\nMaintaining transparent communications was another key ingredient. We used Slack for asynchronous conversations, and had a formal, once-a-week reconvene by video conference. In conjunction with our RCA (root cause analysis) observations after the two high traffic spikes, we had few action items to take away. During the tiger team kickoff, in order to come up with an actionable list of items the team could work on -\n\nWe stated everything we knew; clustering patterns together and seeing where we could get some quick wins.\nWe came up with a list of metrics to be created/updated, to provide both early warning indications, as well as better insight into system behavior. We identified several other tasks to be tackled by this tiger team, with the end goal of seeing if our changes would result in observable differences.\n\nSince that three week period, we haven’t seen any notable spikes correlated with our initial observations, and our scale since then has seen a consistent increase. So far so good, but we have also been implementing some of those long term proposals to keep the ball rolling forward.\n\n## Lessons learned\n\n- You want the people who are solving the problem to be focused on what they are doing without distractions. Being able to free them up and have them direct their attention on a new project that came out of nowhere, can be complicated.\n- You need to make sure you have the right people to solve the project in an urgent manner. As you run your hiring process, you should ask yourself, ‘Do we have enough bench strength across the team, in the event we come across that we might not be able to foresee?’ It’s helpful to have organizational slack for the flexibility to pull people to solve critical problems. If the teams are being run too thin, then you can’t switch your team’s focus, as it will be very disruptive and will result in being counterproductive to the business goals. Your team needs to understand why it’s an important problem to solve and that there is enough breadth in the team to handle this, in addition to scheduled work. It was very cool to see our own team come together like that.\n- At Place Exchange Engineering, we follow a “pull policy\", where people pull whatever work they would do next. Pushing work down to people, in a way where they feel like they have to do it, does not create the right incentives.\n- If it’s a timeboxed effort, which has a deadline, it is good to set very clear expectations and objectives from the get-go. Set some lightweight processes such as a Slack channel or some other medium, to post and share updates, both within the team and to other stakeholders, all through the process.\n- In general, we make an effort to distribute findings throughout the engineering organization, so that the same people don’t get tapped when similar situations come up the next time. We create an environment of learning so that our teams are able to keep iterating and improving their systems. Disseminating context about why we created the tiger team and what outcomes it created for everybody else, was a useful exercise in teamwide awareness as well as preparing ourselves for the future.",
    "_id": "tiger-team.mdx",
    "_raw": {
      "flattenedPath": "tiger-team"
    },
    "body": {
      "raw": "_(This article was originally published on [PlatoHQ](https://www.platohq.com/resources/using-tiger-teams-to-solve-problems-and-create-an-environment-for-learning-317437887))_\n\nArjun Rao is the Director of Engineering at Place Exchange. Here, he talks about how he assembled a tiger team, which is a specialized, cross-functional team brought together to fix or investigate a critical issue, and how that team helped resolve a specific problem within a short period of time.\n\n## Problem\n\nPlace Exchange is making Out of Home advertising truly programmatic. As a result, a lot of our bread and butter is processing transactions and serving ads. It is critical in nature and therefore expects very high up-times, so that we can continuously receive and process requests to serve ads on out-of-home screens.\n\nOver the back half of last year, there was a heavy increase in traffic coming our way. We noticed that one of our services critical to ad serving began to feel the load. This didn’t cause any SLA-related issues, but were severe enough for me to decide it was a problem worth solving, so as to not run into it in the future.\n\n## Actions taken\n\n### Investigation\n\nIn the time between the two traffic spikes in September, before the tiger team was put together, we poked around to see whether or not there were small steps we could take to solve the problem or if it required a more focused effort. This exercise helped us understand that the root cause of the problem was increased strain on the database causing performance issues.\n\n### Critical Next Steps\n\nTuning database performance, either by optimizing SQL queries or tinkering with database parameters, is a hard problem and not something everyone is familiar with. To tackle that, I assembled a tiger team composed of four senior members of the staff. By the beginning of August, these engineers knew what the stack looked like and put their heads together to figure out how to solve the problem.\n\nWhen you want to solve such a complex problem within a short period of time in order to gain actionable wins, you need to ensure certain key aspects are in place. One of them was to create clear objectives. For a three week window to solve this issue, we came up with three objectives -\n\n1. How do we improve instrumentation in our stack so that we can have some metrics in place to better understand what causes these issues to surface?\n2. Are there short term fixes we can implement to alleviate the situation?\n3. What long term proposals should we present? Once the three week period is over, this would help the teams to work on stabilizing and scaling out the system.\n\nMaintaining transparent communications was another key ingredient. We used Slack for asynchronous conversations, and had a formal, once-a-week reconvene by video conference. In conjunction with our RCA (root cause analysis) observations after the two high traffic spikes, we had few action items to take away. During the tiger team kickoff, in order to come up with an actionable list of items the team could work on -\n\nWe stated everything we knew; clustering patterns together and seeing where we could get some quick wins.\nWe came up with a list of metrics to be created/updated, to provide both early warning indications, as well as better insight into system behavior. We identified several other tasks to be tackled by this tiger team, with the end goal of seeing if our changes would result in observable differences.\n\nSince that three week period, we haven’t seen any notable spikes correlated with our initial observations, and our scale since then has seen a consistent increase. So far so good, but we have also been implementing some of those long term proposals to keep the ball rolling forward.\n\n## Lessons learned\n\n- You want the people who are solving the problem to be focused on what they are doing without distractions. Being able to free them up and have them direct their attention on a new project that came out of nowhere, can be complicated.\n- You need to make sure you have the right people to solve the project in an urgent manner. As you run your hiring process, you should ask yourself, ‘Do we have enough bench strength across the team, in the event we come across that we might not be able to foresee?’ It’s helpful to have organizational slack for the flexibility to pull people to solve critical problems. If the teams are being run too thin, then you can’t switch your team’s focus, as it will be very disruptive and will result in being counterproductive to the business goals. Your team needs to understand why it’s an important problem to solve and that there is enough breadth in the team to handle this, in addition to scheduled work. It was very cool to see our own team come together like that.\n- At Place Exchange Engineering, we follow a “pull policy\", where people pull whatever work they would do next. Pushing work down to people, in a way where they feel like they have to do it, does not create the right incentives.\n- If it’s a timeboxed effort, which has a deadline, it is good to set very clear expectations and objectives from the get-go. Set some lightweight processes such as a Slack channel or some other medium, to post and share updates, both within the team and to other stakeholders, all through the process.\n- In general, we make an effort to distribute findings throughout the engineering organization, so that the same people don’t get tapped when similar situations come up the next time. We create an environment of learning so that our teams are able to keep iterating and improving their systems. Disseminating context about why we created the tiger team and what outcomes it created for everybody else, was a useful exercise in teamwide awareness as well as preparing ourselves for the future.",
      "code": "_(This article was originally published on [PlatoHQ](https://www.platohq.com/resources/using-tiger-teams-to-solve-problems-and-create-an-environment-for-learning-317437887))_\n\nArjun Rao is the Director of Engineering at Place Exchange. Here, he talks about how he assembled a tiger team, which is a specialized, cross-functional team brought together to fix or investigate a critical issue, and how that team helped resolve a specific problem within a short period of time.\n\n## Problem\n\nPlace Exchange is making Out of Home advertising truly programmatic. As a result, a lot of our bread and butter is processing transactions and serving ads. It is critical in nature and therefore expects very high up-times, so that we can continuously receive and process requests to serve ads on out-of-home screens.\n\nOver the back half of last year, there was a heavy increase in traffic coming our way. We noticed that one of our services critical to ad serving began to feel the load. This didn’t cause any SLA-related issues, but were severe enough for me to decide it was a problem worth solving, so as to not run into it in the future.\n\n## Actions taken\n\n### Investigation\n\nIn the time between the two traffic spikes in September, before the tiger team was put together, we poked around to see whether or not there were small steps we could take to solve the problem or if it required a more focused effort. This exercise helped us understand that the root cause of the problem was increased strain on the database causing performance issues.\n\n### Critical Next Steps\n\nTuning database performance, either by optimizing SQL queries or tinkering with database parameters, is a hard problem and not something everyone is familiar with. To tackle that, I assembled a tiger team composed of four senior members of the staff. By the beginning of August, these engineers knew what the stack looked like and put their heads together to figure out how to solve the problem.\n\nWhen you want to solve such a complex problem within a short period of time in order to gain actionable wins, you need to ensure certain key aspects are in place. One of them was to create clear objectives. For a three week window to solve this issue, we came up with three objectives -\n\n1. How do we improve instrumentation in our stack so that we can have some metrics in place to better understand what causes these issues to surface?\n2. Are there short term fixes we can implement to alleviate the situation?\n3. What long term proposals should we present? Once the three week period is over, this would help the teams to work on stabilizing and scaling out the system.\n\nMaintaining transparent communications was another key ingredient. We used Slack for asynchronous conversations, and had a formal, once-a-week reconvene by video conference. In conjunction with our RCA (root cause analysis) observations after the two high traffic spikes, we had few action items to take away. During the tiger team kickoff, in order to come up with an actionable list of items the team could work on -\n\nWe stated everything we knew; clustering patterns together and seeing where we could get some quick wins.\nWe came up with a list of metrics to be created/updated, to provide both early warning indications, as well as better insight into system behavior. We identified several other tasks to be tackled by this tiger team, with the end goal of seeing if our changes would result in observable differences.\n\nSince that three week period, we haven’t seen any notable spikes correlated with our initial observations, and our scale since then has seen a consistent increase. So far so good, but we have also been implementing some of those long term proposals to keep the ball rolling forward.\n\n## Lessons learned\n\n- You want the people who are solving the problem to be focused on what they are doing without distractions. Being able to free them up and have them direct their attention on a new project that came out of nowhere, can be complicated.\n- You need to make sure you have the right people to solve the project in an urgent manner. As you run your hiring process, you should ask yourself, ‘Do we have enough bench strength across the team, in the event we come across that we might not be able to foresee?’ It’s helpful to have organizational slack for the flexibility to pull people to solve critical problems. If the teams are being run too thin, then you can’t switch your team’s focus, as it will be very disruptive and will result in being counterproductive to the business goals. Your team needs to understand why it’s an important problem to solve and that there is enough breadth in the team to handle this, in addition to scheduled work. It was very cool to see our own team come together like that.\n- At Place Exchange Engineering, we follow a “pull policy\", where people pull whatever work they would do next. Pushing work down to people, in a way where they feel like they have to do it, does not create the right incentives.\n- If it’s a timeboxed effort, which has a deadline, it is good to set very clear expectations and objectives from the get-go. Set some lightweight processes such as a Slack channel or some other medium, to post and share updates, both within the team and to other stakeholders, all through the process.\n- In general, we make an effort to distribute findings throughout the engineering organization, so that the same people don’t get tapped when similar situations come up the next time. We create an environment of learning so that our teams are able to keep iterating and improving their systems. Disseminating context about why we created the tiger team and what outcomes it created for everybody else, was a useful exercise in teamwide awareness as well as preparing ourselves for the future."
    },
    "slug": "tiger-team",
    "path": "posts/tiger-team",
    "filePath": "tiger-team.mdx",
    "toc": [],
    "readingTime": {
      "text": "5 min read",
      "minutes": 4.925,
      "time": 295500,
      "words": 985
    },
    "structuredData": {
      "@context": "https://schema.org",
      "@type": "BlogPosting",
      "headline": "Using Tiger Teams to Solve Problems and Create an Environment for Learning",
      "datePublished": "2020-06-24T00:00:00.000Z",
      "dateModified": "2020-06-24T00:00:00.000Z",
      "description": "Putting together a dedicated group to successfully address a crucial problem",
      "image": "/static/images/twitter-card.png",
      "url": "https://arjunrao.co/posts/tiger-team"
    }
  },
  {
    "title": "The Quintessence of Travel",
    "date": "2016-01-25T00:00:00.000Z",
    "tags": [
      "travel"
    ],
    "lastmod": undefined,
    "draft": false,
    "summary": "Having the right equipment to capture the important moments",
    "images": undefined,
    "authors": undefined,
    "layout": undefined,
    "bibliography": undefined,
    "canonicalUrl": undefined,
    "content": "> The traveler sees what he sees.  The tourist sees what he has come to see. -G.K. Chesterton\n\nA question I spend far too much time thinking about, is how do I become a better traveler and avoid the pitfalls of becoming a tourist. While this topic of discussion could diverge along multiple paths, the train of thought specifically that I am talking about is, reminiscing about a particular travel in its entirety. The question, then is, what does it mean to capture the essence of a trip? Given the technology and tools at our disposal today, there are certain major shortcomings in our ability to weave a complete fabric of our travelogue.\nFirst and foremost among these is a sense of food/taste. You could argue of course, that taking pictures or videos of the food we partake in and the libations we consume, are sufficient in giving a sense of the cuisine. However, I am talking more about the actual taste of the food being captured, not just the visualizations. Perhaps, there will come a day when this will be possible.\nSecond on the list, is a sense of smell. It has been found that smell is among the strongest senses to trigger past memories. Be it the alpine scent of the mountains or the fresh aroma of that coffee brewing in that cafe you went to, there is literally no way, at the moment, that we can capture smell for future reference.\nThen there is the \"X-factor\" of a trip. Something that cannot be described in a physical way but is more of a metaphysical sensation. It is the collusion of events that led the dominoes to fall in exactly the right sequence that made the trip as memorable as it ended up being. Being able to quantify that, lies beyond the realm of this discussion and is something that will require its own forum.\nThe low-hanging fruits are, of course, pictures and videos. While they capture two of the senses, sight and sound, capturing the right moments in the apropos way, is no easy feat. For example, when I go on trips, I will take a slew of photos, but if I were to be objective about what I have shot, there will be no more than 10-20 \"good\" photos. However, there is no doubt that all the pictures in totality, provide context to where you were and what you were doing, irrespective of picture quality.\nOne thing that I have noticed about the way I document travel is that I do not take near enough as many videos as I should. I am increasingly coming to the conclusion that videos are a lot more valuable to recreate travel memories, because re-watching them rewinds time a whole lot more effectively than pictures do. I love photography and nothing will stop me from taking crisp shots of the moments I deem important, but I will definitely attempt to overlay more videos to my collection of travel footage. The downside of taking a lot of videos is dealing with a deluge of video footage and having to sift through all of that noise to find the moments that actually matter. As with everything, moderation is key and ascertaining what needs to be captured in video is very important. Unless you don't mind watching hours of travel footage in your video-editing software-du-jour.\nThere are a plethora of picture/video apps out there on the iPhone and the Android, that try to serve a niche they claim to accomodate. For example, apps like Periscope and Meerkat cater to real time broadcasting of events, whereas apps like Vine cater more to the creation of repeatable gifs that make memories humorous/memorable. When we have all these implements, it makes me wonder if there is a way to use them, in their respective scenarios to come up with compelling and memorable travel footage.\nDisclaimer : This is a humble attempt at curating a list to document my travel. This is, by no means, a way to tell other fellow wanderlusts to capture moments of their own travel.  These opinions are purely my own and very likely will not fit your situation.\nDisclaimer 2 : I don't intend to do all of these at the same time, and no I will not be the guy who has a 100 gadgets upon him trying to capture \"that\" moment while missing out on it as it is happening IRL. \nDisclaimer 3 : I expect this to be an ever-changing list, throwing away unnecessary techniques and adding more effective ones as times go on. The only way to figure this out by testing all of these methods a posteriori. The list of applications that can be used is also not exhaustive, and I have only picked the ones that I feel are relevant to me, at the moment.\nGetting into the crux of this post, I tried to come up with a list of devices and applications to use for \"the apt scenario\". I tried to cover a swath of possible scenarios, but I don't believe this is the be-all and end-all. I have tried to pair a situation with the appropriate equipment to almost provide a Cliff Notes version of bottling travel time.\nI wanted to make a few pointers about the list given below. I currently own a Sony A6000,  but as they say, the best camera is the one you have with you. So this could be a point and shoot, DSLR or a mobile phone. When I refer to the \"media\" associated with a category of photos/videos, I mean just that. It is the medium or media that you want to broadcast your memories ( post-processed  or otherwise ) onto.\n\n## Photos\n\n### Scenario  -  Scenic / Picturesque / Still \n\n- Device : Sony A6000\n- Media  : 500px, Instagram\n\n### Scenario - On-the-go / Spur-of-the-moment aka No time to setup\n\n- Device : iPhone / Android\n- Media  : Instagram\n\n## Videos\n\n### iPhone\n\n#### Scenario - On-the-go video capture/Short and Impulsive/of-the-moment( Audio required )\n\n- App : iPhone/Android camera\n- Media  : Youtube( VLogs )\n\n#### Scenario - Stitching  moments (Audio required)\n\n- App : Vine\n- Media : Vine / Instagram\n\n#### Scenario - Creating short timelapse (No audio required)\n\n- App : Hyperlapse\n- Media : Instagram\n\n#### Scenario - Broadcast location and activity (Audio required) \n\n- App : Periscope\n- Media : Periscope\n\n### Sony A6000\n\n#### Scenario - Scenic/ Still  video capture \n\n- App     : Camera video\n- Media  : Youtube\n\n#### Scenario - Long timelapses \n\n- App : Timelapse app\n- Media : Youtube\n\n### GoPro\n\n#### Scenario - Action / Motion \n\n- App    : Camera video\n- Media : Youtube\n\n## Location based logging\n\n- Swarm\n- Moves ( Or some other motion tracking app )\n- Writing a travelogue ( Book )\n- Writing a travelogue online ( Blogging/Vlogging online )\n- Wayn ( Social networking for travellers )\n\n## Collecting memories \n\n- Ticket stubs\n- Postcards\n- Magnets\n- Maps\n- Passes\n- Money\n- and on and on and on.....\n\nIf you want to see what other  people, a lot more savvy than me, are doing about their travel plans, you should visit [here](https://www.pinterest.com/explore/travel-memories/\">https://www.pinterest.com/explore/travel-memories)\nThat is all she wrote. As I mentioned before, I do not consider this an exhaustive list, by any stretch of the imagination. As I come across more useful tools/gadgets/methodologies, I will try to encapsulate the moments of my trips in the most felicitous ways possible.\n\nUntil the next time,\n\nHappy Traveling!",
    "_id": "travel.mdx",
    "_raw": {
      "flattenedPath": "travel"
    },
    "body": {
      "raw": "> The traveler sees what he sees.  The tourist sees what he has come to see. -G.K. Chesterton\n\nA question I spend far too much time thinking about, is how do I become a better traveler and avoid the pitfalls of becoming a tourist. While this topic of discussion could diverge along multiple paths, the train of thought specifically that I am talking about is, reminiscing about a particular travel in its entirety. The question, then is, what does it mean to capture the essence of a trip? Given the technology and tools at our disposal today, there are certain major shortcomings in our ability to weave a complete fabric of our travelogue.\nFirst and foremost among these is a sense of food/taste. You could argue of course, that taking pictures or videos of the food we partake in and the libations we consume, are sufficient in giving a sense of the cuisine. However, I am talking more about the actual taste of the food being captured, not just the visualizations. Perhaps, there will come a day when this will be possible.\nSecond on the list, is a sense of smell. It has been found that smell is among the strongest senses to trigger past memories. Be it the alpine scent of the mountains or the fresh aroma of that coffee brewing in that cafe you went to, there is literally no way, at the moment, that we can capture smell for future reference.\nThen there is the \"X-factor\" of a trip. Something that cannot be described in a physical way but is more of a metaphysical sensation. It is the collusion of events that led the dominoes to fall in exactly the right sequence that made the trip as memorable as it ended up being. Being able to quantify that, lies beyond the realm of this discussion and is something that will require its own forum.\nThe low-hanging fruits are, of course, pictures and videos. While they capture two of the senses, sight and sound, capturing the right moments in the apropos way, is no easy feat. For example, when I go on trips, I will take a slew of photos, but if I were to be objective about what I have shot, there will be no more than 10-20 \"good\" photos. However, there is no doubt that all the pictures in totality, provide context to where you were and what you were doing, irrespective of picture quality.\nOne thing that I have noticed about the way I document travel is that I do not take near enough as many videos as I should. I am increasingly coming to the conclusion that videos are a lot more valuable to recreate travel memories, because re-watching them rewinds time a whole lot more effectively than pictures do. I love photography and nothing will stop me from taking crisp shots of the moments I deem important, but I will definitely attempt to overlay more videos to my collection of travel footage. The downside of taking a lot of videos is dealing with a deluge of video footage and having to sift through all of that noise to find the moments that actually matter. As with everything, moderation is key and ascertaining what needs to be captured in video is very important. Unless you don't mind watching hours of travel footage in your video-editing software-du-jour.\nThere are a plethora of picture/video apps out there on the iPhone and the Android, that try to serve a niche they claim to accomodate. For example, apps like Periscope and Meerkat cater to real time broadcasting of events, whereas apps like Vine cater more to the creation of repeatable gifs that make memories humorous/memorable. When we have all these implements, it makes me wonder if there is a way to use them, in their respective scenarios to come up with compelling and memorable travel footage.\nDisclaimer : This is a humble attempt at curating a list to document my travel. This is, by no means, a way to tell other fellow wanderlusts to capture moments of their own travel.  These opinions are purely my own and very likely will not fit your situation.\nDisclaimer 2 : I don't intend to do all of these at the same time, and no I will not be the guy who has a 100 gadgets upon him trying to capture \"that\" moment while missing out on it as it is happening IRL. \nDisclaimer 3 : I expect this to be an ever-changing list, throwing away unnecessary techniques and adding more effective ones as times go on. The only way to figure this out by testing all of these methods a posteriori. The list of applications that can be used is also not exhaustive, and I have only picked the ones that I feel are relevant to me, at the moment.\nGetting into the crux of this post, I tried to come up with a list of devices and applications to use for \"the apt scenario\". I tried to cover a swath of possible scenarios, but I don't believe this is the be-all and end-all. I have tried to pair a situation with the appropriate equipment to almost provide a Cliff Notes version of bottling travel time.\nI wanted to make a few pointers about the list given below. I currently own a Sony A6000,  but as they say, the best camera is the one you have with you. So this could be a point and shoot, DSLR or a mobile phone. When I refer to the \"media\" associated with a category of photos/videos, I mean just that. It is the medium or media that you want to broadcast your memories ( post-processed  or otherwise ) onto.\n\n## Photos\n\n### Scenario  -  Scenic / Picturesque / Still \n\n- Device : Sony A6000\n- Media  : 500px, Instagram\n\n### Scenario - On-the-go / Spur-of-the-moment aka No time to setup\n\n- Device : iPhone / Android\n- Media  : Instagram\n\n## Videos\n\n### iPhone\n\n#### Scenario - On-the-go video capture/Short and Impulsive/of-the-moment( Audio required )\n\n- App : iPhone/Android camera\n- Media  : Youtube( VLogs )\n\n#### Scenario - Stitching  moments (Audio required)\n\n- App : Vine\n- Media : Vine / Instagram\n\n#### Scenario - Creating short timelapse (No audio required)\n\n- App : Hyperlapse\n- Media : Instagram\n\n#### Scenario - Broadcast location and activity (Audio required) \n\n- App : Periscope\n- Media : Periscope\n\n### Sony A6000\n\n#### Scenario - Scenic/ Still  video capture \n\n- App     : Camera video\n- Media  : Youtube\n\n#### Scenario - Long timelapses \n\n- App : Timelapse app\n- Media : Youtube\n\n### GoPro\n\n#### Scenario - Action / Motion \n\n- App    : Camera video\n- Media : Youtube\n\n## Location based logging\n\n- Swarm\n- Moves ( Or some other motion tracking app )\n- Writing a travelogue ( Book )\n- Writing a travelogue online ( Blogging/Vlogging online )\n- Wayn ( Social networking for travellers )\n\n## Collecting memories \n\n- Ticket stubs\n- Postcards\n- Magnets\n- Maps\n- Passes\n- Money\n- and on and on and on.....\n\nIf you want to see what other  people, a lot more savvy than me, are doing about their travel plans, you should visit [here](https://www.pinterest.com/explore/travel-memories/\">https://www.pinterest.com/explore/travel-memories)\nThat is all she wrote. As I mentioned before, I do not consider this an exhaustive list, by any stretch of the imagination. As I come across more useful tools/gadgets/methodologies, I will try to encapsulate the moments of my trips in the most felicitous ways possible.\n\nUntil the next time,\n\nHappy Traveling!",
      "code": "> The traveler sees what he sees.  The tourist sees what he has come to see. -G.K. Chesterton\n\nA question I spend far too much time thinking about, is how do I become a better traveler and avoid the pitfalls of becoming a tourist. While this topic of discussion could diverge along multiple paths, the train of thought specifically that I am talking about is, reminiscing about a particular travel in its entirety. The question, then is, what does it mean to capture the essence of a trip? Given the technology and tools at our disposal today, there are certain major shortcomings in our ability to weave a complete fabric of our travelogue.\nFirst and foremost among these is a sense of food/taste. You could argue of course, that taking pictures or videos of the food we partake in and the libations we consume, are sufficient in giving a sense of the cuisine. However, I am talking more about the actual taste of the food being captured, not just the visualizations. Perhaps, there will come a day when this will be possible.\nSecond on the list, is a sense of smell. It has been found that smell is among the strongest senses to trigger past memories. Be it the alpine scent of the mountains or the fresh aroma of that coffee brewing in that cafe you went to, there is literally no way, at the moment, that we can capture smell for future reference.\nThen there is the \"X-factor\" of a trip. Something that cannot be described in a physical way but is more of a metaphysical sensation. It is the collusion of events that led the dominoes to fall in exactly the right sequence that made the trip as memorable as it ended up being. Being able to quantify that, lies beyond the realm of this discussion and is something that will require its own forum.\nThe low-hanging fruits are, of course, pictures and videos. While they capture two of the senses, sight and sound, capturing the right moments in the apropos way, is no easy feat. For example, when I go on trips, I will take a slew of photos, but if I were to be objective about what I have shot, there will be no more than 10-20 \"good\" photos. However, there is no doubt that all the pictures in totality, provide context to where you were and what you were doing, irrespective of picture quality.\nOne thing that I have noticed about the way I document travel is that I do not take near enough as many videos as I should. I am increasingly coming to the conclusion that videos are a lot more valuable to recreate travel memories, because re-watching them rewinds time a whole lot more effectively than pictures do. I love photography and nothing will stop me from taking crisp shots of the moments I deem important, but I will definitely attempt to overlay more videos to my collection of travel footage. The downside of taking a lot of videos is dealing with a deluge of video footage and having to sift through all of that noise to find the moments that actually matter. As with everything, moderation is key and ascertaining what needs to be captured in video is very important. Unless you don't mind watching hours of travel footage in your video-editing software-du-jour.\nThere are a plethora of picture/video apps out there on the iPhone and the Android, that try to serve a niche they claim to accomodate. For example, apps like Periscope and Meerkat cater to real time broadcasting of events, whereas apps like Vine cater more to the creation of repeatable gifs that make memories humorous/memorable. When we have all these implements, it makes me wonder if there is a way to use them, in their respective scenarios to come up with compelling and memorable travel footage.\nDisclaimer : This is a humble attempt at curating a list to document my travel. This is, by no means, a way to tell other fellow wanderlusts to capture moments of their own travel.  These opinions are purely my own and very likely will not fit your situation.\nDisclaimer 2 : I don't intend to do all of these at the same time, and no I will not be the guy who has a 100 gadgets upon him trying to capture \"that\" moment while missing out on it as it is happening IRL. \nDisclaimer 3 : I expect this to be an ever-changing list, throwing away unnecessary techniques and adding more effective ones as times go on. The only way to figure this out by testing all of these methods a posteriori. The list of applications that can be used is also not exhaustive, and I have only picked the ones that I feel are relevant to me, at the moment.\nGetting into the crux of this post, I tried to come up with a list of devices and applications to use for \"the apt scenario\". I tried to cover a swath of possible scenarios, but I don't believe this is the be-all and end-all. I have tried to pair a situation with the appropriate equipment to almost provide a Cliff Notes version of bottling travel time.\nI wanted to make a few pointers about the list given below. I currently own a Sony A6000,  but as they say, the best camera is the one you have with you. So this could be a point and shoot, DSLR or a mobile phone. When I refer to the \"media\" associated with a category of photos/videos, I mean just that. It is the medium or media that you want to broadcast your memories ( post-processed  or otherwise ) onto.\n\n## Photos\n\n### Scenario  -  Scenic / Picturesque / Still \n\n- Device : Sony A6000\n- Media  : 500px, Instagram\n\n### Scenario - On-the-go / Spur-of-the-moment aka No time to setup\n\n- Device : iPhone / Android\n- Media  : Instagram\n\n## Videos\n\n### iPhone\n\n#### Scenario - On-the-go video capture/Short and Impulsive/of-the-moment( Audio required )\n\n- App : iPhone/Android camera\n- Media  : Youtube( VLogs )\n\n#### Scenario - Stitching  moments (Audio required)\n\n- App : Vine\n- Media : Vine / Instagram\n\n#### Scenario - Creating short timelapse (No audio required)\n\n- App : Hyperlapse\n- Media : Instagram\n\n#### Scenario - Broadcast location and activity (Audio required) \n\n- App : Periscope\n- Media : Periscope\n\n### Sony A6000\n\n#### Scenario - Scenic/ Still  video capture \n\n- App     : Camera video\n- Media  : Youtube\n\n#### Scenario - Long timelapses \n\n- App : Timelapse app\n- Media : Youtube\n\n### GoPro\n\n#### Scenario - Action / Motion \n\n- App    : Camera video\n- Media : Youtube\n\n## Location based logging\n\n- Swarm\n- Moves ( Or some other motion tracking app )\n- Writing a travelogue ( Book )\n- Writing a travelogue online ( Blogging/Vlogging online )\n- Wayn ( Social networking for travellers )\n\n## Collecting memories \n\n- Ticket stubs\n- Postcards\n- Magnets\n- Maps\n- Passes\n- Money\n- and on and on and on.....\n\nIf you want to see what other  people, a lot more savvy than me, are doing about their travel plans, you should visit [here](https://www.pinterest.com/explore/travel-memories/\">https://www.pinterest.com/explore/travel-memories)\nThat is all she wrote. As I mentioned before, I do not consider this an exhaustive list, by any stretch of the imagination. As I come across more useful tools/gadgets/methodologies, I will try to encapsulate the moments of my trips in the most felicitous ways possible.\n\nUntil the next time,\n\nHappy Traveling!"
    },
    "slug": "travel",
    "path": "posts/travel",
    "filePath": "travel.mdx",
    "toc": [],
    "readingTime": {
      "text": "7 min read",
      "minutes": 6.21,
      "time": 372600,
      "words": 1242
    },
    "structuredData": {
      "@context": "https://schema.org",
      "@type": "BlogPosting",
      "headline": "The Quintessence of Travel",
      "datePublished": "2016-01-25T00:00:00.000Z",
      "dateModified": "2016-01-25T00:00:00.000Z",
      "description": "Having the right equipment to capture the important moments",
      "image": "/static/images/twitter-card.png",
      "url": "https://arjunrao.co/posts/travel"
    }
  },
  {
    "title": "The Ultimate Net Worth Guide",
    "date": "2022-03-07T00:00:00.000Z",
    "tags": [
      "finances",
      "fire"
    ],
    "lastmod": undefined,
    "draft": false,
    "summary": "Using the right tool to track your net worth",
    "images": undefined,
    "authors": undefined,
    "layout": undefined,
    "bibliography": undefined,
    "canonicalUrl": undefined,
    "content": "> Take your first step to Financial Freedom\n\nBeing fiscally conservative and careful about money is something that was drilled into me from a very early age. One of the things I learned very quickly is to make sure I always knew how much money I had, which as I grew into adulthood translated to having a keen understanding of what are my investments and debts.\n\nI have created the Ultimate Net Worth Guide to provide a framework of measuring and understanding Net Worth as a tool to ensure you are able to achieve your financial goals in life. You can find out more at this link below -\n\n[![Ultimate Net Worth Guide](/static/images/unwg.png)](https://arjunrao87.gumroad.com/l/ultimate-net-worth-guide)\n\n## What is Net Worth?\n\nThe first step on this path of financial security is about as basic as it gets - merely inventory everything you have got. People smarter than me have a name for this and they call it “Net Worth”. This generally includes the following steps -\n\n- Go through all the different accounts you have\n- Count as positive things like cash in your account or stocks you might own - also known as Assets\n- Count as negative things like like credit card debt or mortgage you might be paying on your house - also known as Liabilities\n\nThere you have it, the sum total of your Assets and Liabilities is your Net Worth.\n\n![](/static/images/keyboard.jpeg)\n\n## Why is knowing your Net Worth important?\n\nMy fundamental approach to building wealth is how can I make my money work for me, instead of making me work for my money. Getting there takes discipline, and the first step on that path of discipline is to get a lay of the land - or in other words, know where the state of your finances stands currently. Once you get the inventory of your assets and liabilities, you can make informed decisions off that data whether its\n\n- “I need to divert more money towards payment of my credit card debt”\n- “I need to invest my cash into the stock market so it works for me”\n\nor any other decision that you have the agency to take on your path to financial freedom. Think of knowing your Net Worth as a map that will help dictate the course of your future actions.\n\n![](/static/images/road.jpeg)\n\nBy this point, I hope you understand the importance of keeping track of your Net Worth and how it can positively impact your future. I have been tracking my Net Worth for the past decade or so, and I have a system that works really well for me which I have decided to make available to others to embark upon this mission for themselves.\n\nAs a quick reminder, you can learn more about my system and purchase it through Gumroad here ⇒ [Ultimate Net Worth Guide](https://arjunrao87.gumroad.com/l/ultimate-net-worth-guide)\n\n## What does the Guide help with?\n\nThe Guide that I have built comes with insight that I have gained after over a decade of learning tricks of the trade of how you should view your own personal financial portfolio. I specifically call it a \"Guide\", because it is meant to be a resource that you can depend on - something that helps lead you to the future you want to secure.\n\nYou can use it in its literal sense, as I have baked in all the things I use to view my own finance - or you can use it as a guiding light on how you should think about getting to financial independence. There are many steps on the path to financial freedom, but you have to start somewhere, and my advice is to start with knowing and then tracking your Net Worth. Once you purchase this Guide, there are a lot more details about specific terminology or ways to think about headwinds (things that propel forward) and tailwinds (thinks that risk forward motion) to your Net Worth.\n\n## Who is this Guide meant for?\n\nFirst and foremost, this is meant for anyone who wants to get on the path to owning their financial destiny. Specifically -\n\n- If you have been meaning to get more financially responsible, but just don’t know where to start? This is meant for you\n- If you have been meaning to FIRE (be Financially Independent, and Retire Early) but haven’t quite figured how? This is meant for you.\n- If you want to own your own data, and don’t want to use 3rd party software to track this kind of information? This is meant for you.\n- If you are done treading water, and now want to overcome the inertia that has been holding you back? This is meant for you.\n\n![](/static/images/you.jpg)\n\n## Wanna know more?\n\nI hope to make available several other resources to help keep this journey up, and if there are any questions or thoughts that you have that you would like to see, let me know at @raoarjun on Twitter\n\n💥 Make sure you head to the link below, and set sail on your path to financial freedom!\n\n[![Ultimate Net Worth Guide](/static/images/unwg.png)](https://arjunrao87.gumroad.com/l/ultimate-net-worth-guide)",
    "_id": "ultimate-net-worth.mdx",
    "_raw": {
      "flattenedPath": "ultimate-net-worth"
    },
    "body": {
      "raw": "> Take your first step to Financial Freedom\n\nBeing fiscally conservative and careful about money is something that was drilled into me from a very early age. One of the things I learned very quickly is to make sure I always knew how much money I had, which as I grew into adulthood translated to having a keen understanding of what are my investments and debts.\n\nI have created the Ultimate Net Worth Guide to provide a framework of measuring and understanding Net Worth as a tool to ensure you are able to achieve your financial goals in life. You can find out more at this link below -\n\n[![Ultimate Net Worth Guide](/static/images/unwg.png)](https://arjunrao87.gumroad.com/l/ultimate-net-worth-guide)\n\n## What is Net Worth?\n\nThe first step on this path of financial security is about as basic as it gets - merely inventory everything you have got. People smarter than me have a name for this and they call it “Net Worth”. This generally includes the following steps -\n\n- Go through all the different accounts you have\n- Count as positive things like cash in your account or stocks you might own - also known as Assets\n- Count as negative things like like credit card debt or mortgage you might be paying on your house - also known as Liabilities\n\nThere you have it, the sum total of your Assets and Liabilities is your Net Worth.\n\n![](/static/images/keyboard.jpeg)\n\n## Why is knowing your Net Worth important?\n\nMy fundamental approach to building wealth is how can I make my money work for me, instead of making me work for my money. Getting there takes discipline, and the first step on that path of discipline is to get a lay of the land - or in other words, know where the state of your finances stands currently. Once you get the inventory of your assets and liabilities, you can make informed decisions off that data whether its\n\n- “I need to divert more money towards payment of my credit card debt”\n- “I need to invest my cash into the stock market so it works for me”\n\nor any other decision that you have the agency to take on your path to financial freedom. Think of knowing your Net Worth as a map that will help dictate the course of your future actions.\n\n![](/static/images/road.jpeg)\n\nBy this point, I hope you understand the importance of keeping track of your Net Worth and how it can positively impact your future. I have been tracking my Net Worth for the past decade or so, and I have a system that works really well for me which I have decided to make available to others to embark upon this mission for themselves.\n\nAs a quick reminder, you can learn more about my system and purchase it through Gumroad here ⇒ [Ultimate Net Worth Guide](https://arjunrao87.gumroad.com/l/ultimate-net-worth-guide)\n\n## What does the Guide help with?\n\nThe Guide that I have built comes with insight that I have gained after over a decade of learning tricks of the trade of how you should view your own personal financial portfolio. I specifically call it a \"Guide\", because it is meant to be a resource that you can depend on - something that helps lead you to the future you want to secure.\n\nYou can use it in its literal sense, as I have baked in all the things I use to view my own finance - or you can use it as a guiding light on how you should think about getting to financial independence. There are many steps on the path to financial freedom, but you have to start somewhere, and my advice is to start with knowing and then tracking your Net Worth. Once you purchase this Guide, there are a lot more details about specific terminology or ways to think about headwinds (things that propel forward) and tailwinds (thinks that risk forward motion) to your Net Worth.\n\n## Who is this Guide meant for?\n\nFirst and foremost, this is meant for anyone who wants to get on the path to owning their financial destiny. Specifically -\n\n- If you have been meaning to get more financially responsible, but just don’t know where to start? This is meant for you\n- If you have been meaning to FIRE (be Financially Independent, and Retire Early) but haven’t quite figured how? This is meant for you.\n- If you want to own your own data, and don’t want to use 3rd party software to track this kind of information? This is meant for you.\n- If you are done treading water, and now want to overcome the inertia that has been holding you back? This is meant for you.\n\n![](/static/images/you.jpg)\n\n## Wanna know more?\n\nI hope to make available several other resources to help keep this journey up, and if there are any questions or thoughts that you have that you would like to see, let me know at @raoarjun on Twitter\n\n💥 Make sure you head to the link below, and set sail on your path to financial freedom!\n\n[![Ultimate Net Worth Guide](/static/images/unwg.png)](https://arjunrao87.gumroad.com/l/ultimate-net-worth-guide)",
      "code": "> Take your first step to Financial Freedom\n\nBeing fiscally conservative and careful about money is something that was drilled into me from a very early age. One of the things I learned very quickly is to make sure I always knew how much money I had, which as I grew into adulthood translated to having a keen understanding of what are my investments and debts.\n\nI have created the Ultimate Net Worth Guide to provide a framework of measuring and understanding Net Worth as a tool to ensure you are able to achieve your financial goals in life. You can find out more at this link below -\n\n[![Ultimate Net Worth Guide](/static/images/unwg.png)](https://arjunrao87.gumroad.com/l/ultimate-net-worth-guide)\n\n## What is Net Worth?\n\nThe first step on this path of financial security is about as basic as it gets - merely inventory everything you have got. People smarter than me have a name for this and they call it “Net Worth”. This generally includes the following steps -\n\n- Go through all the different accounts you have\n- Count as positive things like cash in your account or stocks you might own - also known as Assets\n- Count as negative things like like credit card debt or mortgage you might be paying on your house - also known as Liabilities\n\nThere you have it, the sum total of your Assets and Liabilities is your Net Worth.\n\n![](/static/images/keyboard.jpeg)\n\n## Why is knowing your Net Worth important?\n\nMy fundamental approach to building wealth is how can I make my money work for me, instead of making me work for my money. Getting there takes discipline, and the first step on that path of discipline is to get a lay of the land - or in other words, know where the state of your finances stands currently. Once you get the inventory of your assets and liabilities, you can make informed decisions off that data whether its\n\n- “I need to divert more money towards payment of my credit card debt”\n- “I need to invest my cash into the stock market so it works for me”\n\nor any other decision that you have the agency to take on your path to financial freedom. Think of knowing your Net Worth as a map that will help dictate the course of your future actions.\n\n![](/static/images/road.jpeg)\n\nBy this point, I hope you understand the importance of keeping track of your Net Worth and how it can positively impact your future. I have been tracking my Net Worth for the past decade or so, and I have a system that works really well for me which I have decided to make available to others to embark upon this mission for themselves.\n\nAs a quick reminder, you can learn more about my system and purchase it through Gumroad here ⇒ [Ultimate Net Worth Guide](https://arjunrao87.gumroad.com/l/ultimate-net-worth-guide)\n\n## What does the Guide help with?\n\nThe Guide that I have built comes with insight that I have gained after over a decade of learning tricks of the trade of how you should view your own personal financial portfolio. I specifically call it a \"Guide\", because it is meant to be a resource that you can depend on - something that helps lead you to the future you want to secure.\n\nYou can use it in its literal sense, as I have baked in all the things I use to view my own finance - or you can use it as a guiding light on how you should think about getting to financial independence. There are many steps on the path to financial freedom, but you have to start somewhere, and my advice is to start with knowing and then tracking your Net Worth. Once you purchase this Guide, there are a lot more details about specific terminology or ways to think about headwinds (things that propel forward) and tailwinds (thinks that risk forward motion) to your Net Worth.\n\n## Who is this Guide meant for?\n\nFirst and foremost, this is meant for anyone who wants to get on the path to owning their financial destiny. Specifically -\n\n- If you have been meaning to get more financially responsible, but just don’t know where to start? This is meant for you\n- If you have been meaning to FIRE (be Financially Independent, and Retire Early) but haven’t quite figured how? This is meant for you.\n- If you want to own your own data, and don’t want to use 3rd party software to track this kind of information? This is meant for you.\n- If you are done treading water, and now want to overcome the inertia that has been holding you back? This is meant for you.\n\n![](/static/images/you.jpg)\n\n## Wanna know more?\n\nI hope to make available several other resources to help keep this journey up, and if there are any questions or thoughts that you have that you would like to see, let me know at @raoarjun on Twitter\n\n💥 Make sure you head to the link below, and set sail on your path to financial freedom!\n\n[![Ultimate Net Worth Guide](/static/images/unwg.png)](https://arjunrao87.gumroad.com/l/ultimate-net-worth-guide)"
    },
    "slug": "ultimate-net-worth",
    "path": "posts/ultimate-net-worth",
    "filePath": "ultimate-net-worth.mdx",
    "toc": [],
    "readingTime": {
      "text": "5 min read",
      "minutes": 4.235,
      "time": 254100,
      "words": 847
    },
    "structuredData": {
      "@context": "https://schema.org",
      "@type": "BlogPosting",
      "headline": "The Ultimate Net Worth Guide",
      "datePublished": "2022-03-07T00:00:00.000Z",
      "dateModified": "2022-03-07T00:00:00.000Z",
      "description": "Using the right tool to track your net worth",
      "image": "/static/images/twitter-card.png",
      "url": "https://arjunrao.co/posts/ultimate-net-worth"
    }
  },
  {
    "title": "Place Exchange & Venturefizz",
    "date": "2020-07-23T00:00:00.000Z",
    "tags": [
      "work",
      "interview",
      "leadership"
    ],
    "lastmod": undefined,
    "draft": false,
    "summary": "Place Exchange and its culture",
    "images": undefined,
    "authors": undefined,
    "layout": undefined,
    "bibliography": undefined,
    "canonicalUrl": undefined,
    "content": "VentureFizz is the leading authority for jobs & careers in the tech industry across Boston and NYC. I had a chance to chat with them about Place Exchange and it's culture. Go check it out [here](https://venturefizz.com/stories/nyc/engineering-spotlight-intersection)!\n\n🙌🏾",
    "_id": "venturefizz.mdx",
    "_raw": {
      "flattenedPath": "venturefizz"
    },
    "body": {
      "raw": "VentureFizz is the leading authority for jobs & careers in the tech industry across Boston and NYC. I had a chance to chat with them about Place Exchange and it's culture. Go check it out [here](https://venturefizz.com/stories/nyc/engineering-spotlight-intersection)!\n\n🙌🏾",
      "code": "VentureFizz is the leading authority for jobs & careers in the tech industry across Boston and NYC. I had a chance to chat with them about Place Exchange and it's culture. Go check it out [here](https://venturefizz.com/stories/nyc/engineering-spotlight-intersection)!\n\n🙌🏾"
    },
    "slug": "venturefizz",
    "path": "posts/venturefizz",
    "filePath": "venturefizz.mdx",
    "toc": [],
    "readingTime": {
      "text": "1 min read",
      "minutes": 0.185,
      "time": 11100,
      "words": 37
    },
    "structuredData": {
      "@context": "https://schema.org",
      "@type": "BlogPosting",
      "headline": "Place Exchange & Venturefizz",
      "datePublished": "2020-07-23T00:00:00.000Z",
      "dateModified": "2020-07-23T00:00:00.000Z",
      "description": "Place Exchange and its culture",
      "image": "/static/images/twitter-card.png",
      "url": "https://arjunrao.co/posts/venturefizz"
    }
  },
  {
    "title": "Website Redesign 2017",
    "date": "2017-02-09T00:00:00.000Z",
    "tags": [
      "technology",
      "frontend"
    ],
    "lastmod": undefined,
    "draft": false,
    "summary": "Redesigning my personal website",
    "images": undefined,
    "authors": undefined,
    "layout": undefined,
    "bibliography": undefined,
    "canonicalUrl": undefined,
    "content": "I want to document the process I went through to revamp my personal website. I'll walk through some of the design decisions as well as some of the mistakes ( at times horrendous ) that I made.\n\nI think it is important to have your own home page. You could have myriad reasons for having one, ranging from showcasing your talents, presenting it as an online resume or in my case, just a place that I could tinker with technologies that I do not use in my day job.\n\nThe first iteration of my home page was hosted on Heroku. For those who don't know how Heroku works, it's a PaaS( Platform as a service ). Now this is a handy tool for people who don't have their own infrastructure to deploy production applications. It's very similar to AWS in that regard except that it abstracts away many of the nitty gritty details that AWS requires to configure deployment of an application. Long story short, I chose Heroku because of its convenience factor and because I was on the Developer plan that was completely free! I built my website using Sparkjava which is a micro framework to create web applications. It is inspired by Sinatra, the Ruby framework. I am a big proponent of Sparkjava for prototyping applications and for a personal website that was just gonna serve static pages, it was the easiest for me to get off the ground with. Since I had personally never built a \"portfolio\" website, I took the help of <a target=\"_blank\" href=\"https://startbootstrap.com/template-categories/all/\"> Start Bootstrap </a> to help me get inspiration. And by inspiration, I pretty much mean all of the CSS and JS that I needed for my site. Don't judge me, I didn't know any better! As Pablo Picasso said, 'good artists borrow, great artists steal.'. Not sure which one I am, but I atleast did one of those. I chose the coffee themed template, partially because I liked the rugged brick look which seemed to give the website a very Victorian feel. Once I had all the basic boilerplate code in place, I hacked around it to make sure it displayed the content I wanted it to with the mods that I wanted to display.\n\nThis was a very simple first exercise and I definitely had no problems getting this up and running locally on my computer. Deploying it to Heroku was a bit of a challenge, because at the time Spark was not natively supported by Heroku. Some simple google searches, however, paved the way to some kind soul who posted how she/he had deployed their app to Heroku and from there it was a breeze. So I got my first site up and running and it was great! I thought the look and feel was good and it showed the content I wanted to display.\n\nI am a clean freak by nature and computer cleanliness is not excluded from this. So in my very energetic sprees of freeing up space on my Mac by deleting unwanted files, I accidentally deleted my website code from the computer. And no, I had forgotten to check it into GitHub ( my choice of SCM ). And yes, that is unpardonable. So for a long time, everytime I had an urge to futz around with my website, I was brutally reminded of my idiocy, so I'd lay those ideas to rest.\n\nANYWAY, then came 2017 and I figured the new year needed a fresh burst of vitality and the website was the hallowed ground upon which I would consecrate the focus of my arts. My initial instict was to just go back to Heroku and do the same spiel all over again but then the more I started thinking about what I had on my website, the more I realized that there were things that were fundamentally wrong. I will walk through some of the issues that I found and how I solved them in my personal page 2.0\n\n## 1. Choice of hosting service ( Heroku v/s GitHub )\n\nIf you want to use the free plan, Heroku is a good place to test out greenfield prototypes that you don't want to invest too much money into. It is a good place to test request/response type of apps that actually need a server to function ( I am not getting into the discussion of Backend as a Service which is a whole different conversation ). However, for my personal website, the most complex thing that I would have wanted to do was maybe accept form inputs when people wanted to reach out to me. There was no fancy interaction that would need any real-time response. The other big problem with the free plan of Heroku is the way they maintain uptime. You get \"dynos\" which are up only when they are needed. So if you haven't had any hits on your website for say 6 hours, the next hit to come to your website, will take about 20 seconds for the page to render, because the dyno is in the process of being woken up. As a result, whenever I had to show my page to someone, I always had to \"pre-warm\" the dyno, so they could see the page being responsive. ( I mean lets be real, nobody is interested in my site, so the only people seeing it are probably people I am forcing to see my site ). To solve the \"sleeping dyno\" problem, I started using <a href=\"https://uptimerobot.com/\" target=\"_blank\">Uptime Robot</a> which would ping my website every 5 minutes to keep it up and running. Which sounds great right? There is a catch though. As I was on the Free heroku plan, Heroku lets my account ( which includes upto 5 free applications ) have a total uptime of 1000 dyno hours per month, after which they would shut down all applications until the next month started. Since I had a couple of other apps that I was testing out as well, my website would be shut down pretty much around the 20th day of the month mark. Shucks! Guess I am not so smart after all, with the whole uptime thing.\n\nI had come across GitHub hosting in the past, but I had never really used it. This time around, I was determined to use Github hosting for my website by using it in conjunction with Jekyll ( which I will go into detail in a bit ) because of how well suited it seemed for the purpose I wanted. No databases, built for blog hosting and easy templating. The lagniappe was the fact that there were no uptime restrictions on Github hosting and they could handle upto 100,000 hits per month! Which of course, is most likely 99,999 more than I will be getting each month. Works for me!\n\n## 2. To Server or not to Server ( Spark Java v/s No server )\n\nIn my previous version of the website, I was using Sparkjava for literally just serving static pages. As light as Sparkjava is, it still needs some boilerplate configuration like using Maven ( as I did ) for dependency management/builds or setting up routes in Java to assign paths to how people interact with your page and writing some barebones response handlers. With Github hosting + Jekyll, all of that went away. All I needed to do was concentrate on building the website.\n\n## 3. Website templates ( Handlebar v/s Liquid )\n\nSparkjava does not come with its own templating mechanism, however it has support for several such as Handlebar, Mustache, Pebble etc. I chose Handlebar because it was fairly simple to use. This time around I used Jekyll's templating mechanism called Liquid, developed by the folks over at Shopify. I would say I didn't find anything particularly fantastic or particularly annoying about Liquid. It got the job done and that is what I was looking for.\n\n## 4. Use an existing css template v/s building from scratch\n\nIn my website's 2.0 version, I wanted a very clean and sparse look. I felt that the previous version was very \"heavy\" and being the minimalist that I am, I am a bit surprised I went down that route. So the new website, was going to be minimal, it was going to have lots of whitespace and above all, content would be front and center, undistracted by unnecessary CSS styling.\n\n## 5. Page layout and design consideration\n\n### 1. Title Bar\n\nChanged the font type to Cardo from Josefin Slab. It is much \"lighter\" and gives a cleaner look\n\n### 2. Navigation Bar\n\nThe Nav Bar isn't that conspicuous now in terms of styling. It is just surrounded by 2 thin lines instead of being embedded within a bar.\n\n### 3. Footer\n\nThere was a time when I was obsessed with putting things like \"Made with ♥️...\" or \"Handcrafted in...\". Not anymore. This time its more professional and to the point. Also added icons to my social network profiles.\n\n### 4. Favico\n\nThe favico of yore was an image saying \"LoT\" which was meant to be an acronym of the name of the original site ( Legions of Thought ). The new icon, however is a bow and an arrow, something used by my mythological namesake after whom I am named.\n\n### 5. Home Page\n\nThe older home page had some random photos that I had taken and was a very heavily styled page. The new version is the equivalent of an \"About Me\" page and has no extra styling per se.\n\n### 6. About\n\nThe \"About\" page has moved to the home page in the newer version and has a much more sane description of who I am and what I do.\n\n### 7. Blog\n\nI think the blog was the most complex part of this whole enterprise. Hosting blogs yourself is one of the more tricky aspects of maintaining your website. Platforms like Django give you a lot of customization options if you are hosting a Django server and you can go crazy with that. When I was using Sparkjava to host my site, I decided to not go into the weeds of blog hosting. Instead I just pointed my blog page on the site to my pre-existing wordpress blog. Technically, this translates into using an iframe to box up the wordpress page into the site. I hated this approach, because it is a jarring difference from the look and feel of your own website. However, since Wordpress provided a ton of options out of the box such as comments, tagging, blog discovery etc, I decided not to poke the hornets nest.\n\nWhen I decided to move to Jekyll, which has a blog-first approach, I thought it was the perfect opportunity to get rid of the wordpress hacky integration that I had in place. Wiring the whole thing together while having a professional looking blog ( with features like listing posts, having a short snippet of the post ) was fairly straightforward. I did have to put features in like comments ( via disqus ) and social sharing of the blog post by myself. I think the biggest piece of work I have left in the blog section is being able to tag blogs and search blogs by tag as well as enable blog discovery across the interwebs. Should be a fun problem to figure out and solve!\n\n### 8. Photos\n\nThis is one section that I think is more well fleshed out in the older version. I am an avid photographer and I definitely intend to use my homepage to promote some of my original content. In the older version, I had linked my flickr album via juicebox.js and displayed it as a slide show of my portfolio. In the newer version I kind of skipped on that and just linked the page to my instagram feed via an app called <a href=\"http://www.instush.com/\" target=\"_blank\"> Instush </a>. This is definitely one section that I will be putting work into.\n\n### 9. Travel\n\nTravel is always one of my favorite sections to work with. From a look perspective, not much has changed except that I have added a section called \"USA Travel\". From a 'feel' perspective, there are a couple of changes. The maps added are interactive and you can actually hover and find the countries I have been to, as opposed to the old view which was just an image screenshot off which you couldn't retrieve any useful information. The map widget is provided by <a href=\"https://www.amcharts.com/\" target=\"_blank\">AMCharts</a>.\n\n### 10. Projects\n\nIn the previous iteration, there was no Projects section. I added this tab to highlight the work I do, across my interests, be it technology, helping out the community or doing any kind of public speaking. I loved designing this page because I love the clean cut card layout ( using Bootstrap Cards ) which, according to me, gives it a very slick feel.\n\n### 11. Contact Me\n\nAlthough the old version of the contact form looked good, it didn't do anything! Well it would log the message to Heroku logs, which I would not look through. Yikes. This time I decided to have a different form layout for the contact section and it works. I used <a href=\"https://formspree.io/\" target=\"_blank\"> Formspree</a> which is a really cool utility to help connect your form to an email address of your choice, so you never have to do any kind of form handling. Which is super. There used to be a Captcha in the old one and I will need to re-add it to the new one because I am already seeing spam contacts trickling in.\n\n## 6. Some of the other bells and whistles\n\nGoogle analytics. Definitely like to have metrics associated with anything I do. Its the only way you can measure your performance. Google Analytics is super easy to use and gives me a swath of information which I can make some very telling observations off of, including bounce rates and places people access my site from. Definitely a must-have. If not google, then some other analytics like Hotjar, might work as well. Adding SEO as well as Google Adsense is possibly in the works for me.\n\nI'd say it was real fun rebuilding my website as it helped me make some UX design decisions. I have found that the static page approach of Github hosting makes for really fast page serving speeds. I am impressed by the work put in by GitHub into this platform and I hope it does not falter off track.\n\nAs for my own website, is this the final makeover? I am pretty sure the answer to that is a strong No because I will always be looking to learn something new and I am convinced Future Arjun is always disappointed in the actions of Past Arjun. As Brian Herbert said, \"The capacity to learn is a gift; the ability to learn is a skill ; the willingness to learn is a choice.\" and its a choice I am making willfully.",
    "_id": "website.mdx",
    "_raw": {
      "flattenedPath": "website"
    },
    "body": {
      "raw": "I want to document the process I went through to revamp my personal website. I'll walk through some of the design decisions as well as some of the mistakes ( at times horrendous ) that I made.\n\nI think it is important to have your own home page. You could have myriad reasons for having one, ranging from showcasing your talents, presenting it as an online resume or in my case, just a place that I could tinker with technologies that I do not use in my day job.\n\nThe first iteration of my home page was hosted on Heroku. For those who don't know how Heroku works, it's a PaaS( Platform as a service ). Now this is a handy tool for people who don't have their own infrastructure to deploy production applications. It's very similar to AWS in that regard except that it abstracts away many of the nitty gritty details that AWS requires to configure deployment of an application. Long story short, I chose Heroku because of its convenience factor and because I was on the Developer plan that was completely free! I built my website using Sparkjava which is a micro framework to create web applications. It is inspired by Sinatra, the Ruby framework. I am a big proponent of Sparkjava for prototyping applications and for a personal website that was just gonna serve static pages, it was the easiest for me to get off the ground with. Since I had personally never built a \"portfolio\" website, I took the help of <a target=\"_blank\" href=\"https://startbootstrap.com/template-categories/all/\"> Start Bootstrap </a> to help me get inspiration. And by inspiration, I pretty much mean all of the CSS and JS that I needed for my site. Don't judge me, I didn't know any better! As Pablo Picasso said, 'good artists borrow, great artists steal.'. Not sure which one I am, but I atleast did one of those. I chose the coffee themed template, partially because I liked the rugged brick look which seemed to give the website a very Victorian feel. Once I had all the basic boilerplate code in place, I hacked around it to make sure it displayed the content I wanted it to with the mods that I wanted to display.\n\nThis was a very simple first exercise and I definitely had no problems getting this up and running locally on my computer. Deploying it to Heroku was a bit of a challenge, because at the time Spark was not natively supported by Heroku. Some simple google searches, however, paved the way to some kind soul who posted how she/he had deployed their app to Heroku and from there it was a breeze. So I got my first site up and running and it was great! I thought the look and feel was good and it showed the content I wanted to display.\n\nI am a clean freak by nature and computer cleanliness is not excluded from this. So in my very energetic sprees of freeing up space on my Mac by deleting unwanted files, I accidentally deleted my website code from the computer. And no, I had forgotten to check it into GitHub ( my choice of SCM ). And yes, that is unpardonable. So for a long time, everytime I had an urge to futz around with my website, I was brutally reminded of my idiocy, so I'd lay those ideas to rest.\n\nANYWAY, then came 2017 and I figured the new year needed a fresh burst of vitality and the website was the hallowed ground upon which I would consecrate the focus of my arts. My initial instict was to just go back to Heroku and do the same spiel all over again but then the more I started thinking about what I had on my website, the more I realized that there were things that were fundamentally wrong. I will walk through some of the issues that I found and how I solved them in my personal page 2.0\n\n## 1. Choice of hosting service ( Heroku v/s GitHub )\n\nIf you want to use the free plan, Heroku is a good place to test out greenfield prototypes that you don't want to invest too much money into. It is a good place to test request/response type of apps that actually need a server to function ( I am not getting into the discussion of Backend as a Service which is a whole different conversation ). However, for my personal website, the most complex thing that I would have wanted to do was maybe accept form inputs when people wanted to reach out to me. There was no fancy interaction that would need any real-time response. The other big problem with the free plan of Heroku is the way they maintain uptime. You get \"dynos\" which are up only when they are needed. So if you haven't had any hits on your website for say 6 hours, the next hit to come to your website, will take about 20 seconds for the page to render, because the dyno is in the process of being woken up. As a result, whenever I had to show my page to someone, I always had to \"pre-warm\" the dyno, so they could see the page being responsive. ( I mean lets be real, nobody is interested in my site, so the only people seeing it are probably people I am forcing to see my site ). To solve the \"sleeping dyno\" problem, I started using <a href=\"https://uptimerobot.com/\" target=\"_blank\">Uptime Robot</a> which would ping my website every 5 minutes to keep it up and running. Which sounds great right? There is a catch though. As I was on the Free heroku plan, Heroku lets my account ( which includes upto 5 free applications ) have a total uptime of 1000 dyno hours per month, after which they would shut down all applications until the next month started. Since I had a couple of other apps that I was testing out as well, my website would be shut down pretty much around the 20th day of the month mark. Shucks! Guess I am not so smart after all, with the whole uptime thing.\n\nI had come across GitHub hosting in the past, but I had never really used it. This time around, I was determined to use Github hosting for my website by using it in conjunction with Jekyll ( which I will go into detail in a bit ) because of how well suited it seemed for the purpose I wanted. No databases, built for blog hosting and easy templating. The lagniappe was the fact that there were no uptime restrictions on Github hosting and they could handle upto 100,000 hits per month! Which of course, is most likely 99,999 more than I will be getting each month. Works for me!\n\n## 2. To Server or not to Server ( Spark Java v/s No server )\n\nIn my previous version of the website, I was using Sparkjava for literally just serving static pages. As light as Sparkjava is, it still needs some boilerplate configuration like using Maven ( as I did ) for dependency management/builds or setting up routes in Java to assign paths to how people interact with your page and writing some barebones response handlers. With Github hosting + Jekyll, all of that went away. All I needed to do was concentrate on building the website.\n\n## 3. Website templates ( Handlebar v/s Liquid )\n\nSparkjava does not come with its own templating mechanism, however it has support for several such as Handlebar, Mustache, Pebble etc. I chose Handlebar because it was fairly simple to use. This time around I used Jekyll's templating mechanism called Liquid, developed by the folks over at Shopify. I would say I didn't find anything particularly fantastic or particularly annoying about Liquid. It got the job done and that is what I was looking for.\n\n## 4. Use an existing css template v/s building from scratch\n\nIn my website's 2.0 version, I wanted a very clean and sparse look. I felt that the previous version was very \"heavy\" and being the minimalist that I am, I am a bit surprised I went down that route. So the new website, was going to be minimal, it was going to have lots of whitespace and above all, content would be front and center, undistracted by unnecessary CSS styling.\n\n## 5. Page layout and design consideration\n\n### 1. Title Bar\n\nChanged the font type to Cardo from Josefin Slab. It is much \"lighter\" and gives a cleaner look\n\n### 2. Navigation Bar\n\nThe Nav Bar isn't that conspicuous now in terms of styling. It is just surrounded by 2 thin lines instead of being embedded within a bar.\n\n### 3. Footer\n\nThere was a time when I was obsessed with putting things like \"Made with ♥️...\" or \"Handcrafted in...\". Not anymore. This time its more professional and to the point. Also added icons to my social network profiles.\n\n### 4. Favico\n\nThe favico of yore was an image saying \"LoT\" which was meant to be an acronym of the name of the original site ( Legions of Thought ). The new icon, however is a bow and an arrow, something used by my mythological namesake after whom I am named.\n\n### 5. Home Page\n\nThe older home page had some random photos that I had taken and was a very heavily styled page. The new version is the equivalent of an \"About Me\" page and has no extra styling per se.\n\n### 6. About\n\nThe \"About\" page has moved to the home page in the newer version and has a much more sane description of who I am and what I do.\n\n### 7. Blog\n\nI think the blog was the most complex part of this whole enterprise. Hosting blogs yourself is one of the more tricky aspects of maintaining your website. Platforms like Django give you a lot of customization options if you are hosting a Django server and you can go crazy with that. When I was using Sparkjava to host my site, I decided to not go into the weeds of blog hosting. Instead I just pointed my blog page on the site to my pre-existing wordpress blog. Technically, this translates into using an iframe to box up the wordpress page into the site. I hated this approach, because it is a jarring difference from the look and feel of your own website. However, since Wordpress provided a ton of options out of the box such as comments, tagging, blog discovery etc, I decided not to poke the hornets nest.\n\nWhen I decided to move to Jekyll, which has a blog-first approach, I thought it was the perfect opportunity to get rid of the wordpress hacky integration that I had in place. Wiring the whole thing together while having a professional looking blog ( with features like listing posts, having a short snippet of the post ) was fairly straightforward. I did have to put features in like comments ( via disqus ) and social sharing of the blog post by myself. I think the biggest piece of work I have left in the blog section is being able to tag blogs and search blogs by tag as well as enable blog discovery across the interwebs. Should be a fun problem to figure out and solve!\n\n### 8. Photos\n\nThis is one section that I think is more well fleshed out in the older version. I am an avid photographer and I definitely intend to use my homepage to promote some of my original content. In the older version, I had linked my flickr album via juicebox.js and displayed it as a slide show of my portfolio. In the newer version I kind of skipped on that and just linked the page to my instagram feed via an app called <a href=\"http://www.instush.com/\" target=\"_blank\"> Instush </a>. This is definitely one section that I will be putting work into.\n\n### 9. Travel\n\nTravel is always one of my favorite sections to work with. From a look perspective, not much has changed except that I have added a section called \"USA Travel\". From a 'feel' perspective, there are a couple of changes. The maps added are interactive and you can actually hover and find the countries I have been to, as opposed to the old view which was just an image screenshot off which you couldn't retrieve any useful information. The map widget is provided by <a href=\"https://www.amcharts.com/\" target=\"_blank\">AMCharts</a>.\n\n### 10. Projects\n\nIn the previous iteration, there was no Projects section. I added this tab to highlight the work I do, across my interests, be it technology, helping out the community or doing any kind of public speaking. I loved designing this page because I love the clean cut card layout ( using Bootstrap Cards ) which, according to me, gives it a very slick feel.\n\n### 11. Contact Me\n\nAlthough the old version of the contact form looked good, it didn't do anything! Well it would log the message to Heroku logs, which I would not look through. Yikes. This time I decided to have a different form layout for the contact section and it works. I used <a href=\"https://formspree.io/\" target=\"_blank\"> Formspree</a> which is a really cool utility to help connect your form to an email address of your choice, so you never have to do any kind of form handling. Which is super. There used to be a Captcha in the old one and I will need to re-add it to the new one because I am already seeing spam contacts trickling in.\n\n## 6. Some of the other bells and whistles\n\nGoogle analytics. Definitely like to have metrics associated with anything I do. Its the only way you can measure your performance. Google Analytics is super easy to use and gives me a swath of information which I can make some very telling observations off of, including bounce rates and places people access my site from. Definitely a must-have. If not google, then some other analytics like Hotjar, might work as well. Adding SEO as well as Google Adsense is possibly in the works for me.\n\nI'd say it was real fun rebuilding my website as it helped me make some UX design decisions. I have found that the static page approach of Github hosting makes for really fast page serving speeds. I am impressed by the work put in by GitHub into this platform and I hope it does not falter off track.\n\nAs for my own website, is this the final makeover? I am pretty sure the answer to that is a strong No because I will always be looking to learn something new and I am convinced Future Arjun is always disappointed in the actions of Past Arjun. As Brian Herbert said, \"The capacity to learn is a gift; the ability to learn is a skill ; the willingness to learn is a choice.\" and its a choice I am making willfully.",
      "code": "I want to document the process I went through to revamp my personal website. I'll walk through some of the design decisions as well as some of the mistakes ( at times horrendous ) that I made.\n\nI think it is important to have your own home page. You could have myriad reasons for having one, ranging from showcasing your talents, presenting it as an online resume or in my case, just a place that I could tinker with technologies that I do not use in my day job.\n\nThe first iteration of my home page was hosted on Heroku. For those who don't know how Heroku works, it's a PaaS( Platform as a service ). Now this is a handy tool for people who don't have their own infrastructure to deploy production applications. It's very similar to AWS in that regard except that it abstracts away many of the nitty gritty details that AWS requires to configure deployment of an application. Long story short, I chose Heroku because of its convenience factor and because I was on the Developer plan that was completely free! I built my website using Sparkjava which is a micro framework to create web applications. It is inspired by Sinatra, the Ruby framework. I am a big proponent of Sparkjava for prototyping applications and for a personal website that was just gonna serve static pages, it was the easiest for me to get off the ground with. Since I had personally never built a \"portfolio\" website, I took the help of <a target=\"_blank\" href=\"https://startbootstrap.com/template-categories/all/\"> Start Bootstrap </a> to help me get inspiration. And by inspiration, I pretty much mean all of the CSS and JS that I needed for my site. Don't judge me, I didn't know any better! As Pablo Picasso said, 'good artists borrow, great artists steal.'. Not sure which one I am, but I atleast did one of those. I chose the coffee themed template, partially because I liked the rugged brick look which seemed to give the website a very Victorian feel. Once I had all the basic boilerplate code in place, I hacked around it to make sure it displayed the content I wanted it to with the mods that I wanted to display.\n\nThis was a very simple first exercise and I definitely had no problems getting this up and running locally on my computer. Deploying it to Heroku was a bit of a challenge, because at the time Spark was not natively supported by Heroku. Some simple google searches, however, paved the way to some kind soul who posted how she/he had deployed their app to Heroku and from there it was a breeze. So I got my first site up and running and it was great! I thought the look and feel was good and it showed the content I wanted to display.\n\nI am a clean freak by nature and computer cleanliness is not excluded from this. So in my very energetic sprees of freeing up space on my Mac by deleting unwanted files, I accidentally deleted my website code from the computer. And no, I had forgotten to check it into GitHub ( my choice of SCM ). And yes, that is unpardonable. So for a long time, everytime I had an urge to futz around with my website, I was brutally reminded of my idiocy, so I'd lay those ideas to rest.\n\nANYWAY, then came 2017 and I figured the new year needed a fresh burst of vitality and the website was the hallowed ground upon which I would consecrate the focus of my arts. My initial instict was to just go back to Heroku and do the same spiel all over again but then the more I started thinking about what I had on my website, the more I realized that there were things that were fundamentally wrong. I will walk through some of the issues that I found and how I solved them in my personal page 2.0\n\n## 1. Choice of hosting service ( Heroku v/s GitHub )\n\nIf you want to use the free plan, Heroku is a good place to test out greenfield prototypes that you don't want to invest too much money into. It is a good place to test request/response type of apps that actually need a server to function ( I am not getting into the discussion of Backend as a Service which is a whole different conversation ). However, for my personal website, the most complex thing that I would have wanted to do was maybe accept form inputs when people wanted to reach out to me. There was no fancy interaction that would need any real-time response. The other big problem with the free plan of Heroku is the way they maintain uptime. You get \"dynos\" which are up only when they are needed. So if you haven't had any hits on your website for say 6 hours, the next hit to come to your website, will take about 20 seconds for the page to render, because the dyno is in the process of being woken up. As a result, whenever I had to show my page to someone, I always had to \"pre-warm\" the dyno, so they could see the page being responsive. ( I mean lets be real, nobody is interested in my site, so the only people seeing it are probably people I am forcing to see my site ). To solve the \"sleeping dyno\" problem, I started using <a href=\"https://uptimerobot.com/\" target=\"_blank\">Uptime Robot</a> which would ping my website every 5 minutes to keep it up and running. Which sounds great right? There is a catch though. As I was on the Free heroku plan, Heroku lets my account ( which includes upto 5 free applications ) have a total uptime of 1000 dyno hours per month, after which they would shut down all applications until the next month started. Since I had a couple of other apps that I was testing out as well, my website would be shut down pretty much around the 20th day of the month mark. Shucks! Guess I am not so smart after all, with the whole uptime thing.\n\nI had come across GitHub hosting in the past, but I had never really used it. This time around, I was determined to use Github hosting for my website by using it in conjunction with Jekyll ( which I will go into detail in a bit ) because of how well suited it seemed for the purpose I wanted. No databases, built for blog hosting and easy templating. The lagniappe was the fact that there were no uptime restrictions on Github hosting and they could handle upto 100,000 hits per month! Which of course, is most likely 99,999 more than I will be getting each month. Works for me!\n\n## 2. To Server or not to Server ( Spark Java v/s No server )\n\nIn my previous version of the website, I was using Sparkjava for literally just serving static pages. As light as Sparkjava is, it still needs some boilerplate configuration like using Maven ( as I did ) for dependency management/builds or setting up routes in Java to assign paths to how people interact with your page and writing some barebones response handlers. With Github hosting + Jekyll, all of that went away. All I needed to do was concentrate on building the website.\n\n## 3. Website templates ( Handlebar v/s Liquid )\n\nSparkjava does not come with its own templating mechanism, however it has support for several such as Handlebar, Mustache, Pebble etc. I chose Handlebar because it was fairly simple to use. This time around I used Jekyll's templating mechanism called Liquid, developed by the folks over at Shopify. I would say I didn't find anything particularly fantastic or particularly annoying about Liquid. It got the job done and that is what I was looking for.\n\n## 4. Use an existing css template v/s building from scratch\n\nIn my website's 2.0 version, I wanted a very clean and sparse look. I felt that the previous version was very \"heavy\" and being the minimalist that I am, I am a bit surprised I went down that route. So the new website, was going to be minimal, it was going to have lots of whitespace and above all, content would be front and center, undistracted by unnecessary CSS styling.\n\n## 5. Page layout and design consideration\n\n### 1. Title Bar\n\nChanged the font type to Cardo from Josefin Slab. It is much \"lighter\" and gives a cleaner look\n\n### 2. Navigation Bar\n\nThe Nav Bar isn't that conspicuous now in terms of styling. It is just surrounded by 2 thin lines instead of being embedded within a bar.\n\n### 3. Footer\n\nThere was a time when I was obsessed with putting things like \"Made with ♥️...\" or \"Handcrafted in...\". Not anymore. This time its more professional and to the point. Also added icons to my social network profiles.\n\n### 4. Favico\n\nThe favico of yore was an image saying \"LoT\" which was meant to be an acronym of the name of the original site ( Legions of Thought ). The new icon, however is a bow and an arrow, something used by my mythological namesake after whom I am named.\n\n### 5. Home Page\n\nThe older home page had some random photos that I had taken and was a very heavily styled page. The new version is the equivalent of an \"About Me\" page and has no extra styling per se.\n\n### 6. About\n\nThe \"About\" page has moved to the home page in the newer version and has a much more sane description of who I am and what I do.\n\n### 7. Blog\n\nI think the blog was the most complex part of this whole enterprise. Hosting blogs yourself is one of the more tricky aspects of maintaining your website. Platforms like Django give you a lot of customization options if you are hosting a Django server and you can go crazy with that. When I was using Sparkjava to host my site, I decided to not go into the weeds of blog hosting. Instead I just pointed my blog page on the site to my pre-existing wordpress blog. Technically, this translates into using an iframe to box up the wordpress page into the site. I hated this approach, because it is a jarring difference from the look and feel of your own website. However, since Wordpress provided a ton of options out of the box such as comments, tagging, blog discovery etc, I decided not to poke the hornets nest.\n\nWhen I decided to move to Jekyll, which has a blog-first approach, I thought it was the perfect opportunity to get rid of the wordpress hacky integration that I had in place. Wiring the whole thing together while having a professional looking blog ( with features like listing posts, having a short snippet of the post ) was fairly straightforward. I did have to put features in like comments ( via disqus ) and social sharing of the blog post by myself. I think the biggest piece of work I have left in the blog section is being able to tag blogs and search blogs by tag as well as enable blog discovery across the interwebs. Should be a fun problem to figure out and solve!\n\n### 8. Photos\n\nThis is one section that I think is more well fleshed out in the older version. I am an avid photographer and I definitely intend to use my homepage to promote some of my original content. In the older version, I had linked my flickr album via juicebox.js and displayed it as a slide show of my portfolio. In the newer version I kind of skipped on that and just linked the page to my instagram feed via an app called <a href=\"http://www.instush.com/\" target=\"_blank\"> Instush </a>. This is definitely one section that I will be putting work into.\n\n### 9. Travel\n\nTravel is always one of my favorite sections to work with. From a look perspective, not much has changed except that I have added a section called \"USA Travel\". From a 'feel' perspective, there are a couple of changes. The maps added are interactive and you can actually hover and find the countries I have been to, as opposed to the old view which was just an image screenshot off which you couldn't retrieve any useful information. The map widget is provided by <a href=\"https://www.amcharts.com/\" target=\"_blank\">AMCharts</a>.\n\n### 10. Projects\n\nIn the previous iteration, there was no Projects section. I added this tab to highlight the work I do, across my interests, be it technology, helping out the community or doing any kind of public speaking. I loved designing this page because I love the clean cut card layout ( using Bootstrap Cards ) which, according to me, gives it a very slick feel.\n\n### 11. Contact Me\n\nAlthough the old version of the contact form looked good, it didn't do anything! Well it would log the message to Heroku logs, which I would not look through. Yikes. This time I decided to have a different form layout for the contact section and it works. I used <a href=\"https://formspree.io/\" target=\"_blank\"> Formspree</a> which is a really cool utility to help connect your form to an email address of your choice, so you never have to do any kind of form handling. Which is super. There used to be a Captcha in the old one and I will need to re-add it to the new one because I am already seeing spam contacts trickling in.\n\n## 6. Some of the other bells and whistles\n\nGoogle analytics. Definitely like to have metrics associated with anything I do. Its the only way you can measure your performance. Google Analytics is super easy to use and gives me a swath of information which I can make some very telling observations off of, including bounce rates and places people access my site from. Definitely a must-have. If not google, then some other analytics like Hotjar, might work as well. Adding SEO as well as Google Adsense is possibly in the works for me.\n\nI'd say it was real fun rebuilding my website as it helped me make some UX design decisions. I have found that the static page approach of Github hosting makes for really fast page serving speeds. I am impressed by the work put in by GitHub into this platform and I hope it does not falter off track.\n\nAs for my own website, is this the final makeover? I am pretty sure the answer to that is a strong No because I will always be looking to learn something new and I am convinced Future Arjun is always disappointed in the actions of Past Arjun. As Brian Herbert said, \"The capacity to learn is a gift; the ability to learn is a skill ; the willingness to learn is a choice.\" and its a choice I am making willfully."
    },
    "slug": "website",
    "path": "posts/website",
    "filePath": "website.mdx",
    "toc": [],
    "readingTime": {
      "text": "13 min read",
      "minutes": 12.565,
      "time": 753900,
      "words": 2513
    },
    "structuredData": {
      "@context": "https://schema.org",
      "@type": "BlogPosting",
      "headline": "Website Redesign 2017",
      "datePublished": "2017-02-09T00:00:00.000Z",
      "dateModified": "2017-02-09T00:00:00.000Z",
      "description": "Redesigning my personal website",
      "image": "/static/images/twitter-card.png",
      "url": "https://arjunrao.co/posts/website"
    }
  },
  {
    "title": "Things I learned while working from home for 2 weeks",
    "date": "2020-03-29T00:00:00.000Z",
    "tags": [
      "growth"
    ],
    "lastmod": undefined,
    "draft": false,
    "summary": "Thoughts on remote work 2 weeks after the Covid-19 lockdown",
    "images": undefined,
    "authors": undefined,
    "layout": undefined,
    "bibliography": undefined,
    "canonicalUrl": undefined,
    "content": "We are living in unprecedented times and for those of us who are fortunate enough to be able to work from home, there are three camps of people -\n\n1. People who have always worked from home\n2. People who have never worked from home\n3. People who have worked from home on and off\n\nI fall squarely in the third category. In the past, I have used Work from Home to mostly deal with situational circumstances -\n\n- \"Hey y'all, WFH today since the Plumber is coming in\"\n- \"Feeling a bit under the weather this AM, and will WFH. Online all day\"\n- \"Expecting package delivery. Need to be available in-person for pickup. WFH, available all day\"\n\nPersonally, going to a different physical space helps separate my work life from my daily life. Having that compartmentalization has proven to be very helpful for being effective in different aspects of my life.\n\nHowever, the last 2-3 weeks of working from home have blurred those lines significantly, not just for me, but for everyone who falls into categories 2 & 3 in the list above. In this new world, there are some things that I have come to appreciate and some things that I realize are missing from my daily routine that used to be there before.\n\n**This post is to highlight certain things I used to do in a physical office space, that I am trying to re-introduce into my virtual work environment.**\n\n---\n\n## 🏡 Create the \"right\" space\n\nI live in a 1-bedroom in Brooklyn and I have a designated space that is my work \"office\". It isn't a room. It isn't a cubicle. There is no physical separation of this place from the rest of the apartment, but it is what I have marked to be my workspace. While this might seem like mental high jinks, it is a pretty good trope to achieve that same level of compartmentalization that you get when you go to a physical office.\n\n## 🐒 Maintain good posture\n\nIn one of my work calls recently, I remarked that one reason I am looking forward to going back to the office, is to be able to use the chair at my desk again. The chair is nothing special, _but_ it is decently ergonomic, which is a godsend for my weak lower back. Having a good seating posture coupled with a good seating arrangement, is worth its weight in gold.\n\n## 🤸🏾‍♂️ Take breaks\n\nIt is so easy to forget to take breaks when you work remotely. When you are in an office, there are certain triggers that cause you to take breaks; whether it is the end of that 12pm meeting that makes you realize its time to get lunch, or someone tapping you on your shoulder asking you if you want to go for a coffee. These missing external triggers, make it really easy to forget to unplug yourself from your computer. I am making an effort to reintroduce these breaks, whether it is something like standing up and walking around the apartment, going and looking out of the window, fixing a snack or reading a book. I believe a clean break & return to work, revitalizes those neurons and makes you more effective at what you were working on.\n\nThere are plenty of ways to reinforce this behavior, whether its using the [Pomodoro technique](https://dariusforoux.com/takebreaks-pomodoro/) which someone made a [nifty chrome extension](https://chrome.google.com/webstore/detail/focusme-a-pomodoro-timer/koebbleaefghpjjmghelhjboilcmfpad?hl=en) for, or using something as simple as a clock or hourglass.\n\n## 🚊 No commute\n\nI have always viewed commute as a net positive. That is largely in-part, due to the usage of public transport (#MTA) which gives you plenty of time to do other things. If I were driving to work myself, I am not sure I would feel the same way, but since I haven't done it, I have no opinion on that. Being on the NYC subway though, has given me time to read books, listen to podcasts, or just meditate (I do not mean deep focus meditation, but more like lack of thoughts) before I get into the hubbub of work.\n\nNot having that, has been a pretty big change for me and this is something that I haven't been super successful at reintroducing just yet. I am mostly trying to be able to still read books, whether it is at tail-end of day or sometime in the middle on a break. However, if I can do it right, I will basically use the morning \"commute time\" to mimic what I used to do when I actually commuted. Reading a book from say 7am-8am, or trying to do some skill-building during this time, would be a pretty successful outcome in my opinion.\n\n---\n\n## ⏰ Work the \"right\" hours\n\nWorking from home makes it all too easy to lose track of time and boundaries. For people who are used to commuting into work (yours truly included), depending on the time taken to commute, your bio-clock ends up waking you up at the same time as before. As a result, there are more hours in the day all of a sudden, and it is all too easy to say \"I am up already, might as well clock in at work\". That is a slippery slope, and suddenly your 9am-5pm can start looking like 8am-6pm or 7am-7pm, which tends to get to an unsustainable pace.\n\nRather than waiting for it to get to that point, even if you don't feel the strain, be cognizant of how long you are _actually_ working, and make the effort to restrict that slippage for your own mental health. Make sure you also set some kind of working arrangement with your team and colleagues and set expectations of your available to ensure they don't schedule calls or meetings outside of those times.\n\n## 🤪 Find time to talk non-work stuff with your teammates\n\nWorking in the confines of your own apartment, focused on the screen and task at hand, makes it easy to not interact with your teammates and colleagues for anything non-work related. However, when you are in a physical space together, there are tons of micro-interactions and conversations that happen, that make relationships with your team well-oiled, and just shows your human side.\n\nTake the time to talk about things that are not work-related with your team and you can do so in all kinds of ways. Some things that we have been doing are\n\n- Setting up a water-cooler'esque channel for people to jump on and leave whenever they want to. This way anyone seeking conversation, which sometimes turn into sounding boards, can make it happen\n- Virtual happy hours to grab a brewski to decompress, at the end of the week\n- Team-building sessions like pasta making, or making origami - where one person leads the session and the others follow from their own apartments & homes!\n\n## 🦄 Talk to people who aren't on your team\n\nThere are plenty of opportunities for me to talk with my teams through the course of the day, be it meetings, sprint ceremonies, pull requests, what have you. One thing that is markedly absent are the hallway conversations with people not on my team, such as folks in the Sales or Data teams. Having their perspective is super important for me to do my job, because it's a world so different from my own, that talking to people who are in it, helps shape my view on the business, and technology needed for that business.\n\nI have started having virtual cafes with folks now where we talk about things like wine collections, vinyl records and segue into meaty topics like concept based machine learning or what the programmatic sales landscape looks like these days.\n\n---\n\n## 💦 Drink water\n\nA day or so into working from home, I had a persistent headache, and I wasn't sure if it was from staring at the screen all day. Later I realized, that I was basically drinking no water during those days. I am used to drinking 1-1.5 portions of [my 48oz bottle](https://www.amazon.com/dp/B004H8BIKW/ref=twister_B071GL7NNN?_encoding=UTF8&th=1) each day at work.\n\nSince having that Eureka moment, I now always keep a fairly big glass of water right next to my computer which gets refilled each time it goes to zero (giving me a break each time to go fill it!)\n\n## ⏳ Reserve time for lunch\n\nI have never been a 'big lunch' kind of guy. My lunch breaks have typically been me at my desk perusing through news or something new in the tech world, be it [Product Hunt](http://producthunt.com/), [Dev.to](http://dev.to/), [Hacker News](https://news.ycombinator.com/) or something informational. When people see someone eating at their desk, it is common courtesy to not disturb them until they get done, unless there is some emergency. However, in this virtual space, no one knows you are eating, and those slack messages will come streaming in.\n\nIf you want to protect this time, put a Slack status or a calendar time block for that duration, to let people know that this is your lunch time, and they will respect it.\n\n## 🏋🏾‍♀️ Eating healthy and working out\n\nI don't think this is a point I need to talk about too much, because everyone is mostly aware of how easy it is to binge eat or not work out when you are home. I am not trying to get washboard abs at the end of this (never happened, never will), but making sure there is some physical activity, be it starting the day with some back strengthening exercises (damn you, lower back!!!) or doing 5 pushups between meetings, helps to get the blood flowing. Additionally, releasing those endorphins has proven to relieve stress and pain, which is great in these times.\n\nWhen it comes to food, I stick to 2 meals during the day (mostly breakfast & lunch) which tend to be some variation of healthy food. I try real hard to not snack on things unnecessarily, but am not always successful. When I feel hungry, as much as possible, I drink water instead to stave off those hunger pangs, because more often than not, I am thirsty and not hungry.\n\n## 📺 TV shows\n\nWho can ignore Netflix, Hulu, Amazon Prime or Disney Plus in these times? This is another kind of moot point, because unless you disconnect your internet, this isn't going to be avoided.\n\nWith that as the base scenario, I try to limit my hours on the tele. This is most exacerbated after work-hours or on weekends (surprise surprise, this is no different even in the non-wfh scenario) but this is where I try to reclaim my book reading hours, not always with a lot of success.\n\n## 🗞 Watch news in a measured way\n\nLast but 100% not the least, I make an effort to not watch/read too much news during the day. These are some trying times and people get sucked into following the news minute-by-minute to see the spread of the virus or to get the latest. Unfortunately, there isn't a whole lot to be gained at this point, except for ratcheting up your hopelessness or despair. The best you can do right now is keep your social distance, support local businesses, and do the best for your team and family. I am not suggesting you _don't_ keep yourself abreast of the zeitgeist. All I am advocating for is to consume it in a measured way, because news like alcohol should be consumed in moderate amounts (or so the wise folks say 😁)\n\nSince there is a ton of misinformation, and panic-forwards passing around, in the morning, I catch up on the [official Johns Hopkins Covid-19 website](https://gisanddata.maps.arcgis.com/apps/opsdashboard/index.html#/bda7594740fd40299423467b48e9ecf6) to get a sense of what the world is looking like, and once in the evening just after I log off, I will check in on the news for any breakthroughs or latest news that I should be aware of. Keeping the news flow to a trickle, and mostly to the factual representation of what the world looks like out there, has greatly helped me maintain a strong constitution in these times. Highly recommend this, if this is your cup of tea.",
    "_id": "work-from-home.mdx",
    "_raw": {
      "flattenedPath": "work-from-home"
    },
    "body": {
      "raw": "We are living in unprecedented times and for those of us who are fortunate enough to be able to work from home, there are three camps of people -\n\n1. People who have always worked from home\n2. People who have never worked from home\n3. People who have worked from home on and off\n\nI fall squarely in the third category. In the past, I have used Work from Home to mostly deal with situational circumstances -\n\n- \"Hey y'all, WFH today since the Plumber is coming in\"\n- \"Feeling a bit under the weather this AM, and will WFH. Online all day\"\n- \"Expecting package delivery. Need to be available in-person for pickup. WFH, available all day\"\n\nPersonally, going to a different physical space helps separate my work life from my daily life. Having that compartmentalization has proven to be very helpful for being effective in different aspects of my life.\n\nHowever, the last 2-3 weeks of working from home have blurred those lines significantly, not just for me, but for everyone who falls into categories 2 & 3 in the list above. In this new world, there are some things that I have come to appreciate and some things that I realize are missing from my daily routine that used to be there before.\n\n**This post is to highlight certain things I used to do in a physical office space, that I am trying to re-introduce into my virtual work environment.**\n\n---\n\n## 🏡 Create the \"right\" space\n\nI live in a 1-bedroom in Brooklyn and I have a designated space that is my work \"office\". It isn't a room. It isn't a cubicle. There is no physical separation of this place from the rest of the apartment, but it is what I have marked to be my workspace. While this might seem like mental high jinks, it is a pretty good trope to achieve that same level of compartmentalization that you get when you go to a physical office.\n\n## 🐒 Maintain good posture\n\nIn one of my work calls recently, I remarked that one reason I am looking forward to going back to the office, is to be able to use the chair at my desk again. The chair is nothing special, _but_ it is decently ergonomic, which is a godsend for my weak lower back. Having a good seating posture coupled with a good seating arrangement, is worth its weight in gold.\n\n## 🤸🏾‍♂️ Take breaks\n\nIt is so easy to forget to take breaks when you work remotely. When you are in an office, there are certain triggers that cause you to take breaks; whether it is the end of that 12pm meeting that makes you realize its time to get lunch, or someone tapping you on your shoulder asking you if you want to go for a coffee. These missing external triggers, make it really easy to forget to unplug yourself from your computer. I am making an effort to reintroduce these breaks, whether it is something like standing up and walking around the apartment, going and looking out of the window, fixing a snack or reading a book. I believe a clean break & return to work, revitalizes those neurons and makes you more effective at what you were working on.\n\nThere are plenty of ways to reinforce this behavior, whether its using the [Pomodoro technique](https://dariusforoux.com/takebreaks-pomodoro/) which someone made a [nifty chrome extension](https://chrome.google.com/webstore/detail/focusme-a-pomodoro-timer/koebbleaefghpjjmghelhjboilcmfpad?hl=en) for, or using something as simple as a clock or hourglass.\n\n## 🚊 No commute\n\nI have always viewed commute as a net positive. That is largely in-part, due to the usage of public transport (#MTA) which gives you plenty of time to do other things. If I were driving to work myself, I am not sure I would feel the same way, but since I haven't done it, I have no opinion on that. Being on the NYC subway though, has given me time to read books, listen to podcasts, or just meditate (I do not mean deep focus meditation, but more like lack of thoughts) before I get into the hubbub of work.\n\nNot having that, has been a pretty big change for me and this is something that I haven't been super successful at reintroducing just yet. I am mostly trying to be able to still read books, whether it is at tail-end of day or sometime in the middle on a break. However, if I can do it right, I will basically use the morning \"commute time\" to mimic what I used to do when I actually commuted. Reading a book from say 7am-8am, or trying to do some skill-building during this time, would be a pretty successful outcome in my opinion.\n\n---\n\n## ⏰ Work the \"right\" hours\n\nWorking from home makes it all too easy to lose track of time and boundaries. For people who are used to commuting into work (yours truly included), depending on the time taken to commute, your bio-clock ends up waking you up at the same time as before. As a result, there are more hours in the day all of a sudden, and it is all too easy to say \"I am up already, might as well clock in at work\". That is a slippery slope, and suddenly your 9am-5pm can start looking like 8am-6pm or 7am-7pm, which tends to get to an unsustainable pace.\n\nRather than waiting for it to get to that point, even if you don't feel the strain, be cognizant of how long you are _actually_ working, and make the effort to restrict that slippage for your own mental health. Make sure you also set some kind of working arrangement with your team and colleagues and set expectations of your available to ensure they don't schedule calls or meetings outside of those times.\n\n## 🤪 Find time to talk non-work stuff with your teammates\n\nWorking in the confines of your own apartment, focused on the screen and task at hand, makes it easy to not interact with your teammates and colleagues for anything non-work related. However, when you are in a physical space together, there are tons of micro-interactions and conversations that happen, that make relationships with your team well-oiled, and just shows your human side.\n\nTake the time to talk about things that are not work-related with your team and you can do so in all kinds of ways. Some things that we have been doing are\n\n- Setting up a water-cooler'esque channel for people to jump on and leave whenever they want to. This way anyone seeking conversation, which sometimes turn into sounding boards, can make it happen\n- Virtual happy hours to grab a brewski to decompress, at the end of the week\n- Team-building sessions like pasta making, or making origami - where one person leads the session and the others follow from their own apartments & homes!\n\n## 🦄 Talk to people who aren't on your team\n\nThere are plenty of opportunities for me to talk with my teams through the course of the day, be it meetings, sprint ceremonies, pull requests, what have you. One thing that is markedly absent are the hallway conversations with people not on my team, such as folks in the Sales or Data teams. Having their perspective is super important for me to do my job, because it's a world so different from my own, that talking to people who are in it, helps shape my view on the business, and technology needed for that business.\n\nI have started having virtual cafes with folks now where we talk about things like wine collections, vinyl records and segue into meaty topics like concept based machine learning or what the programmatic sales landscape looks like these days.\n\n---\n\n## 💦 Drink water\n\nA day or so into working from home, I had a persistent headache, and I wasn't sure if it was from staring at the screen all day. Later I realized, that I was basically drinking no water during those days. I am used to drinking 1-1.5 portions of [my 48oz bottle](https://www.amazon.com/dp/B004H8BIKW/ref=twister_B071GL7NNN?_encoding=UTF8&th=1) each day at work.\n\nSince having that Eureka moment, I now always keep a fairly big glass of water right next to my computer which gets refilled each time it goes to zero (giving me a break each time to go fill it!)\n\n## ⏳ Reserve time for lunch\n\nI have never been a 'big lunch' kind of guy. My lunch breaks have typically been me at my desk perusing through news or something new in the tech world, be it [Product Hunt](http://producthunt.com/), [Dev.to](http://dev.to/), [Hacker News](https://news.ycombinator.com/) or something informational. When people see someone eating at their desk, it is common courtesy to not disturb them until they get done, unless there is some emergency. However, in this virtual space, no one knows you are eating, and those slack messages will come streaming in.\n\nIf you want to protect this time, put a Slack status or a calendar time block for that duration, to let people know that this is your lunch time, and they will respect it.\n\n## 🏋🏾‍♀️ Eating healthy and working out\n\nI don't think this is a point I need to talk about too much, because everyone is mostly aware of how easy it is to binge eat or not work out when you are home. I am not trying to get washboard abs at the end of this (never happened, never will), but making sure there is some physical activity, be it starting the day with some back strengthening exercises (damn you, lower back!!!) or doing 5 pushups between meetings, helps to get the blood flowing. Additionally, releasing those endorphins has proven to relieve stress and pain, which is great in these times.\n\nWhen it comes to food, I stick to 2 meals during the day (mostly breakfast & lunch) which tend to be some variation of healthy food. I try real hard to not snack on things unnecessarily, but am not always successful. When I feel hungry, as much as possible, I drink water instead to stave off those hunger pangs, because more often than not, I am thirsty and not hungry.\n\n## 📺 TV shows\n\nWho can ignore Netflix, Hulu, Amazon Prime or Disney Plus in these times? This is another kind of moot point, because unless you disconnect your internet, this isn't going to be avoided.\n\nWith that as the base scenario, I try to limit my hours on the tele. This is most exacerbated after work-hours or on weekends (surprise surprise, this is no different even in the non-wfh scenario) but this is where I try to reclaim my book reading hours, not always with a lot of success.\n\n## 🗞 Watch news in a measured way\n\nLast but 100% not the least, I make an effort to not watch/read too much news during the day. These are some trying times and people get sucked into following the news minute-by-minute to see the spread of the virus or to get the latest. Unfortunately, there isn't a whole lot to be gained at this point, except for ratcheting up your hopelessness or despair. The best you can do right now is keep your social distance, support local businesses, and do the best for your team and family. I am not suggesting you _don't_ keep yourself abreast of the zeitgeist. All I am advocating for is to consume it in a measured way, because news like alcohol should be consumed in moderate amounts (or so the wise folks say 😁)\n\nSince there is a ton of misinformation, and panic-forwards passing around, in the morning, I catch up on the [official Johns Hopkins Covid-19 website](https://gisanddata.maps.arcgis.com/apps/opsdashboard/index.html#/bda7594740fd40299423467b48e9ecf6) to get a sense of what the world is looking like, and once in the evening just after I log off, I will check in on the news for any breakthroughs or latest news that I should be aware of. Keeping the news flow to a trickle, and mostly to the factual representation of what the world looks like out there, has greatly helped me maintain a strong constitution in these times. Highly recommend this, if this is your cup of tea.",
      "code": "We are living in unprecedented times and for those of us who are fortunate enough to be able to work from home, there are three camps of people -\n\n1. People who have always worked from home\n2. People who have never worked from home\n3. People who have worked from home on and off\n\nI fall squarely in the third category. In the past, I have used Work from Home to mostly deal with situational circumstances -\n\n- \"Hey y'all, WFH today since the Plumber is coming in\"\n- \"Feeling a bit under the weather this AM, and will WFH. Online all day\"\n- \"Expecting package delivery. Need to be available in-person for pickup. WFH, available all day\"\n\nPersonally, going to a different physical space helps separate my work life from my daily life. Having that compartmentalization has proven to be very helpful for being effective in different aspects of my life.\n\nHowever, the last 2-3 weeks of working from home have blurred those lines significantly, not just for me, but for everyone who falls into categories 2 & 3 in the list above. In this new world, there are some things that I have come to appreciate and some things that I realize are missing from my daily routine that used to be there before.\n\n**This post is to highlight certain things I used to do in a physical office space, that I am trying to re-introduce into my virtual work environment.**\n\n---\n\n## 🏡 Create the \"right\" space\n\nI live in a 1-bedroom in Brooklyn and I have a designated space that is my work \"office\". It isn't a room. It isn't a cubicle. There is no physical separation of this place from the rest of the apartment, but it is what I have marked to be my workspace. While this might seem like mental high jinks, it is a pretty good trope to achieve that same level of compartmentalization that you get when you go to a physical office.\n\n## 🐒 Maintain good posture\n\nIn one of my work calls recently, I remarked that one reason I am looking forward to going back to the office, is to be able to use the chair at my desk again. The chair is nothing special, _but_ it is decently ergonomic, which is a godsend for my weak lower back. Having a good seating posture coupled with a good seating arrangement, is worth its weight in gold.\n\n## 🤸🏾‍♂️ Take breaks\n\nIt is so easy to forget to take breaks when you work remotely. When you are in an office, there are certain triggers that cause you to take breaks; whether it is the end of that 12pm meeting that makes you realize its time to get lunch, or someone tapping you on your shoulder asking you if you want to go for a coffee. These missing external triggers, make it really easy to forget to unplug yourself from your computer. I am making an effort to reintroduce these breaks, whether it is something like standing up and walking around the apartment, going and looking out of the window, fixing a snack or reading a book. I believe a clean break & return to work, revitalizes those neurons and makes you more effective at what you were working on.\n\nThere are plenty of ways to reinforce this behavior, whether its using the [Pomodoro technique](https://dariusforoux.com/takebreaks-pomodoro/) which someone made a [nifty chrome extension](https://chrome.google.com/webstore/detail/focusme-a-pomodoro-timer/koebbleaefghpjjmghelhjboilcmfpad?hl=en) for, or using something as simple as a clock or hourglass.\n\n## 🚊 No commute\n\nI have always viewed commute as a net positive. That is largely in-part, due to the usage of public transport (#MTA) which gives you plenty of time to do other things. If I were driving to work myself, I am not sure I would feel the same way, but since I haven't done it, I have no opinion on that. Being on the NYC subway though, has given me time to read books, listen to podcasts, or just meditate (I do not mean deep focus meditation, but more like lack of thoughts) before I get into the hubbub of work.\n\nNot having that, has been a pretty big change for me and this is something that I haven't been super successful at reintroducing just yet. I am mostly trying to be able to still read books, whether it is at tail-end of day or sometime in the middle on a break. However, if I can do it right, I will basically use the morning \"commute time\" to mimic what I used to do when I actually commuted. Reading a book from say 7am-8am, or trying to do some skill-building during this time, would be a pretty successful outcome in my opinion.\n\n---\n\n## ⏰ Work the \"right\" hours\n\nWorking from home makes it all too easy to lose track of time and boundaries. For people who are used to commuting into work (yours truly included), depending on the time taken to commute, your bio-clock ends up waking you up at the same time as before. As a result, there are more hours in the day all of a sudden, and it is all too easy to say \"I am up already, might as well clock in at work\". That is a slippery slope, and suddenly your 9am-5pm can start looking like 8am-6pm or 7am-7pm, which tends to get to an unsustainable pace.\n\nRather than waiting for it to get to that point, even if you don't feel the strain, be cognizant of how long you are _actually_ working, and make the effort to restrict that slippage for your own mental health. Make sure you also set some kind of working arrangement with your team and colleagues and set expectations of your available to ensure they don't schedule calls or meetings outside of those times.\n\n## 🤪 Find time to talk non-work stuff with your teammates\n\nWorking in the confines of your own apartment, focused on the screen and task at hand, makes it easy to not interact with your teammates and colleagues for anything non-work related. However, when you are in a physical space together, there are tons of micro-interactions and conversations that happen, that make relationships with your team well-oiled, and just shows your human side.\n\nTake the time to talk about things that are not work-related with your team and you can do so in all kinds of ways. Some things that we have been doing are\n\n- Setting up a water-cooler'esque channel for people to jump on and leave whenever they want to. This way anyone seeking conversation, which sometimes turn into sounding boards, can make it happen\n- Virtual happy hours to grab a brewski to decompress, at the end of the week\n- Team-building sessions like pasta making, or making origami - where one person leads the session and the others follow from their own apartments & homes!\n\n## 🦄 Talk to people who aren't on your team\n\nThere are plenty of opportunities for me to talk with my teams through the course of the day, be it meetings, sprint ceremonies, pull requests, what have you. One thing that is markedly absent are the hallway conversations with people not on my team, such as folks in the Sales or Data teams. Having their perspective is super important for me to do my job, because it's a world so different from my own, that talking to people who are in it, helps shape my view on the business, and technology needed for that business.\n\nI have started having virtual cafes with folks now where we talk about things like wine collections, vinyl records and segue into meaty topics like concept based machine learning or what the programmatic sales landscape looks like these days.\n\n---\n\n## 💦 Drink water\n\nA day or so into working from home, I had a persistent headache, and I wasn't sure if it was from staring at the screen all day. Later I realized, that I was basically drinking no water during those days. I am used to drinking 1-1.5 portions of [my 48oz bottle](https://www.amazon.com/dp/B004H8BIKW/ref=twister_B071GL7NNN?_encoding=UTF8&th=1) each day at work.\n\nSince having that Eureka moment, I now always keep a fairly big glass of water right next to my computer which gets refilled each time it goes to zero (giving me a break each time to go fill it!)\n\n## ⏳ Reserve time for lunch\n\nI have never been a 'big lunch' kind of guy. My lunch breaks have typically been me at my desk perusing through news or something new in the tech world, be it [Product Hunt](http://producthunt.com/), [Dev.to](http://dev.to/), [Hacker News](https://news.ycombinator.com/) or something informational. When people see someone eating at their desk, it is common courtesy to not disturb them until they get done, unless there is some emergency. However, in this virtual space, no one knows you are eating, and those slack messages will come streaming in.\n\nIf you want to protect this time, put a Slack status or a calendar time block for that duration, to let people know that this is your lunch time, and they will respect it.\n\n## 🏋🏾‍♀️ Eating healthy and working out\n\nI don't think this is a point I need to talk about too much, because everyone is mostly aware of how easy it is to binge eat or not work out when you are home. I am not trying to get washboard abs at the end of this (never happened, never will), but making sure there is some physical activity, be it starting the day with some back strengthening exercises (damn you, lower back!!!) or doing 5 pushups between meetings, helps to get the blood flowing. Additionally, releasing those endorphins has proven to relieve stress and pain, which is great in these times.\n\nWhen it comes to food, I stick to 2 meals during the day (mostly breakfast & lunch) which tend to be some variation of healthy food. I try real hard to not snack on things unnecessarily, but am not always successful. When I feel hungry, as much as possible, I drink water instead to stave off those hunger pangs, because more often than not, I am thirsty and not hungry.\n\n## 📺 TV shows\n\nWho can ignore Netflix, Hulu, Amazon Prime or Disney Plus in these times? This is another kind of moot point, because unless you disconnect your internet, this isn't going to be avoided.\n\nWith that as the base scenario, I try to limit my hours on the tele. This is most exacerbated after work-hours or on weekends (surprise surprise, this is no different even in the non-wfh scenario) but this is where I try to reclaim my book reading hours, not always with a lot of success.\n\n## 🗞 Watch news in a measured way\n\nLast but 100% not the least, I make an effort to not watch/read too much news during the day. These are some trying times and people get sucked into following the news minute-by-minute to see the spread of the virus or to get the latest. Unfortunately, there isn't a whole lot to be gained at this point, except for ratcheting up your hopelessness or despair. The best you can do right now is keep your social distance, support local businesses, and do the best for your team and family. I am not suggesting you _don't_ keep yourself abreast of the zeitgeist. All I am advocating for is to consume it in a measured way, because news like alcohol should be consumed in moderate amounts (or so the wise folks say 😁)\n\nSince there is a ton of misinformation, and panic-forwards passing around, in the morning, I catch up on the [official Johns Hopkins Covid-19 website](https://gisanddata.maps.arcgis.com/apps/opsdashboard/index.html#/bda7594740fd40299423467b48e9ecf6) to get a sense of what the world is looking like, and once in the evening just after I log off, I will check in on the news for any breakthroughs or latest news that I should be aware of. Keeping the news flow to a trickle, and mostly to the factual representation of what the world looks like out there, has greatly helped me maintain a strong constitution in these times. Highly recommend this, if this is your cup of tea."
    },
    "slug": "work-from-home",
    "path": "posts/work-from-home",
    "filePath": "work-from-home.mdx",
    "toc": [],
    "readingTime": {
      "text": "11 min read",
      "minutes": 10.16,
      "time": 609600,
      "words": 2032
    },
    "structuredData": {
      "@context": "https://schema.org",
      "@type": "BlogPosting",
      "headline": "Things I learned while working from home for 2 weeks",
      "datePublished": "2020-03-29T00:00:00.000Z",
      "dateModified": "2020-03-29T00:00:00.000Z",
      "description": "Thoughts on remote work 2 weeks after the Covid-19 lockdown",
      "image": "/static/images/twitter-card.png",
      "url": "https://arjunrao.co/posts/work-from-home"
    }
  },
  {
    "title": "Decoding the process of crafting new products",
    "date": "2024-05-15T00:00:00.000Z",
    "tags": [
      "productdevelopment",
      "pmf",
      "hustle"
    ],
    "lastmod": undefined,
    "draft": false,
    "summary": "Building new things at warp speed with the right people",
    "images": undefined,
    "authors": undefined,
    "layout": undefined,
    "bibliography": undefined,
    "canonicalUrl": undefined,
    "content": "The product continuum has 2 discrete parts: 0-1 and 1-n. Differently said, you first need to prove out the need for a product/feature and then you need to scale that product/feature. Both these parts require different strategies. \n\nUsing the 0-1 strategy when you are scaling will lead to unstable and unmaintainable products. Using the 1-n strategy while proving out market fit will cause you to be immeasurably slow. Beyond the development etiquette, there are also the points of setting user expectations. Honing your go to market strategy, identifying what to measure from a user adoption standpoint. All of which differ based on where you are in the continuum. \n\n*This article predominantly covers going from 0-1  and any exclusion of the 1-n is not due to the lack of applicability to the space but more so because that commentary is reserved for an upcoming article. Lets get back to it.*\n\nWhen you are going from 0-1, there are only 2 questions you need to answer when you decide how to build something - \n\n- **Will this introduce a new dimension of risk that could be unmaintainable or immeasurable?**\n- **Will this help me get the feature out to the users faster?**\n\nTo answer these questions, a high level framework you can apply for a particular decision is - \n\n![](/static/images/risk-matrix.webp)\n\nWhen you consider shipping new features or products, the path to users must be swift and follow the path of least resistance. It must be hyper clear to all involved that any work is vaporware until there is actual validation after the user has it in their hands. There is plenty of time after-the-fact, to correct for architectural decisions, scale considerations and such. Very rarely does one run into scenarios of massive unpreparedness like Instagram faced in its early days, so don’t over-engineer to solve for the million user problem. \n\nOn the other hand, this advice does not eliminate basic practices like foundational testing or instrumentation which you will need to answer no to the risk question above. However, it does provide boundaries to determine how deep you should go in a certain path or how wide you go given the options you are entertaining. \n\nWhen you are in the 0-1 phase, the people you need are quite different from the 1-n types. Oftentimes startups are where the need for 0-1 style developers (henceforth referred to as 0-1s) lie although that is not to say that larger enterprises don’t. The incentive structure (motivational rather than financial) and the agency these engineers are given, often determine how successful they are at applying those skills.\n\nGreat 0-1s are hard to find but there are some telling signs. Some characteristics include - \n\n- they love being close to the user problems \n- they love experimenting and tinkering \n- they dislike intense process \n- they can make effective tradeoffs without needing to consult with someone\n- they always keep an eye on the landscape for new and exciting ways to incorporate new products into their workflow / products \n- they are quick to demonstrate how things get done without getting caught up in the details \n- they are not easily satisfied with answers and are perennially curious \n- they go looking for trouble without being asked to \n- they have something going on outside of work not related directly to their proficiency - that they are very passionate about (teaching, church, magic etc)\n- they move extremely quickly when it comes to delivering something of value\n- they prefer show over tell \n- they target effectiveness over efficiency\n\nIt’s not all sunshine’s and rainbows with 0-1s. There can be several flags with them as well such as - \n\n- lack of attention to detail \n- sometimes bypassing best practices like tests and instrumentation or CI/CD\n- building things in a silo without telling other people \n- building things highly specific to the case in mind without a tiny bit of forward thinking (this can be a pro in many cases though) \n- disrupting the practices / system for other 1-n developers \n- always chasing the shiny toys which could frustrate other developers \n- not completing projects and moving from one thing to another without closing the loop on things \n\nThe killer hires would be people who not only have the features of both aspects of the continuum but also know when to exercise which muscles. Once you have that, you have set yourself up for having a great engineering team.",
    "_id": "zero-to-one.mdx",
    "_raw": {
      "flattenedPath": "zero-to-one"
    },
    "body": {
      "raw": "The product continuum has 2 discrete parts: 0-1 and 1-n. Differently said, you first need to prove out the need for a product/feature and then you need to scale that product/feature. Both these parts require different strategies. \n\nUsing the 0-1 strategy when you are scaling will lead to unstable and unmaintainable products. Using the 1-n strategy while proving out market fit will cause you to be immeasurably slow. Beyond the development etiquette, there are also the points of setting user expectations. Honing your go to market strategy, identifying what to measure from a user adoption standpoint. All of which differ based on where you are in the continuum. \n\n*This article predominantly covers going from 0-1  and any exclusion of the 1-n is not due to the lack of applicability to the space but more so because that commentary is reserved for an upcoming article. Lets get back to it.*\n\nWhen you are going from 0-1, there are only 2 questions you need to answer when you decide how to build something - \n\n- **Will this introduce a new dimension of risk that could be unmaintainable or immeasurable?**\n- **Will this help me get the feature out to the users faster?**\n\nTo answer these questions, a high level framework you can apply for a particular decision is - \n\n![](/static/images/risk-matrix.webp)\n\nWhen you consider shipping new features or products, the path to users must be swift and follow the path of least resistance. It must be hyper clear to all involved that any work is vaporware until there is actual validation after the user has it in their hands. There is plenty of time after-the-fact, to correct for architectural decisions, scale considerations and such. Very rarely does one run into scenarios of massive unpreparedness like Instagram faced in its early days, so don’t over-engineer to solve for the million user problem. \n\nOn the other hand, this advice does not eliminate basic practices like foundational testing or instrumentation which you will need to answer no to the risk question above. However, it does provide boundaries to determine how deep you should go in a certain path or how wide you go given the options you are entertaining. \n\nWhen you are in the 0-1 phase, the people you need are quite different from the 1-n types. Oftentimes startups are where the need for 0-1 style developers (henceforth referred to as 0-1s) lie although that is not to say that larger enterprises don’t. The incentive structure (motivational rather than financial) and the agency these engineers are given, often determine how successful they are at applying those skills.\n\nGreat 0-1s are hard to find but there are some telling signs. Some characteristics include - \n\n- they love being close to the user problems \n- they love experimenting and tinkering \n- they dislike intense process \n- they can make effective tradeoffs without needing to consult with someone\n- they always keep an eye on the landscape for new and exciting ways to incorporate new products into their workflow / products \n- they are quick to demonstrate how things get done without getting caught up in the details \n- they are not easily satisfied with answers and are perennially curious \n- they go looking for trouble without being asked to \n- they have something going on outside of work not related directly to their proficiency - that they are very passionate about (teaching, church, magic etc)\n- they move extremely quickly when it comes to delivering something of value\n- they prefer show over tell \n- they target effectiveness over efficiency\n\nIt’s not all sunshine’s and rainbows with 0-1s. There can be several flags with them as well such as - \n\n- lack of attention to detail \n- sometimes bypassing best practices like tests and instrumentation or CI/CD\n- building things in a silo without telling other people \n- building things highly specific to the case in mind without a tiny bit of forward thinking (this can be a pro in many cases though) \n- disrupting the practices / system for other 1-n developers \n- always chasing the shiny toys which could frustrate other developers \n- not completing projects and moving from one thing to another without closing the loop on things \n\nThe killer hires would be people who not only have the features of both aspects of the continuum but also know when to exercise which muscles. Once you have that, you have set yourself up for having a great engineering team.",
      "code": "The product continuum has 2 discrete parts: 0-1 and 1-n. Differently said, you first need to prove out the need for a product/feature and then you need to scale that product/feature. Both these parts require different strategies. \n\nUsing the 0-1 strategy when you are scaling will lead to unstable and unmaintainable products. Using the 1-n strategy while proving out market fit will cause you to be immeasurably slow. Beyond the development etiquette, there are also the points of setting user expectations. Honing your go to market strategy, identifying what to measure from a user adoption standpoint. All of which differ based on where you are in the continuum. \n\n*This article predominantly covers going from 0-1  and any exclusion of the 1-n is not due to the lack of applicability to the space but more so because that commentary is reserved for an upcoming article. Lets get back to it.*\n\nWhen you are going from 0-1, there are only 2 questions you need to answer when you decide how to build something - \n\n- **Will this introduce a new dimension of risk that could be unmaintainable or immeasurable?**\n- **Will this help me get the feature out to the users faster?**\n\nTo answer these questions, a high level framework you can apply for a particular decision is - \n\n![](/static/images/risk-matrix.webp)\n\nWhen you consider shipping new features or products, the path to users must be swift and follow the path of least resistance. It must be hyper clear to all involved that any work is vaporware until there is actual validation after the user has it in their hands. There is plenty of time after-the-fact, to correct for architectural decisions, scale considerations and such. Very rarely does one run into scenarios of massive unpreparedness like Instagram faced in its early days, so don’t over-engineer to solve for the million user problem. \n\nOn the other hand, this advice does not eliminate basic practices like foundational testing or instrumentation which you will need to answer no to the risk question above. However, it does provide boundaries to determine how deep you should go in a certain path or how wide you go given the options you are entertaining. \n\nWhen you are in the 0-1 phase, the people you need are quite different from the 1-n types. Oftentimes startups are where the need for 0-1 style developers (henceforth referred to as 0-1s) lie although that is not to say that larger enterprises don’t. The incentive structure (motivational rather than financial) and the agency these engineers are given, often determine how successful they are at applying those skills.\n\nGreat 0-1s are hard to find but there are some telling signs. Some characteristics include - \n\n- they love being close to the user problems \n- they love experimenting and tinkering \n- they dislike intense process \n- they can make effective tradeoffs without needing to consult with someone\n- they always keep an eye on the landscape for new and exciting ways to incorporate new products into their workflow / products \n- they are quick to demonstrate how things get done without getting caught up in the details \n- they are not easily satisfied with answers and are perennially curious \n- they go looking for trouble without being asked to \n- they have something going on outside of work not related directly to their proficiency - that they are very passionate about (teaching, church, magic etc)\n- they move extremely quickly when it comes to delivering something of value\n- they prefer show over tell \n- they target effectiveness over efficiency\n\nIt’s not all sunshine’s and rainbows with 0-1s. There can be several flags with them as well such as - \n\n- lack of attention to detail \n- sometimes bypassing best practices like tests and instrumentation or CI/CD\n- building things in a silo without telling other people \n- building things highly specific to the case in mind without a tiny bit of forward thinking (this can be a pro in many cases though) \n- disrupting the practices / system for other 1-n developers \n- always chasing the shiny toys which could frustrate other developers \n- not completing projects and moving from one thing to another without closing the loop on things \n\nThe killer hires would be people who not only have the features of both aspects of the continuum but also know when to exercise which muscles. Once you have that, you have set yourself up for having a great engineering team."
    },
    "slug": "zero-to-one",
    "path": "posts/zero-to-one",
    "filePath": "zero-to-one.mdx",
    "toc": [],
    "readingTime": {
      "text": "4 min read",
      "minutes": 3.72,
      "time": 223200,
      "words": 744
    },
    "structuredData": {
      "@context": "https://schema.org",
      "@type": "BlogPosting",
      "headline": "Decoding the process of crafting new products",
      "datePublished": "2024-05-15T00:00:00.000Z",
      "dateModified": "2024-05-15T00:00:00.000Z",
      "description": "Building new things at warp speed with the right people",
      "image": "/static/images/twitter-card.png",
      "url": "https://arjunrao.co/posts/zero-to-one"
    }
  }
]